<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>Microsoft.VisualStudio.Text.Data</name>
  </assembly>
  <members>
    <member name="T:Microsoft.VisualStudio.Text.ContentTypeChangedEventArgs">
      <summary>
        <see cref="T:Microsoft.VisualStudio.Text.ITextBuffer" />의 <see cref="T:Microsoft.VisualStudio.Utilities.IContentType" />에 대한 변경 관련 정보를 제공합니다.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.ContentTypeChangedEventArgs.#ctor(Microsoft.VisualStudio.Text.ITextSnapshot,Microsoft.VisualStudio.Text.ITextSnapshot,Microsoft.VisualStudio.Utilities.IContentType,Microsoft.VisualStudio.Utilities.IContentType,System.Object)">
      <summary>지정된 전/후 스냅숏과 전/후 콘텐츠 형식을 사용하여 <see cref="T:Microsoft.VisualStudio.Text.ContentTypeChangedEventArgs" />의 새 인스턴스를 초기화합니다.</summary>
      <param name="beforeSnapshot">변경이 발생하기 전 가장 최근의 <see cref="T:Microsoft.VisualStudio.Text.ITextSnapshot" />입니다.</param>
      <param name="afterSnapshot">변경이 발생한 직후의 <see cref="T:Microsoft.VisualStudio.Text.ITextSnapshot" />입니다.</param>
      <param name="beforeContentType">변경이 발생하기 전의 <see cref="T:Microsoft.VisualStudio.Utilities.IContentType" />입니다.</param>
      <param name="afterContentType">변경이 발생한 후의 <see cref="T:Microsoft.VisualStudio.Utilities.IContentType" />입니다.</param>
      <param name="editTag">이 변경과 관련된 임의의 개체입니다.</param>
      <exception cref="T:System.ArgumentNullException">One of <paramref name="beforeSnapshot" />, <paramref name="afterSnapshot" />, <paramref name="beforeContentType" />, or <paramref name="afterContentType" /> is null.</exception>
    </member>
    <member name="P:Microsoft.VisualStudio.Text.ContentTypeChangedEventArgs.AfterContentType">
      <summary>변경이 발생한 후의 <see cref="T:Microsoft.VisualStudio.Utilities.IContentType" />입니다.</summary>
      <returns>변경 후 콘텐츠 형식입니다.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.Text.ContentTypeChangedEventArgs.BeforeContentType">
      <summary>변경이 발생하기 전의 <see cref="T:Microsoft.VisualStudio.Utilities.IContentType" />입니다.</summary>
      <returns>변경 전 콘텐츠 형식입니다.</returns>
    </member>
    <member name="T:Microsoft.VisualStudio.Text.CustomTrackToVersion">
      <summary>사용자 지정 범위 추적 구현을 제공합니다. 이 대리자는 사용자 지정 추적 범위에서 구현해야 합니다.</summary>
      <returns>
        <paramref name="currentSpan" />에서 추적할 범위입니다.</returns>
      <param name="customSpan">추적할 범위입니다.</param>
      <param name="currentVersion">
        <paramref name="currentSpan" />이 속하는 버전입니다.</param>
      <param name="targetVersion">
        <paramref name="currentSpan" />을 추적할 버전입니다.</param>
      <param name="currentSpan">추적할 범위입니다.</param>
      <param name="customState">범위가 만들어질 때 제공된 사용자 지정 상태입니다.</param>
    </member>
    <member name="T:Microsoft.VisualStudio.Text.DynamicReadOnlyRegionQuery">
      <summary>읽기 전용 편집 영역을 알리기 위한 콜백 대리자입니다.</summary>
      <returns>읽기 전용 영역이 적용되는지 여부를 나타냅니다.</returns>
      <param name="isEdit">편집이 시도되고 있으면 true이고, 읽기 전용 확인에서 파생 작업이 없으면 false입니다.</param>
    </member>
    <member name="T:Microsoft.VisualStudio.Text.EdgeInsertionMode">
      <summary>읽기 전용 영역의 가장자리 삽입 모드를 지정합니다.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Text.EdgeInsertionMode.Allow">
      <summary>읽기 전용 영역의 가장자리에서 삽입을 허용합니다. 가장자리 삽입을 허용하는 읽기 전용 영역 [3, 6]이 있을 경우 위치 3 또는 위치 6의 삽입이 성공합니다.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Text.EdgeInsertionMode.Deny">
      <summary>읽기 전용 영역의 가장자리에서 삽입을 금지합니다. 가장자리 삽입을 금지하는 읽기 전용 영역 [3, 6]이 있을 경우 위치 3 또는 위치 6의 삽입이 실패합니다.</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.Text.EditOptions">
      <summary>텍스트 편집 트랜잭션에 적용할 수 있는 옵션입니다.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.EditOptions.#ctor(Microsoft.VisualStudio.Text.Differencing.StringDifferenceOptions)">
      <summary>지정된 <see cref="T:Microsoft.VisualStudio.Text.Differencing.StringDifferenceOptions" />를 사용하여 최소한의 차이를 계산하기 위한 <see cref="T:Microsoft.VisualStudio.Text.EditOptions" />의 새 인스턴스를 초기화합니다.</summary>
      <param name="differenceOptions">문자열 차이 옵션입니다.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.EditOptions.#ctor(System.Boolean,Microsoft.VisualStudio.Text.Differencing.StringDifferenceOptions)">
      <summary>
        <see cref="T:Microsoft.VisualStudio.Text.EditOptions" />의 새 인스턴스를 초기화합니다.</summary>
      <param name="computeMinimalChange">최소한의 차이를 계산하는 경우 true이고, 그렇지 않으면 false입니다.</param>
      <param name="differenceOptions">
        <see cref="T:Microsoft.VisualStudio.Text.Differencing.StringDifferenceOptions" />입니다.</param>
    </member>
    <member name="P:Microsoft.VisualStudio.Text.EditOptions.ComputeMinimalChange">
      <summary>최소한의 변경 내용을 계산할지 여부를 확인합니다.</summary>
      <returns>최소한의 변경 내용을 계산하는 경우 true입니다.</returns>
    </member>
    <member name="F:Microsoft.VisualStudio.Text.EditOptions.DefaultMinimalChange">
      <summary>줄 및 단어 문자열 차이를 사용하여 이 편집을 최소한의 변경 내용으로 전환합니다.</summary>
    </member>
    <member name="P:Microsoft.VisualStudio.Text.EditOptions.DifferenceOptions">
      <summary>
        <see cref="P:Microsoft.VisualStudio.Text.EditOptions.ComputeMinimalChange" />가 true인 경우 이 편집의 차이 옵션입니다.</summary>
      <returns>
        <see cref="T:Microsoft.VisualStudio.Text.Differencing.StringDifferenceOptions" />입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.EditOptions.Equals(System.Object)">
      <summary>두 옵션 집합이 같은지 여부를 확인합니다.</summary>
      <returns>두 개체가 같으면 true이고, 그렇지 않으면 false입니다.</returns>
      <param name="obj">비교할 개체입니다.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.EditOptions.GetHashCode">
      <summary>형식에 대한 해시 함수를 제공합니다.</summary>
      <returns>해시 코드입니다.</returns>
    </member>
    <member name="F:Microsoft.VisualStudio.Text.EditOptions.None">
      <summary>특별하게 처리되지 않습니다.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.EditOptions.op_Equality(Microsoft.VisualStudio.Text.EditOptions,Microsoft.VisualStudio.Text.EditOptions)">
      <summary>두 EditOptions가 같은지 여부를 확인합니다.</summary>
      <returns>두 옵션 집합이 같으면 true이고, 그렇지 않으면 false입니다.</returns>
      <param name="left">왼쪽 옵션 집합입니다.</param>
      <param name="right">오른쪽 옵션 집합입니다.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.EditOptions.op_Inequality(Microsoft.VisualStudio.Text.EditOptions,Microsoft.VisualStudio.Text.EditOptions)">
      <summary>두 EditOptions가 다른지 여부를 확인합니다.</summary>
      <returns>두 집합이 다르면 true이고, 그렇지 않으면 false입니다.</returns>
      <param name="left">왼쪽 옵션 집합입니다.</param>
      <param name="right">오른쪽 옵션 집합입니다.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.EditOptions.ToString">
      <summary>이 편집 옵션의 문자열 표현을 제공합니다.</summary>
      <returns>문자열입니다.</returns>
    </member>
    <member name="T:Microsoft.VisualStudio.Text.EncodingChangedEventArgs">
      <summary>
        <see cref="E:Microsoft.VisualStudio.Text.ITextDocument.EncodingChanged" /> 이벤트에 대한 정보를 제공합니다.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.EncodingChangedEventArgs.#ctor(System.Text.Encoding,System.Text.Encoding)">
      <summary>
        <see cref="T:Microsoft.VisualStudio.Text.EncodingChangedEventArgs" />의 새 인스턴스를 초기화합니다.</summary>
      <param name="oldEncoding">이전 인코딩입니다.</param>
      <param name="newEncoding">새 인코딩입니다.</param>
    </member>
    <member name="P:Microsoft.VisualStudio.Text.EncodingChangedEventArgs.NewEncoding">
      <summary>새 인코딩을 가져옵니다.</summary>
    </member>
    <member name="P:Microsoft.VisualStudio.Text.EncodingChangedEventArgs.OldEncoding">
      <summary>이전 인코딩을 가져옵니다.</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.Text.FileActionTypes">
      <summary>파일 작업 형식을 설명합니다.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Text.FileActionTypes.ContentSavedToDisk">
      <summary>콘텐츠가 디스크에 저장되었습니다.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Text.FileActionTypes.ContentLoadedFromDisk">
      <summary>콘텐츠가 디스크에서 로드되었습니다.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Text.FileActionTypes.DocumentRenamed">
      <summary>문서의 이름이 바뀌었습니다.</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.Text.IEncodingDetector">
      <summary>스트림과 관련된 텍스트 인코딩을 감지하려고 시도합니다.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.IEncodingDetector.GetStreamEncoding(System.IO.Stream)">
      <summary>스트림과 관련된 인코딩을 감지하려고 시도합니다.</summary>
      <returns>감지된 인코딩이거나, 인코딩을 확인할 수 없는 경우 null입니다.</returns>
      <param name="stream">읽을 스트림입니다.</param>
    </member>
    <member name="T:Microsoft.VisualStudio.Text.IExtensionErrorHandler">
      <summary>편집기 호스트가 확장 지점에서 캡처된 예외를 감지하도록 허용합니다.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.IExtensionErrorHandler.HandleError(System.Object,System.Exception)">
      <summary>예외가 발생했음을 알립니다.</summary>
      <param name="sender">예외를 throw한 확장 개체 또는 이벤트 처리기입니다.</param>
      <param name="exception">throw된 예외입니다.</param>
    </member>
    <member name="T:Microsoft.VisualStudio.Text.IMappingPoint">
      <summary>
        <see cref="T:Microsoft.VisualStudio.Text.Projection.IBufferGraph" /> 내에 매핑할 수 있는 <see cref="T:Microsoft.VisualStudio.Text.ITextBuffer" />의 위치입니다.</summary>
    </member>
    <member name="P:Microsoft.VisualStudio.Text.IMappingPoint.AnchorBuffer">
      <summary>이 지점이 만들어진 <see cref="T:Microsoft.VisualStudio.Text.ITextBuffer" />입니다.</summary>
    </member>
    <member name="P:Microsoft.VisualStudio.Text.IMappingPoint.BufferGraph">
      <summary>이 지점에서 매핑을 수행하는 데 사용할 <see cref="T:Microsoft.VisualStudio.Text.Projection.IBufferGraph" />입니다.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.IMappingPoint.GetInsertionPoint(System.Predicate{Microsoft.VisualStudio.Text.ITextBuffer})">
      <summary>지점을 일치하는 <see cref="T:Microsoft.VisualStudio.Text.ITextBuffer" />의 삽입 지점에 매핑합니다.</summary>
      <returns>일치하는 버퍼의 <see cref="T:Microsoft.VisualStudio.Text.SnapshotPoint" />이거나, 지점이 해당 버퍼에 나타나지 않는 경우 null입니다.</returns>
      <param name="match">
        <see cref="T:Microsoft.VisualStudio.Text.ITextBuffer" />를 일치시키는 데 사용되는 조건자입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="match" /> is null.</exception>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.IMappingPoint.GetPoint(Microsoft.VisualStudio.Text.ITextBuffer,Microsoft.VisualStudio.Text.PositionAffinity)">
      <summary>지점을 특정 <see cref="T:Microsoft.VisualStudio.Text.ITextBuffer" />에 매핑합니다.</summary>
      <returns>대상 버퍼의 <see cref="T:Microsoft.VisualStudio.Text.SnapshotPoint" />이거나, 지점 및 선호도가 해당 버퍼에 나타나지 않는 경우 null입니다.</returns>
      <param name="targetBuffer">지점을 매핑할 <see cref="T:Microsoft.VisualStudio.Text.ITextBuffer" />입니다.</param>
      <param name="affinity">매핑이 모호한 경우, 즉 위치가 소스 범위 경계에 있을 경우 이 매개 변수는 다음과 같이 매핑에 영향을 줍니다. <paramref name="affinity" />가 <see cref="F:Microsoft.VisualStudio.Text.PositionAffinity.Predecessor" />이면 매핑할 때 앵커 버퍼의 선행 문자 바로 뒤가 대상 위치가 됩니다. <paramref name="affinity" />가 <see cref="F:Microsoft.VisualStudio.Text.PositionAffinity.Successor" />이면 매핑할 때 앵커 버퍼의 후행 문자 바로 앞이 대상 위치가 됩니다. 매핑이 명확한 경우 이 매개 변수는 아무런 영향을 주지 않습니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="targetBuffer" /> is null.</exception>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.IMappingPoint.GetPoint(Microsoft.VisualStudio.Text.ITextSnapshot,Microsoft.VisualStudio.Text.PositionAffinity)">
      <summary>지점을 특정 <see cref="T:Microsoft.VisualStudio.Text.ITextSnapshot" />에 매핑합니다.</summary>
      <returns>null을 허용하는 <see cref="T:Microsoft.VisualStudio.Text.SnapshotPoint" />입니다.</returns>
      <param name="targetSnapshot">지점을 매핑할 <see cref="T:Microsoft.VisualStudio.Text.ITextSnapshot" />입니다.</param>
      <param name="affinity">매핑이 모호한 경우, 즉 위치가 소스 범위 경계에 있을 경우 이 매개 변수는 다음과 같이 매핑에 영향을 줍니다. <paramref name="affinity" />가 <see cref="F:Microsoft.VisualStudio.Text.PositionAffinity.Predecessor" />이면 매핑할 때 앵커 버퍼의 선행 문자 바로 뒤가 대상 위치가 됩니다. <paramref name="affinity" />가 <see cref="F:Microsoft.VisualStudio.Text.PositionAffinity.Successor" />이면 매핑할 때 앵커 버퍼의 후행 문자 바로 앞이 대상 위치가 됩니다. 매핑이 명확한 경우 이 매개 변수는 아무런 영향을 주지 않습니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="targetSnapshot" /> is null.</exception>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.IMappingPoint.GetPoint(System.Predicate{Microsoft.VisualStudio.Text.ITextBuffer},Microsoft.VisualStudio.Text.PositionAffinity)">
      <summary>지점을 일치하는 <see cref="T:Microsoft.VisualStudio.Text.ITextBuffer" />에 매핑합니다.</summary>
      <returns>일치하는 버퍼의 <see cref="T:Microsoft.VisualStudio.Text.SnapshotPoint" />이거나, 지점 및 선호도가 해당 버퍼에 나타나지 않는 경우 null입니다.</returns>
      <param name="match">
        <see cref="T:Microsoft.VisualStudio.Text.ITextBuffer" />를 일치시키는 데 사용되는 조건자입니다.</param>
      <param name="affinity">매핑이 모호한 경우, 즉 위치가 소스 범위 경계에 있을 경우 이 매개 변수는 다음과 같이 매핑에 영향을 줍니다. <paramref name="affinity" />가 <see cref="F:Microsoft.VisualStudio.Text.PositionAffinity.Predecessor" />이면 매핑할 때 앵커 버퍼의 선행 문자 바로 뒤가 대상 위치가 됩니다. <paramref name="affinity" />가 <see cref="F:Microsoft.VisualStudio.Text.PositionAffinity.Successor" />이면 매핑할 때 앵커 버퍼의 후행 문자 바로 앞이 대상 위치가 됩니다. 매핑이 명확한 경우 이 매개 변수는 아무런 영향을 주지 않습니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="match" /> is null.</exception>
    </member>
    <member name="T:Microsoft.VisualStudio.Text.IMappingSpan">
      <summary>
        <see cref="T:Microsoft.VisualStudio.Text.Projection.IBufferGraph" /> 내에 매핑할 수 있는 <see cref="T:Microsoft.VisualStudio.Text.ITextBuffer" />의 범위입니다.</summary>
    </member>
    <member name="P:Microsoft.VisualStudio.Text.IMappingSpan.AnchorBuffer">
      <summary>이 범위가 만들어진 <see cref="T:Microsoft.VisualStudio.Text.ITextBuffer" />를 가져옵니다.</summary>
    </member>
    <member name="P:Microsoft.VisualStudio.Text.IMappingSpan.BufferGraph">
      <summary>이 범위에서 매핑을 수행하는 데 사용할 <see cref="T:Microsoft.VisualStudio.Text.Projection.IBufferGraph" />를 가져옵니다.</summary>
    </member>
    <member name="P:Microsoft.VisualStudio.Text.IMappingSpan.End">
      <summary>이 범위의 끝 <see cref="T:Microsoft.VisualStudio.Text.IMappingPoint" />를 가져옵니다.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.IMappingSpan.GetSpans(Microsoft.VisualStudio.Text.ITextBuffer)">
      <summary>범위를 특정 <see cref="T:Microsoft.VisualStudio.Text.ITextBuffer" />에 매핑합니다.</summary>
      <returns>범위를 매핑할 <paramref name="targetBuffer" />의 범위 컬렉션으로 비어 있을 수 있습니다.</returns>
      <param name="targetBuffer">범위를 매핑할 <see cref="T:Microsoft.VisualStudio.Text.ITextBuffer" />입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="targetBuffer" /> is null.</exception>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.IMappingSpan.GetSpans(Microsoft.VisualStudio.Text.ITextSnapshot)">
      <summary>범위를 특정 <see cref="T:Microsoft.VisualStudio.Text.ITextSnapshot" />에 매핑합니다.</summary>
      <returns>범위를 매핑할 <paramref name="targetSnapshot" />의 범위 컬렉션으로 비어 있을 수 있습니다.</returns>
      <param name="targetSnapshot">범위를 매핑할 <see cref="T:Microsoft.VisualStudio.Text.ITextSnapshot" />입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="targetSnapshot" /> is null.</exception>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.IMappingSpan.GetSpans(System.Predicate{Microsoft.VisualStudio.Text.ITextBuffer})">
      <summary>범위를 일치하는 <see cref="T:Microsoft.VisualStudio.Text.ITextBuffer" />에 매핑합니다.</summary>
      <returns>일치하는 버퍼의 범위 컬렉션으로 비어 있을 수 있습니다.</returns>
      <param name="match">
        <see cref="T:Microsoft.VisualStudio.Text.ITextBuffer" />를 식별하는 데 사용되는 조건자입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="match" /> is null.</exception>
    </member>
    <member name="P:Microsoft.VisualStudio.Text.IMappingSpan.Start">
      <summary>이 범위의 시작 <see cref="T:Microsoft.VisualStudio.Text.IMappingPoint" />를 가져옵니다.</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.Text.INormalizedTextChangeCollection">
      <summary>
        <see cref="T:Microsoft.VisualStudio.Text.ITextChange" /> 개체의 정규화된 목록입니다. 변경 내용이 위치를 기준으로 오름차순으로 정렬되고 인접 및 중첩된 변경 내용은 단일 변경 내용으로 결합됩니다.</summary>
    </member>
    <member name="P:Microsoft.VisualStudio.Text.INormalizedTextChangeCollection.IncludesLineChanges">
      <summary>이 목록의 <see cref="T:Microsoft.VisualStudio.Text.ITextChange" /> 개체 중에 0이 아닌 <see cref="P:Microsoft.VisualStudio.Text.ITextChange.LineCountDelta" />가 있는지 여부를 확인합니다.</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.Text.IReadOnlyRegion">
      <summary>비어 있을 수 있는 읽기 전용 텍스트 영역을 추적하는 핸들입니다.</summary>
    </member>
    <member name="P:Microsoft.VisualStudio.Text.IReadOnlyRegion.EdgeInsertionMode">
      <summary>읽기 전용 영역의 가장자리 삽입 동작입니다.</summary>
      <returns>
        <see cref="T:Microsoft.VisualStudio.Text.EdgeInsertionMode" />입니다.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.Text.IReadOnlyRegion.QueryCallback">
      <summary>읽기 전용 영역에 읽기 전용 확인 및 편집을 알리는 대리자입니다.</summary>
      <returns>
        <see cref="T:Microsoft.VisualStudio.Text.DynamicReadOnlyRegionQuery" />입니다.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.Text.IReadOnlyRegion.Span">
      <summary>이 영역에서 읽기 전용으로 표시된 텍스트 범위입니다.</summary>
      <returns>
        <see cref="T:Microsoft.VisualStudio.Text.ITrackingSpan" />입니다.</returns>
    </member>
    <member name="T:Microsoft.VisualStudio.Text.IReadOnlyRegionEdit">
      <summary>
        <see cref="T:Microsoft.VisualStudio.Text.ITextBuffer" />에 대한 원자 단위의 읽기 전용 영역 편집 작업 집합을 제공합니다. <see cref="T:Microsoft.VisualStudio.Text.IReadOnlyRegionEdit" /> 개체가 만들어졌을 당시 <see cref="T:Microsoft.VisualStudio.Text.ITextBuffer" />의 상태를 기준으로 편집 위치가 지정됩니다.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.IReadOnlyRegionEdit.CreateDynamicReadOnlyRegion(Microsoft.VisualStudio.Text.Span,Microsoft.VisualStudio.Text.SpanTrackingMode,Microsoft.VisualStudio.Text.EdgeInsertionMode,Microsoft.VisualStudio.Text.DynamicReadOnlyRegionQuery)">
      <summary>이 버퍼의 텍스트 범위를 조건부 읽기 전용으로 표시하여 영역이 쿼리되는 경우 확인을 수행하도록 합니다. 범위는 다시 쓰기 가능으로 표시되거나 강제로 쓰기 가능해 질 때까지 읽기 전용으로 유지됩니다.</summary>
      <returns>이 읽기 전용 영역을 추적하는 데 사용되는 <see cref="T:Microsoft.VisualStudio.Text.IReadOnlyRegion" />입니다. 이 개체는 읽기 전용 영역을 제거하는 데 사용됩니다.</returns>
      <param name="span">읽기 전용으로 표시할 범위입니다.</param>
      <param name="trackingMode">읽기 전용 영역의 추적 동작을 지정합니다.</param>
      <param name="edgeInsertionMode">읽기 전용 영역의 가장자리 삽입 동작을 지정합니다.</param>
      <param name="callback">읽기 전용 영역에 읽기 전용 확인 및 편집을 알리는 대리자입니다. null일 수 있습니다.<see cref="P:Microsoft.VisualStudio.Text.IReadOnlyRegion.QueryCallback" />을 참조하십시오.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="span" /> is null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="span" /> is past the end of the buffer.</exception>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.IReadOnlyRegionEdit.CreateReadOnlyRegion(Microsoft.VisualStudio.Text.Span)">
      <summary>이 버퍼의 텍스트 범위를 읽기 전용으로 표시합니다. 범위는 <see cref="T:Microsoft.VisualStudio.Text.IReadOnlyRegion" />이 제거될 때까지 읽기 전용으로 유지됩니다.</summary>
      <returns>이 읽기 전용 영역을 추적하는 데 사용되는 <see cref="T:Microsoft.VisualStudio.Text.IReadOnlyRegion" />입니다. 이 개체는 읽기 전용 영역을 제거하는 데 사용됩니다.</returns>
      <param name="span">읽기 전용으로 표시할 범위입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="span" /> is null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="span" /> is past the end of the buffer.</exception>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.IReadOnlyRegionEdit.CreateReadOnlyRegion(Microsoft.VisualStudio.Text.Span,Microsoft.VisualStudio.Text.SpanTrackingMode,Microsoft.VisualStudio.Text.EdgeInsertionMode)">
      <summary>이 버퍼의 텍스트 범위를 읽기 전용으로 표시합니다. 범위는 다시 쓰기 가능으로 표시되거나 강제로 쓰기 가능해 질 때까지 읽기 전용으로 유지됩니다.</summary>
      <returns>이 읽기 전용 영역을 추적하는 데 사용되는 <see cref="T:Microsoft.VisualStudio.Text.IReadOnlyRegion" />입니다. 이 개체는 읽기 전용 영역을 제거하는 데 사용됩니다.</returns>
      <param name="span">읽기 전용으로 표시할 범위입니다.</param>
      <param name="trackingMode">읽기 전용 영역의 추적 동작을 지정합니다.</param>
      <param name="edgeInsertionMode">읽기 전용 영역의 가장자리 삽입 동작을 지정합니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="span" /> is null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="span" /> is past the end of the buffer.</exception>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.IReadOnlyRegionEdit.RemoveReadOnlyRegion(Microsoft.VisualStudio.Text.IReadOnlyRegion)">
      <summary>이 버퍼의 읽기 전용 영역 목록에서 해당 읽기 전용 영역을 제거합니다.</summary>
      <param name="readOnlyRegion">제거할 읽기 전용 영역입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="readOnlyRegion" /> is null.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="readOnlyRegion" /> was created on another buffer.</exception>
    </member>
    <member name="T:Microsoft.VisualStudio.Text.ITextBuffer">
      <summary>UTF-16을 사용하여 인코딩된 유니코드 문자로 구성된 변경할 수 있는 시퀀스입니다. 버퍼 내 위치는 문자 시퀀스(문자 0부터 시작) 또는 줄 시퀀스(줄 0부터 시작)로 처리됩니다. 빈 버퍼에는 문자가 포함되지 않은 단일 줄이 있습니다.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.ITextBuffer.ChangeContentType(Microsoft.VisualStudio.Utilities.IContentType,System.Object)">
      <summary>이 <see cref="T:Microsoft.VisualStudio.Text.ITextBuffer" />의 <see cref="T:Microsoft.VisualStudio.Utilities.IContentType" />을 변경합니다.</summary>
      <param name="newContentType">새 <see cref="T:Microsoft.VisualStudio.Utilities.IContentType" />입니다.</param>
      <param name="editTag">이 편집 트랜잭션에 연결할 임의의 개체입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="newContentType" /> is null.</exception>
      <exception cref="T:System.InvalidOperationException">Another <see cref="T:Microsoft.VisualStudio.Text.ITextBufferEdit" /> object is active for this <see cref="T:Microsoft.VisualStudio.Text.ITextBuffer" />.</exception>
    </member>
    <member name="E:Microsoft.VisualStudio.Text.ITextBuffer.Changed">
      <summary>비어 있지 않은 <see cref="T:Microsoft.VisualStudio.Text.ITextEdit" />가 성공적으로 적용되는 경우 발생합니다.</summary>
    </member>
    <member name="E:Microsoft.VisualStudio.Text.ITextBuffer.ChangedHighPriority">
      <summary>비어 있지 않은 <see cref="T:Microsoft.VisualStudio.Text.ITextEdit" />가 성공적으로 적용되는 경우 발생합니다.</summary>
    </member>
    <member name="E:Microsoft.VisualStudio.Text.ITextBuffer.ChangedLowPriority">
      <summary>비어 있지 않은 <see cref="T:Microsoft.VisualStudio.Text.ITextEdit" />가 성공적으로 적용되는 경우 발생합니다.</summary>
    </member>
    <member name="E:Microsoft.VisualStudio.Text.ITextBuffer.Changing">
      <summary>비어 있지 않은 <see cref="T:Microsoft.VisualStudio.Text.ITextEdit" />가 적용되기 직전에 발생합니다.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.ITextBuffer.CheckEditAccess">
      <summary>이 텍스트 버퍼에 대한 편집 작업이 호출 스레드에서 허용되는지 여부를 확인합니다.</summary>
      <returns>
            호출 스레드에서 편집 작업을 수행할 수 있으면 true이고, 그렇지 않으면 false입니다.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.Text.ITextBuffer.ContentType">
      <summary>버퍼의 텍스트 콘텐츠 형식을 가져옵니다.</summary>
    </member>
    <member name="E:Microsoft.VisualStudio.Text.ITextBuffer.ContentTypeChanged">
      <summary>
        <see cref="T:Microsoft.VisualStudio.Utilities.IContentType" />이 변경될 때마다 발생합니다.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.ITextBuffer.CreateEdit">
      <summary>이 버퍼에 대한 복합 편집 작업을 처리하는 <see cref="T:Microsoft.VisualStudio.Text.ITextEdit" /> 개체를 만듭니다.</summary>
      <returns>새 <see cref="T:Microsoft.VisualStudio.Text.ITextEdit" /> 개체입니다.</returns>
      <exception cref="T:System.InvalidOperationException">Another <see cref="T:Microsoft.VisualStudio.Text.ITextBufferEdit" /> object is active for this text buffer.</exception>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.ITextBuffer.CreateEdit(Microsoft.VisualStudio.Text.EditOptions,System.Nullable{System.Int32},System.Object)">
      <summary>이 버퍼에 대한 복합 편집 작업을 처리하는 <see cref="T:Microsoft.VisualStudio.Text.ITextEdit" /> 개체를 만듭니다.</summary>
      <returns>새 <see cref="T:Microsoft.VisualStudio.Text.ITextEdit" /> 개체입니다.</returns>
      <param name="options">복합 편집 작업에 적용할 옵션입니다.</param>
      <param name="reiteratedVersionNumber">null이 아닌 경우 이 편집 작업에서 만드는 버전이 실행 취소 또는 다시 실행 작업의 결과임을 나타냅니다.</param>
      <param name="editTag">이 편집 트랜잭션에 연결할 개체입니다.</param>
      <exception cref="T:System.InvalidOperationException">Another <see cref="T:Microsoft.VisualStudio.Text.ITextBufferEdit" /> object is active for this text buffer.</exception>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.ITextBuffer.CreateReadOnlyRegionEdit">
      <summary>이 버퍼에서 읽기 전용 영역을 추가하거나 제거하는 작업을 처리하는 <see cref="T:Microsoft.VisualStudio.Text.IReadOnlyRegionEdit" /> 개체를 만듭니다.</summary>
      <returns>새 <see cref="T:Microsoft.VisualStudio.Text.IReadOnlyRegionEdit" /> 개체입니다.</returns>
      <exception cref="T:System.InvalidOperationException">Another <see cref="T:Microsoft.VisualStudio.Text.ITextBufferEdit" /> object is active for this text buffer.</exception>
    </member>
    <member name="P:Microsoft.VisualStudio.Text.ITextBuffer.CurrentSnapshot">
      <summary>버퍼의 현재 콘텐츠를 가져옵니다.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.ITextBuffer.Delete(Microsoft.VisualStudio.Text.Span)">
      <summary>버퍼에서 문자 시퀀스를 삭제합니다.</summary>
      <returns>
        <see cref="T:Microsoft.VisualStudio.Text.ITextSnapshot" />입니다.</returns>
      <param name="deleteSpan">삭제할 문자 범위입니다.</param>
      <exception cref="T:System.InvalidOperationException">A TextEdit is currently active.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="deleteSpan" />.End is greater than the length of the buffer.</exception>
    </member>
    <member name="P:Microsoft.VisualStudio.Text.ITextBuffer.EditInProgress">
      <summary>편집 작업이 현재 <see cref="T:Microsoft.VisualStudio.Text.ITextBuffer" />에 대해 진행 중인지 여부를 확인합니다.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.ITextBuffer.GetReadOnlyExtents(Microsoft.VisualStudio.Text.Span)">
      <summary>지정된 범위와 중첩되는 읽기 전용 영역 목록을 가져옵니다.</summary>
      <returns>지정된 범위와 교차하는 읽기 전용 영역의 <see cref="T:Microsoft.VisualStudio.Text.NormalizedSpanCollection" />입니다.</returns>
      <param name="span">읽기 전용 영역을 확인할 범위입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="span" /> is null.</exception>
      <exception cref="T:System.InvalidOperationException">
        <see cref="M:Microsoft.VisualStudio.Text.ITextBuffer.TakeThreadOwnership" /> has previously been called, and this call is being made from a different thread.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="span" /> is past the end of the buffer.</exception>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.ITextBuffer.Insert(System.Int32,System.String)">
      <summary>
        <see cref="T:Microsoft.VisualStudio.Text.ITextBuffer" />의 지정된 <paramref name="position" />에 해당 <paramref name="text" />를 삽입합니다.</summary>
      <returns>
        <see cref="T:Microsoft.VisualStudio.Text.ITextSnapshot" />입니다.</returns>
      <param name="position">텍스트의 첫 문자가 표시될 버퍼 위치입니다.</param>
      <param name="text">삽입할 텍스트입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="text" /> is null.</exception>
      <exception cref="T:System.InvalidOperationException">A text edit is currently active.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="position" /> is less than zero or greater than the length of the buffer.</exception>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.ITextBuffer.IsReadOnly(Microsoft.VisualStudio.Text.Span)">
      <summary>
        <see cref="T:Microsoft.VisualStudio.Text.IReadOnlyRegion" />으로 인해 <paramref name="span" />에서 텍스트 수정 또는 삭제가 금지되는지 여부를 확인합니다.</summary>
      <returns>
            전체 범위를 삭제 또는 대체할 수 있으면 true이고, 그렇지 않으면 false입니다.</returns>
      <param name="span">확인할 범위입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="span" /> is null.</exception>
      <exception cref="T:System.InvalidOperationException">
        <see cref="M:Microsoft.VisualStudio.Text.ITextBuffer.TakeThreadOwnership" /> has previously been called, and this call is being made from a different thread.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">The <see cref="P:Microsoft.VisualStudio.Text.Span.End" /> property of <paramref name="span" /> is greater than <see cref="P:Microsoft.VisualStudio.Text.ITextBuffer.CurrentSnapshot" />.Length.</exception>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.ITextBuffer.IsReadOnly(Microsoft.VisualStudio.Text.Span,System.Boolean)">
      <summary>
        <see cref="T:Microsoft.VisualStudio.Text.IReadOnlyRegion" />으로 인해 <paramref name="span" />에서 텍스트 수정 또는 삭제가 금지되는지 여부를 확인합니다.</summary>
      <returns>
            전체 범위를 삭제 또는 대체할 수 있으면 true이고, 그렇지 않으면 false입니다.</returns>
      <param name="span">확인할 범위입니다.</param>
      <param name="isEdit">
                이 확인이 편집의 일부인 경우 true이고, 파생 작업이 없는 쿼리의 경우 false입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="span" /> is null.</exception>
      <exception cref="T:System.InvalidOperationException">
        <see cref="M:Microsoft.VisualStudio.Text.ITextBuffer.TakeThreadOwnership" /> has previously been called, and this call is being made from a different thread.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">The <see cref="P:Microsoft.VisualStudio.Text.Span.End" /> property of <paramref name="span" /> is greater than <see cref="P:Microsoft.VisualStudio.Text.ITextBuffer.CurrentSnapshot.Length" />.</exception>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.ITextBuffer.IsReadOnly(System.Int32)">
      <summary>
        <see cref="T:Microsoft.VisualStudio.Text.IReadOnlyRegion" />으로 인해 <paramref name="position" />에서 텍스트 삽입이 금지되는지 여부를 확인합니다.</summary>
      <returns>
        <see cref="T:Microsoft.VisualStudio.Text.IReadOnlyRegion" />으로 인해 이 위치에서 삽입이 금지되면 true이고, 그렇지 않으면 false입니다.</returns>
      <param name="position">제안된 텍스트 삽입 위치입니다.</param>
      <exception cref="T:System.InvalidOperationException">
        <see cref="M:Microsoft.VisualStudio.Text.ITextBuffer.TakeThreadOwnership" /> has previously been called, and this call is being made from a different thread.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="position" /> is negative or greater than <see cref="P:Microsoft.VisualStudio.Text.ITextBuffer.CurrentSnapshot.Length" />.</exception>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.ITextBuffer.IsReadOnly(System.Int32,System.Boolean)">
      <summary>
        <see cref="T:Microsoft.VisualStudio.Text.IReadOnlyRegion" />으로 인해 <paramref name="position" />에서 텍스트 삽입이 금지되는지 여부를 확인합니다.</summary>
      <returns>
        <see cref="T:Microsoft.VisualStudio.Text.IReadOnlyRegion" />으로 인해 이 위치에서 삽입이 금지되면 true이고, 그렇지 않으면 false입니다.</returns>
      <param name="position">제안된 텍스트 삽입 위치입니다.</param>
      <param name="isEdit">
                이 확인이 편집의 일부인 경우 true이고, 파생 작업이 없는 쿼리의 경우 false입니다.</param>
      <exception cref="T:System.InvalidOperationException">
        <see cref="M:Microsoft.VisualStudio.Text.ITextBuffer.TakeThreadOwnership" /> has previously been called, and this call is being made from a different thread.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="position" /> is negative or greater than <see cref="P:Microsoft.VisualStudio.Text.ITextBuffer.CurrentSnapshot.Length" />.</exception>
    </member>
    <member name="E:Microsoft.VisualStudio.Text.ITextBuffer.PostChanged">
      <summary>Changed 이벤트 및 이로 인한 모든 편집 이후에 발생합니다.</summary>
    </member>
    <member name="E:Microsoft.VisualStudio.Text.ITextBuffer.ReadOnlyRegionsChanged">
      <summary>
        <see cref="T:Microsoft.VisualStudio.Text.IReadOnlyRegionEdit" />에서 읽기 전용 영역을 만들거나 제거한 경우 발생합니다.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.ITextBuffer.Replace(Microsoft.VisualStudio.Text.Span,System.String)">
      <summary>문자 시퀀스를 다른 텍스트로 대체합니다. 먼저 대체할 텍스트를 삭제한 다음 새 텍스트를 삽입하는 것과 같습니다.</summary>
      <returns>
        <see cref="T:Microsoft.VisualStudio.Text.ITextSnapshot" />입니다.</returns>
      <param name="replaceSpan">대체할 문자 범위입니다.</param>
      <param name="replaceWith">이전 텍스트를 대체할 새 텍스트입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="replaceWith" />is null.</exception>
      <exception cref="T:System.InvalidOperationException">A text edit is currently active.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="replaceSpan" />.End is greater than the length of the buffer.</exception>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.ITextBuffer.TakeThreadOwnership">
      <summary>현재 스레드에 대한 이 버퍼의 소유권을 요구합니다. 이 <see cref="T:Microsoft.VisualStudio.Text.ITextBuffer" />에 대한 이후의 모든 수정은 현재 스레드에서 이루어져야 하며, 그렇지 않을 경우 <see cref="T:System.InvalidOperationException" />이 발생합니다.</summary>
      <exception cref="T:System.InvalidOperationException">This method has been called previously from a different thread, or a <see cref="T:Microsoft.VisualStudio.Text.ITextBufferEdit" /> object is active for this text buffer.</exception>
    </member>
    <member name="T:Microsoft.VisualStudio.Text.ITextBufferEdit">
      <summary>
        <see cref="T:Microsoft.VisualStudio.Text.ITextBuffer" />에 대한 편집 작업을 나타냅니다.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.ITextBufferEdit.Apply">
      <summary>이 <see cref="T:Microsoft.VisualStudio.Text.ITextBufferEdit" /> 개체를 사용하여 내부 <see cref="T:Microsoft.VisualStudio.Text.ITextBuffer" />에 적용한 모든 수정 내용을 커밋합니다. 또한 수정이 이루어진 경우 <see cref="T:Microsoft.VisualStudio.Text.ITextBuffer" />가 새 스냅숏을 생성하거나 해당 Changed 이벤트를 발생하도록 합니다. </summary>
      <returns>변경이 적용된 후 <see cref="T:Microsoft.VisualStudio.Text.ITextBuffer" />의 상태 스냅숏입니다. 변경된 내용이 없거나 편집이 취소된 경우 새 스냅숏이 생성되지 않고 이전 스냅숏이 반환됩니다.</returns>
      <exception cref="T:System.InvalidOperationException">The <see cref="M:Microsoft.VisualStudio.Text.ITextBufferEdit.Apply" /> or <see cref="M:Microsoft.VisualStudio.Text.ITextBufferEdit.Cancel" /> or <see cref="M:System.IDisposable.Dispose" /> method has previously been called on this object.</exception>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.ITextBufferEdit.Cancel">
      <summary>이 <see cref="T:Microsoft.VisualStudio.Text.ITextBufferEdit" /> 개체를 사용하여 시작한 모든 수정 내용을 취소합니다. 이 개체를 더 호출하면 <see cref="T:System.InvalidOperationException" />이 발생합니다.</summary>
      <exception cref="T:System.InvalidOperationException">The <see cref="M:System.IDisposable.Dispose" /> method has previously been called on this object, or the edit has already been applied.</exception>
    </member>
    <member name="P:Microsoft.VisualStudio.Text.ITextBufferEdit.Canceled">
      <summary>이 편집이 취소되었는지 여부를 확인합니다.</summary>
    </member>
    <member name="P:Microsoft.VisualStudio.Text.ITextBufferEdit.Snapshot">
      <summary>이 ITextBufferEdit 개체가 만들어졌을 당시 <see cref="T:Microsoft.VisualStudio.Text.ITextBuffer" />의 스냅숏입니다.</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.Text.ITextBufferFactoryService">
      <summary>일반 TextBuffer의 팩터리 서비스입니다.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.ITextBufferFactoryService.CreateTextBuffer">
      <summary>
        <see cref="T:Microsoft.VisualStudio.Utilities.IContentType" /> "텍스트"를 사용하여 빈 <see cref="T:Microsoft.VisualStudio.Text.ITextBuffer" />를 만듭니다.</summary>
      <returns>빈 <see cref="T:Microsoft.VisualStudio.Text.ITextBuffer" /> 개체입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.ITextBufferFactoryService.CreateTextBuffer(Microsoft.VisualStudio.Utilities.IContentType)">
      <summary>지정된 <see cref="T:Microsoft.VisualStudio.Utilities.IContentType" />을 사용하여 빈 <see cref="T:Microsoft.VisualStudio.Text.ITextBuffer" />를 만듭니다.</summary>
      <returns>지정된 ContentType이 포함된 빈 <see cref="T:Microsoft.VisualStudio.Text.ITextBuffer" />입니다.</returns>
      <param name="contentType">새 <see cref="T:Microsoft.VisualStudio.Text.ITextBuffer" />의 <see cref="T:Microsoft.VisualStudio.Utilities.IContentType" />입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="contentType" /> is null.</exception>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.ITextBufferFactoryService.CreateTextBuffer(System.IO.TextReader,Microsoft.VisualStudio.Utilities.IContentType)">
      <summary>지정된 <paramref name="contentType" />을 사용하여 <see cref="T:Microsoft.VisualStudio.Text.ITextBuffer" />를 만들고 지정된 TextReader에서 데이터를 읽어와 채웁니다.</summary>
      <returns>지정된 TextReader 및 <paramref name="contentType" />이 포함된 <see cref="T:Microsoft.VisualStudio.Text.ITextBuffer" /> 개체입니다.</returns>
      <param name="reader">읽어올 TextReader입니다.</param>
      <param name="contentType">새 <see cref="T:Microsoft.VisualStudio.Text.ITextBuffer" />에 포함된 텍스트의 <paramref name="contentType" />입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="reader" /> is null.-or-<paramref name="contentType" /> is null.</exception>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.ITextBufferFactoryService.CreateTextBuffer(System.String,Microsoft.VisualStudio.Utilities.IContentType)">
      <summary>지정된 <see cref="T:Microsoft.VisualStudio.Utilities.IContentType" />을 사용하여 <see cref="T:Microsoft.VisualStudio.Text.ITextBuffer" />를 만들고 지정된 텍스트로 채웁니다.</summary>
      <returns>지정된 텍스트 및 <see cref="T:Microsoft.VisualStudio.Utilities.IContentType" />이 포함된 <see cref="T:Microsoft.VisualStudio.Text.ITextBuffer" /> 개체입니다.</returns>
      <param name="text">추가할 초기 텍스트입니다.</param>
      <param name="contentType">새 <see cref="T:Microsoft.VisualStudio.Text.ITextBuffer" />의 <see cref="T:Microsoft.VisualStudio.Utilities.IContentType" />입니다.</param>
      <exception cref="T:System.ArgumentNullException">Either <paramref name="text" /> or <paramref name="contentType" /> is null.</exception>
    </member>
    <member name="P:Microsoft.VisualStudio.Text.ITextBufferFactoryService.InertContentType">
      <summary>관련 아티팩트가 자동으로 생성되지 않는 콘텐츠 형식입니다.</summary>
      <returns>비활성 <see cref="T:Microsoft.VisualStudio.Utilities.IContentType" />입니다.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.Text.ITextBufferFactoryService.PlaintextContentType">
      <summary>일반 텍스트 파일의 미리 정의된 콘텐츠 형식입니다.</summary>
      <returns>일반 텍스트 <see cref="T:Microsoft.VisualStudio.Utilities.IContentType" />입니다.</returns>
    </member>
    <member name="E:Microsoft.VisualStudio.Text.ITextBufferFactoryService.TextBufferCreated">
      <summary>
        <see cref="T:Microsoft.VisualStudio.Text.ITextBuffer" />가 만들어질 때 발생합니다.</summary>
    </member>
    <member name="P:Microsoft.VisualStudio.Text.ITextBufferFactoryService.TextContentType">
      <summary>미리 정의된 텍스트 콘텐츠 형식입니다.</summary>
      <returns>텍스트 <see cref="T:Microsoft.VisualStudio.Utilities.IContentType" />입니다.</returns>
    </member>
    <member name="T:Microsoft.VisualStudio.Text.ITextChange">
      <summary>텍스트 버퍼에 대한 하나의 연속된 텍스트 변경 작업을 설명합니다.</summary>
    </member>
    <member name="P:Microsoft.VisualStudio.Text.ITextChange.Delta">
      <summary>이 변경이 버퍼 길이에 미치는 효과입니다.</summary>
    </member>
    <member name="P:Microsoft.VisualStudio.Text.ITextChange.LineCountDelta">
      <summary>이 변경이 스냅숏의 줄 수에 미치는 효과입니다.</summary>
    </member>
    <member name="P:Microsoft.VisualStudio.Text.ITextChange.NewEnd">
      <summary>텍스트 변경 직후 스냅숏에서 <see cref="P:Microsoft.VisualStudio.Text.ITextChange.NewText" />의 끝 위치입니다.</summary>
    </member>
    <member name="P:Microsoft.VisualStudio.Text.ITextChange.NewLength">
      <summary>
        <see cref="P:Microsoft.VisualStudio.Text.ITextChange.NewText" />의 길이입니다.</summary>
    </member>
    <member name="P:Microsoft.VisualStudio.Text.ITextChange.NewPosition">
      <summary>변경 직후 스냅숏에서 텍스트 변경의 위치입니다. 한 스냅숏에서 다음 스냅숏으로의 이동에 둘 이상의 <see cref="T:Microsoft.VisualStudio.Text.ITextChange" />가 포함된 경우에만 위치가 OldPosition과 달라질 수 있습니다.</summary>
    </member>
    <member name="P:Microsoft.VisualStudio.Text.ITextChange.NewSpan">
      <summary>변경 직후 스냅숏에서 <see cref="T:Microsoft.VisualStudio.Text.ITextChange" />의 범위입니다.</summary>
    </member>
    <member name="P:Microsoft.VisualStudio.Text.ITextChange.NewText">
      <summary>이전 텍스트를 대체한 텍스트입니다.</summary>
    </member>
    <member name="P:Microsoft.VisualStudio.Text.ITextChange.OldEnd">
      <summary>텍스트 변경 직전 스냅숏에서 <see cref="P:Microsoft.VisualStudio.Text.ITextChange.OldText" />의 끝 위치입니다.</summary>
    </member>
    <member name="P:Microsoft.VisualStudio.Text.ITextChange.OldLength">
      <summary>
        <see cref="P:Microsoft.VisualStudio.Text.ITextChange.OldText" />의 길이입니다.</summary>
    </member>
    <member name="P:Microsoft.VisualStudio.Text.ITextChange.OldPosition">
      <summary>변경 직전 스냅숏에서 텍스트 변경의 위치입니다. 한 스냅숏에서 다음 스냅숏으로의 이동에 둘 이상의 <see cref="T:Microsoft.VisualStudio.Text.ITextChange" />가 포함된 경우에만 위치가 NewPosition과 달라질 수 있습니다.</summary>
    </member>
    <member name="P:Microsoft.VisualStudio.Text.ITextChange.OldSpan">
      <summary>변경 직전 스냅숏에서 텍스트 변경의 범위입니다.</summary>
    </member>
    <member name="P:Microsoft.VisualStudio.Text.ITextChange.OldText">
      <summary>대체된 텍스트입니다.</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.Text.ITextDocument">
      <summary>파일 시스템에서 <see cref="T:Microsoft.VisualStudio.Text.ITextBuffer" />를 유지하는 문서를 나타냅니다.</summary>
    </member>
    <member name="E:Microsoft.VisualStudio.Text.ITextDocument.DirtyStateChanged">
      <summary>
        <see cref="P:Microsoft.VisualStudio.Text.ITextDocument.IsDirty" /> 값이 변경될 때 발생합니다. </summary>
    </member>
    <member name="P:Microsoft.VisualStudio.Text.ITextDocument.Encoding">
      <summary>디스크에 저장할 때 사용할 문서 인코딩을 가져오거나 설정합니다.</summary>
      <returns>
        <see cref="T:System.Text.Encoding" />입니다.</returns>
    </member>
    <member name="E:Microsoft.VisualStudio.Text.ITextDocument.EncodingChanged">
      <summary>
        <see cref="P:Microsoft.VisualStudio.Text.ITextDocument.Encoding" /> 속성이 변경될 때 발생합니다.</summary>
    </member>
    <member name="E:Microsoft.VisualStudio.Text.ITextDocument.FileActionOccurred">
      <summary>문서가 디스크에서 로드되거나 디스크에 저장되었을 때 발생합니다. </summary>
    </member>
    <member name="P:Microsoft.VisualStudio.Text.ITextDocument.FilePath">
      <summary>파일의 이름과 경로입니다.</summary>
      <returns>파일 경로입니다.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.Text.ITextDocument.IsDirty">
      <summary>
        <see cref="T:Microsoft.VisualStudio.Text.ITextBuffer" />가 변경되었는지 여부를 확인합니다.</summary>
      <returns>변경되었으면 true이고, 그렇지 않으면 false입니다.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.Text.ITextDocument.IsReloading">
      <summary>
        <see cref="M:Microsoft.VisualStudio.Text.ITextDocument.Reload" /> 메서드가 실행되고 있는지 여부를 확인합니다.</summary>
      <returns>다시 로드 중이면 true이고, 그렇지 않으면 false입니다.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.Text.ITextDocument.LastContentModifiedTime">
      <summary>
        <see cref="T:Microsoft.VisualStudio.Text.ITextBuffer" />의 내용이 마지막으로 변경된 <see cref="T:System.DateTime" />을 가져옵니다.</summary>
      <returns>마지막으로 내용이 수정된 시간입니다.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.Text.ITextDocument.LastSavedTime">
      <summary>파일이 마지막으로 저장된 <see cref="T:System.DateTime" />을 가져옵니다. 파일 시스템에 파일이 마지막으로 쓰여진 시간과 정확히 일치합니다.</summary>
      <returns>마지막으로 저장된 시간입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.ITextDocument.Reload">
      <summary>
        <see cref="P:Microsoft.VisualStudio.Text.ITextDocument.FilePath" />의 내용을 <see cref="P:Microsoft.VisualStudio.Text.ITextDocument.TextBuffer" />로 다시 로드합니다. </summary>
      <returns>다시 로드가 발생했는지 여부와 인코딩이 적합했는지 여부를 나타냅니다.</returns>
      <exception cref="T:System.InvalidOperationException">This object is in the middle of raising events.</exception>
      <exception cref="T:System.UnauthorizedAccessException">An access error occurred during file load.</exception>
      <exception cref="T:System.IO.IOException">An I/O error occurred during file load.</exception>
      <exception cref="T:System.ObjectDisposedException">This object has been disposed.</exception>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.ITextDocument.Reload(Microsoft.VisualStudio.Text.EditOptions)">
      <summary>지정된 <see cref="T:Microsoft.VisualStudio.Text.EditOptions" />를 사용하여 <see cref="P:Microsoft.VisualStudio.Text.ITextDocument.FilePath" />의 내용을 <see cref="P:Microsoft.VisualStudio.Text.ITextDocument.TextBuffer" />로 다시 로드합니다. 로드가 실패하면 <see cref="T:Microsoft.VisualStudio.Text.ITextBuffer" />의 내용이 변경되지 않고 그대로 유지됩니다.</summary>
      <returns>
        <see cref="T:Microsoft.VisualStudio.Text.ReloadResult" />입니다.</returns>
      <param name="options">텍스트 버퍼 편집에 사용할 옵션입니다.</param>
      <exception cref="T:System.InvalidOperationException">This object is in the middle of raising events.</exception>
      <exception cref="T:System.UnauthorizedAccessException">An access error occurred during file load.</exception>
      <exception cref="T:System.IO.IOException">An I/O error occurred during file load.</exception>
      <exception cref="T:System.ObjectDisposedException">This object has been disposed.</exception>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.ITextDocument.Rename(System.String)">
      <summary>문서의 이름을 지정된 새 파일 경로로 바꿉니다.</summary>
      <param name="newFilePath">이 문서의 새 파일 경로입니다.</param>
      <exception cref="T:System.InvalidOperationException">This object is in the middle of raising events.</exception>
      <exception cref="T:System.ObjectDisposedException">This object has been disposed.</exception>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.ITextDocument.Save">
      <summary>
        <see cref="P:Microsoft.VisualStudio.Text.ITextDocument.TextBuffer" />의 내용을 <see cref="P:Microsoft.VisualStudio.Text.ITextDocument.FilePath" />에 저장합니다. </summary>
      <exception cref="T:System.InvalidOperationException">This object is in the middle of raising events.</exception>
      <exception cref="T:System.UnauthorizedAccessException">An access error occurred during file save.</exception>
      <exception cref="T:System.IO.IOException">An I/O error occurred during file save.</exception>
      <exception cref="T:System.ObjectDisposedException">This object has been disposed.</exception>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.ITextDocument.SaveAs(System.String,System.Boolean)">
      <summary>
        <see cref="P:Microsoft.VisualStudio.Text.ITextDocument.TextBuffer" />의 내용을 지정된 <paramref name="filePath" />에 저장합니다.</summary>
      <param name="filePath">새 파일의 이름입니다.</param>
      <param name="overwrite">
                기존 <paramref name="filePath" />를 덮어써야 하면 true이고, 그렇지 않으면 false입니다.</param>
      <exception cref="T:System.InvalidOperationException">This object is in the middle of raising events.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="filePath" /> is null.</exception>
      <exception cref="T:System.UnauthorizedAccessException">An access error occurred during file save.</exception>
      <exception cref="T:System.IO.IOException">An I/O error occurred (including an error caused by attempting to overwrite an existing file when <paramref name="overwrite" /> is false).</exception>
      <exception cref="T:System.ObjectDisposedException">This object has been disposed.</exception>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.ITextDocument.SaveAs(System.String,System.Boolean,Microsoft.VisualStudio.Utilities.IContentType)">
      <summary>
        <see cref="P:Microsoft.VisualStudio.Text.ITextDocument.TextBuffer" />의 내용을 지정된 <paramref name="filePath" />에 저장합니다.</summary>
      <param name="filePath">새 파일의 이름입니다.</param>
      <param name="overwrite">
                기존 <paramref name="filePath" />를 덮어써야 하면 true이고, 그렇지 않으면 false입니다.</param>
      <param name="newContentType">새 <see cref="T:Microsoft.VisualStudio.Utilities.IContentType" />입니다.</param>
      <exception cref="T:System.InvalidOperationException">This object is in the middle of raising events.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="filePath" /> or <paramref name="newContentType" /> is null.</exception>
      <exception cref="T:System.UnauthorizedAccessException">An access error occurred during file save.</exception>
      <exception cref="T:System.IO.IOException">An I/O error occurred (including an error caused by attempting to overwrite an existing file when <paramref name="overwrite" /> is false).</exception>
      <exception cref="T:System.ObjectDisposedException">This object has been disposed.</exception>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.ITextDocument.SaveAs(System.String,System.Boolean,System.Boolean)">
      <summary>
        <see cref="P:Microsoft.VisualStudio.Text.ITextDocument.TextBuffer" />의 내용을 지정된 <paramref name="filePath" />에 저장합니다.</summary>
      <param name="filePath">새 파일의 이름입니다.</param>
      <param name="overwrite">
                기존 <paramref name="filePath" />를 덮어써야 하면 true이고, 그렇지 않으면 false입니다.</param>
      <param name="createFolder">
        <paramref name="filePath" />를 포함하는 폴더가 없어 폴더를 새로 만들어야 하면 true이고, 그렇지 않으면 false입니다.</param>
      <exception cref="T:System.InvalidOperationException">This object is in the middle of raising events.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="filePath" /> is null.</exception>
      <exception cref="T:System.UnauthorizedAccessException">An access error occurred during file save.</exception>
      <exception cref="T:System.IO.IOException">An I/O error occurred (including an error caused by attempting to overwrite an existing file when <paramref name="overwrite" /> is false).</exception>
      <exception cref="T:System.ObjectDisposedException">This object has been disposed.</exception>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.ITextDocument.SaveAs(System.String,System.Boolean,System.Boolean,Microsoft.VisualStudio.Utilities.IContentType)">
      <summary>
        <see cref="P:Microsoft.VisualStudio.Text.ITextDocument.TextBuffer" />의 내용을 지정된 <paramref name="filePath" />에 저장합니다.</summary>
      <param name="filePath">새 파일의 이름입니다.</param>
      <param name="overwrite">
                기존 <paramref name="filePath" />를 덮어써야 하면 true이고, 그렇지 않으면 false입니다.</param>
      <param name="createFolder">
        <paramref name="filePath" />를 포함하는 폴더가 없어 폴더를 새로 만들어야 하면 true이고, 그렇지 않으면 false입니다.</param>
      <param name="newContentType">새 <see cref="T:Microsoft.VisualStudio.Utilities.IContentType" />입니다.</param>
      <exception cref="T:System.InvalidOperationException">This object is in the middle of raising events.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="filePath" /> or <paramref name="newContentType" /> is null.</exception>
      <exception cref="T:System.UnauthorizedAccessException">An access error occurred during file save.</exception>
      <exception cref="T:System.IO.IOException">An I/O error occurred (including an error caused by attempting to overwrite an existing file when <paramref name="overwrite" /> is false).</exception>
      <exception cref="T:System.ObjectDisposedException">This object has been disposed.</exception>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.ITextDocument.SaveCopy(System.String,System.Boolean)">
      <summary>
        <see cref="P:Microsoft.VisualStudio.Text.ITextDocument.TextBuffer" />의 내용을 지정된 <paramref name="filePath" />에 저장합니다.</summary>
      <param name="filePath">파일 이름입니다.</param>
      <param name="overwrite">
                기존 <paramref name="filePath" />를 덮어써야 하면 true이고, 그렇지 않으면 false입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="filePath" /> is null.</exception>
      <exception cref="T:System.UnauthorizedAccessException">An access error occurred during file save.</exception>
      <exception cref="T:System.IO.IOException">An I/O error occurred (including an error caused by attempting to overwrite an existing file when <paramref name="overwrite" /> is false).</exception>
      <exception cref="T:System.ObjectDisposedException">This object has been disposed.</exception>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.ITextDocument.SaveCopy(System.String,System.Boolean,System.Boolean)">
      <summary>
        <see cref="P:Microsoft.VisualStudio.Text.ITextDocument.TextBuffer" />의 내용을 지정된 <paramref name="filePath" />에 저장합니다.</summary>
      <param name="filePath">파일 이름입니다.</param>
      <param name="overwrite">
                기존 <paramref name="filePath" />를 덮어써야 하면 true이고, 그렇지 않으면 false입니다.</param>
      <param name="createFolder">
        <paramref name="filePath" />를 포함하는 폴더가 없어 폴더를 새로 만들어야 하면 true이고, 그렇지 않으면 false입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="filePath" /> is null.</exception>
      <exception cref="T:System.UnauthorizedAccessException">An access error occurred during file save.</exception>
      <exception cref="T:System.IO.IOException">An I/O error occurred (including an error caused by attempting to overwrite an existing file when <paramref name="overwrite" /> is false).</exception>
      <exception cref="T:System.ObjectDisposedException">This object has been disposed.</exception>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.ITextDocument.SetEncoderFallback(System.Text.EncoderFallback)">
      <summary>
        <see cref="P:Microsoft.VisualStudio.Text.ITextDocument.Encoding" />의 인코더 대체(fallback)를 변경합니다.</summary>
      <param name="fallback">새 인코더 대체(fallback)입니다.</param>
    </member>
    <member name="P:Microsoft.VisualStudio.Text.ITextDocument.TextBuffer">
      <summary>문서를 포함하는 <see cref="T:Microsoft.VisualStudio.Text.ITextBuffer" />를 가져옵니다. 이 값은 항상 null이 아닙니다.</summary>
      <returns>텍스트 버퍼입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.ITextDocument.UpdateDirtyState(System.Boolean,System.DateTime)">
      <summary>
        <see cref="P:Microsoft.VisualStudio.Text.ITextDocument.IsDirty" /> 및 <see cref="P:Microsoft.VisualStudio.Text.ITextDocument.LastContentModifiedTime" /> 속성을 업데이트합니다.</summary>
      <param name="isDirty">
        <see cref="P:Microsoft.VisualStudio.Text.ITextDocument.IsDirty" />의 새 값입니다.</param>
      <param name="lastContentModifiedTime">
        <see cref="P:Microsoft.VisualStudio.Text.ITextDocument.LastContentModifiedTime" />의 새 값입니다.</param>
      <exception cref="T:System.InvalidOperationException">This object is in the middle of raising events.</exception>
      <exception cref="T:System.ObjectDisposedException">This object has been disposed.</exception>
    </member>
    <member name="T:Microsoft.VisualStudio.Text.ITextDocumentFactoryService">
      <summary>텍스트 문서를 만들고 로드하고 삭제하는 서비스를 나타냅니다.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.ITextDocumentFactoryService.CreateAndLoadTextDocument(System.String,Microsoft.VisualStudio.Utilities.IContentType)">
      <summary>
        <paramref name="filePath" />의 내용을 열어 새 <see cref="T:Microsoft.VisualStudio.Text.ITextBuffer" />로 로드하는 <see cref="T:Microsoft.VisualStudio.Text.ITextDocument" />를 만듭니다.</summary>
      <returns>
        <see cref="T:Microsoft.VisualStudio.Text.ITextDocument" />입니다.</returns>
      <param name="filePath">로드할 파일의 전체 경로입니다.</param>
      <param name="contentType">
        <see cref="T:Microsoft.VisualStudio.Text.ITextBuffer" />의 <see cref="T:Microsoft.VisualStudio.Utilities.IContentType" />입니다.</param>
      <exception cref="T:System.ArgumentNullException">paramref name="filePath"/&gt; or <paramref name="contentType" /> is null.</exception>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.ITextDocumentFactoryService.CreateAndLoadTextDocument(System.String,Microsoft.VisualStudio.Utilities.IContentType,System.Boolean,System.Boolean@)">
      <summary>
        <paramref name="filePath" />의 내용을 열어 새 <see cref="T:Microsoft.VisualStudio.Text.ITextBuffer" />로 로드하는 <see cref="T:Microsoft.VisualStudio.Text.ITextDocument" />를 만듭니다.</summary>
      <returns>
        <see cref="T:Microsoft.VisualStudio.Text.ITextDocument" />입니다.</returns>
      <param name="filePath">로드할 파일의 전체 경로입니다.</param>
      <param name="contentType">
        <see cref="T:Microsoft.VisualStudio.Text.ITextBuffer" />의 <see cref="T:Microsoft.VisualStudio.Utilities.IContentType" />입니다.</param>
      <param name="attemptUtf8Detection">문서를 UTF-8 파일로 로드하려고 시도할지 여부를 나타냅니다.</param>
      <param name="characterSubstitutionsOccurred">[출력] 지정된 인코딩을 사용하여 파일의 일부 바이트를 직접 변환할 수 없는 경우 true로 설정됩니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="filePath" /> or <paramref name="contentType" /> is null.</exception>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.ITextDocumentFactoryService.CreateAndLoadTextDocument(System.String,Microsoft.VisualStudio.Utilities.IContentType,System.Text.Encoding,System.Boolean@)">
      <summary>
        <paramref name="filePath" />의 내용을 열어 새 <see cref="T:Microsoft.VisualStudio.Text.ITextBuffer" />로 로드하는 <see cref="T:Microsoft.VisualStudio.Text.ITextDocument" />를 만듭니다.</summary>
      <returns>
        <see cref="T:Microsoft.VisualStudio.Text.ITextDocument" />입니다.</returns>
      <param name="filePath">로드할 파일의 전체 경로입니다.</param>
      <param name="contentType">
        <see cref="T:Microsoft.VisualStudio.Text.ITextBuffer" />의 <see cref="T:Microsoft.VisualStudio.Utilities.IContentType" />입니다.</param>
      <param name="encoding">사용할 인코딩입니다. Encoding 개체의 디코더 부분은 사용되지 않습니다.</param>
      <param name="characterSubstitutionsOccurred">지정된 인코딩을 사용하여 파일의 일부 바이트를 직접 변환할 수 없는 경우 true로 설정됩니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="filePath" />, <paramref name="contentType" />, or <paramref name="encoding" /> is null.</exception>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.ITextDocumentFactoryService.CreateTextDocument(Microsoft.VisualStudio.Text.ITextBuffer,System.String)">
      <summary>
        <paramref name="filePath" />에 저장될 <paramref name="textBuffer" />를 사용하여 <see cref="T:Microsoft.VisualStudio.Text.ITextDocument" />를 만듭니다.</summary>
      <returns>
        <see cref="T:Microsoft.VisualStudio.Text.ITextDocument" />입니다.</returns>
      <param name="textBuffer">
        <paramref name="filePath" />에 저장될 <see cref="T:Microsoft.VisualStudio.Text.ITextBuffer" />입니다.</param>
      <param name="filePath">파일의 전체 경로입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="textBuffer" /> or <paramref name="filePath" /> is null.</exception>
    </member>
    <member name="E:Microsoft.VisualStudio.Text.ITextDocumentFactoryService.TextDocumentCreated">
      <summary>
        <see cref="T:Microsoft.VisualStudio.Text.ITextDocument" />가 만들어질 때 발생합니다.</summary>
    </member>
    <member name="E:Microsoft.VisualStudio.Text.ITextDocumentFactoryService.TextDocumentDisposed">
      <summary>
        <see cref="T:Microsoft.VisualStudio.Text.ITextDocument" />가 삭제될 때 발생합니다.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.ITextDocumentFactoryService.TryGetTextDocument(Microsoft.VisualStudio.Text.ITextBuffer,Microsoft.VisualStudio.Text.ITextDocument@)"></member>
    <member name="T:Microsoft.VisualStudio.Text.ITextEdit">
      <summary>
        <see cref="T:Microsoft.VisualStudio.Text.ITextBuffer" />에 대한 편집 작업 집합을 나타냅니다. 모든 편집 작업의 위치는 이 개체가 만들어졌을 당시 <see cref="T:Microsoft.VisualStudio.Text.ITextBuffer" />의 상태를 기준으로 지정됩니다.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.ITextEdit.Delete(Microsoft.VisualStudio.Text.Span)">
      <summary>버퍼에서 문자 시퀀스를 삭제합니다.</summary>
      <returns>
            삭제가 성공한 경우 true이고, 읽기 전용 영역으로 인해 삭제가 금지된 경우 false입니다.</returns>
      <param name="deleteSpan">삭제할 문자 범위입니다.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="deleteSpan" />.End is greater than the length of the buffer.</exception>
      <exception cref="T:System.InvalidOperationException">The <see cref="M:Microsoft.VisualStudio.Text.ITextBufferEdit.Apply" /> or <see cref="M:Microsoft.VisualStudio.Text.ITextBufferEdit.Cancel" /> or <see cref="M:System.IDisposable.Dispose" /> method has previously been called on this object.</exception>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.ITextEdit.Delete(System.Int32,System.Int32)">
      <summary>버퍼에서 문자 시퀀스를 삭제합니다.</summary>
      <returns>
            삭제가 성공한 경우 true이고, 읽기 전용 영역으로 인해 삭제가 금지된 경우 false입니다.</returns>
      <param name="startPosition">삭제할 첫 번째 문자의 위치입니다.</param>
      <param name="charsToDelete">삭제할 문자의 수입니다.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="startPosition" /> is less than zero or greater than the length of the buffer, or <paramref name="charsToDelete" /> is less than zero, or <paramref name="startPosition" /> + <paramref name="charsToDelete" /> is greater than the length of the buffer.</exception>
      <exception cref="T:System.InvalidOperationException">The <see cref="M:Microsoft.VisualStudio.Text.ITextBufferEdit.Apply" /> or <see cref="M:Microsoft.VisualStudio.Text.ITextBufferEdit.Cancel" /> or <see cref="M:System.IDisposable.Dispose" /> method has previously been called on this object.</exception>
    </member>
    <member name="P:Microsoft.VisualStudio.Text.ITextEdit.HasEffectiveChanges">
      <summary>편집에 읽기 전용이 아닌 영역의 변경 내용이 포함되는지 여부를 확인합니다.</summary>
    </member>
    <member name="P:Microsoft.VisualStudio.Text.ITextEdit.HasFailedChanges">
      <summary>읽기 전용 영역으로 인해 변경 내용을 이 편집에 추가하지 못했는지 여부를 확인합니다.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.ITextEdit.Insert(System.Int32,System.Char[],System.Int32,System.Int32)">
      <summary>
        <see cref="T:Microsoft.VisualStudio.Text.ITextBuffer" />의 지정된 <paramref name="position" />에 문자 배열을 삽입합니다.</summary>
      <returns>
            삽입이 성공한 경우 true이고, 읽기 전용 영역으로 인해 삽입이 금지된 경우 false입니다.</returns>
      <param name="position">텍스트의 첫 문자가 표시될 버퍼 위치입니다.</param>
      <param name="characterBuffer">문자를 삽입하는 데 사용할 문자 배열입니다.</param>
      <param name="startIndex">
        <paramref name="characterBuffer" />에서 삽입할 첫 문자의 인덱스입니다.</param>
      <param name="length">
        <paramref name="characterBuffer" />에서 삽입할 문자 수입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="characterBuffer" /> is null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="position" /> is less than zero or greater than the length of the buffer, or <paramref name="startIndex" /> is less than zero, or <paramref name="length" /> is less than zero, or <paramref name="startIndex" /> + <paramref name="length" /> is greater than the length of <paramref name="characterBuffer" />.-or-.</exception>
      <exception cref="T:System.InvalidOperationException">The <see cref="M:Microsoft.VisualStudio.Text.ITextBufferEdit.Apply" /> or <see cref="M:Microsoft.VisualStudio.Text.ITextBufferEdit.Cancel" /> or <see cref="M:System.IDisposable.Dispose" /> method has previously been called on this object.</exception>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.ITextEdit.Insert(System.Int32,System.String)">
      <summary>텍스트 버퍼의 지정된 <paramref name="position" />에 해당 <paramref name="text" />를 삽입합니다.</summary>
      <returns>
            삽입이 성공한 경우 true이고, 읽기 전용 영역으로 인해 삽입이 실패한 경우 false입니다.</returns>
      <param name="position">텍스트의 첫 문자가 표시될 버퍼 위치입니다.</param>
      <param name="text">삽입할 텍스트입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="text" /> is null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="position" /> is less than zero or greater than the length of the buffer.</exception>
      <exception cref="T:System.InvalidOperationException">The <see cref="M:Microsoft.VisualStudio.Text.ITextBufferEdit.Apply" /> or <see cref="M:Microsoft.VisualStudio.Text.ITextBufferEdit.Cancel" /> or <see cref="M:System.IDisposable.Dispose" /> method has previously been called on this object.</exception>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.ITextEdit.Replace(Microsoft.VisualStudio.Text.Span,System.String)">
      <summary>문자 시퀀스를 다른 텍스트로 대체합니다. 이 메서드는 먼저 <paramref name="replaceSpan" />에서 문자를 삭제한 다음 <paramref name="replaceWith" />를 삽입할 때와 같은 효과를 갖습니다.</summary>
      <returns>
            대체가 성공한 경우 true이고, 읽기 전용 영역으로 인해 대체가 금지된 경우 false입니다.</returns>
      <param name="replaceSpan">대체할 문자 범위입니다.</param>
      <param name="replaceWith">새 텍스트입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="replaceWith" />is null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="replaceSpan" />.End is greater than the length of the buffer.</exception>
      <exception cref="T:System.InvalidOperationException">The <see cref="M:Microsoft.VisualStudio.Text.ITextBufferEdit.Apply" /> or <see cref="M:Microsoft.VisualStudio.Text.ITextBufferEdit.Cancel" /> or <see cref="M:System.IDisposable.Dispose" /> method has previously been called on this object.</exception>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.ITextEdit.Replace(System.Int32,System.Int32,System.String)">
      <summary>문자 시퀀스를 다른 텍스트로 대체합니다. 이 메서드는 먼저 <paramref name="charsToReplace" />를 삭제한 다음 <paramref name="replaceWith" />를 삽입할 때와 같은 효과를 갖습니다.</summary>
      <returns>
            대체가 성공한 경우 true이고, 읽기 전용 영역으로 인해 대체가 금지된 경우 false입니다.</returns>
      <param name="startPosition">대체를 시작할 버퍼 위치입니다.</param>
      <param name="charsToReplace">교체할 문자 수입니다.</param>
      <param name="replaceWith">새 텍스트입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="replaceWith" />is null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="startPosition" /> is less than zero or greater than the length of the buffer, or <paramref name="charsToReplace" /> is less than zero, or <paramref name="startPosition" /> + <paramref name="charsToReplace" /> is greater than the length of the buffer.</exception>
      <exception cref="T:System.InvalidOperationException">The <see cref="M:Microsoft.VisualStudio.Text.ITextBufferEdit.Apply" /> or <see cref="M:Microsoft.VisualStudio.Text.ITextBufferEdit.Cancel" /> or <see cref="M:System.IDisposable.Dispose" /> method has previously been called on this object.</exception>
    </member>
    <member name="T:Microsoft.VisualStudio.Text.ITextSnapshot">
      <summary>유니코드 문자 시퀀스를 포함하는 <see cref="T:Microsoft.VisualStudio.Text.ITextBuffer" />의 변경할 수 없는 스냅숏에 읽기 권한을 제공합니다. </summary>
    </member>
    <member name="P:Microsoft.VisualStudio.Text.ITextSnapshot.ContentType"></member>
    <member name="M:Microsoft.VisualStudio.Text.ITextSnapshot.CopyTo(System.Int32,System.Char[],System.Int32,System.Int32)">
      <summary>텍스트 범위를 문자 배열로 복사합니다.</summary>
      <param name="sourceIndex">텍스트 스냅숏의 시작 인덱스입니다.</param>
      <param name="destination">대상 배열입니다.</param>
      <param name="destinationIndex">대상 배열에서 텍스트 복사를 시작할 인덱스입니다.</param>
      <param name="count">복사할 문자 수입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="destination" /> is null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="sourceIndex" /> is less than zero or greater than the length of the snapshot, or <paramref name="count" /> is less than zero, or <paramref name="sourceIndex" /> + <paramref name="count" /> is greater than the length of the snapshot, or <paramref name="destinationIndex" /> is less than zero, or <paramref name="destinationIndex" /> plus <paramref name="count" /> is greater than the length of <paramref name="destination" />.</exception>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.ITextSnapshot.CreateTrackingPoint(System.Int32,Microsoft.VisualStudio.Text.PointTrackingMode)">
      <summary>이 스냅숏에 대해 <see cref="T:Microsoft.VisualStudio.Text.ITrackingPoint" />를 만듭니다.</summary>
      <returns>null이 아닌 TrackingPoint입니다.</returns>
      <param name="position">지점의 위치입니다.</param>
      <param name="trackingMode">지점의 추적 모드입니다.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="position" /> is less than zero or greater than the length of the snapshot.</exception>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.ITextSnapshot.CreateTrackingPoint(System.Int32,Microsoft.VisualStudio.Text.PointTrackingMode,Microsoft.VisualStudio.Text.TrackingFidelityMode)">
      <summary>이 스냅숏에 대해 <see cref="T:Microsoft.VisualStudio.Text.ITrackingPoint" />를 만듭니다.</summary>
      <returns>null이 아닌 TrackingPoint입니다.</returns>
      <param name="position">지점의 위치입니다.</param>
      <param name="trackingMode">지점의 추적 모드입니다.</param>
      <param name="trackingFidelity">지점의 추적 정밀도입니다.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="position" /> is less than zero or greater than the length of the snapshot.</exception>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.ITextSnapshot.CreateTrackingSpan(Microsoft.VisualStudio.Text.Span,Microsoft.VisualStudio.Text.SpanTrackingMode)">
      <summary>이 스냅숏에 대해 <see cref="T:Microsoft.VisualStudio.Text.ITrackingSpan" />을 만듭니다.</summary>
      <returns>null이 아닌 <see cref="T:Microsoft.VisualStudio.Text.ITrackingSpan" />입니다.</returns>
      <param name="span">이 스냅숏의 텍스트 범위입니다.</param>
      <param name="trackingMode">추적 범위가 해당 경계의 변경에 반응할 방식입니다.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">The end of the span is greater than the length of the text snapshot.</exception>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.ITextSnapshot.CreateTrackingSpan(Microsoft.VisualStudio.Text.Span,Microsoft.VisualStudio.Text.SpanTrackingMode,Microsoft.VisualStudio.Text.TrackingFidelityMode)">
      <summary>이 스냅숏에 대해 <see cref="T:Microsoft.VisualStudio.Text.ITrackingSpan" />을 만듭니다.</summary>
      <returns>null이 아닌 <see cref="T:Microsoft.VisualStudio.Text.ITrackingSpan" />입니다.</returns>
      <param name="span">이 스냅숏의 텍스트 범위입니다.</param>
      <param name="trackingMode">추적 범위가 해당 경계의 변경에 반응할 방식입니다.</param>
      <param name="trackingFidelity">범위의 추적 정밀도입니다.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">The end of the span is greater than the length of the text snapshot.</exception>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.ITextSnapshot.CreateTrackingSpan(System.Int32,System.Int32,Microsoft.VisualStudio.Text.SpanTrackingMode)">
      <summary>이 스냅숏에 대해 <see cref="T:Microsoft.VisualStudio.Text.ITrackingSpan" />을 만듭니다.</summary>
      <returns>null이 아닌 <see cref="T:Microsoft.VisualStudio.Text.ITrackingSpan" />입니다.</returns>
      <param name="start">추적 범위의 시작 위치입니다.</param>
      <param name="length">추적 범위의 길이입니다.</param>
      <param name="trackingMode">추적 범위가 해당 경계의 변경에 반응할 방식입니다.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="start" /> is negative or greater than <see cref="P:Microsoft.VisualStudio.Text.ITextSnapshot.Length" />, or <paramref name="length" /> is negative, or <paramref name="start" /> plus <paramref name="length" /> is less than <paramref name="start" />.</exception>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.ITextSnapshot.CreateTrackingSpan(System.Int32,System.Int32,Microsoft.VisualStudio.Text.SpanTrackingMode,Microsoft.VisualStudio.Text.TrackingFidelityMode)">
      <summary>이 스냅숏에 대해 <see cref="T:Microsoft.VisualStudio.Text.ITrackingSpan" />을 만듭니다.</summary>
      <returns>null이 아닌 <see cref="T:Microsoft.VisualStudio.Text.ITrackingSpan" />입니다.</returns>
      <param name="start">추적 범위의 시작 위치입니다.</param>
      <param name="length">추적 범위의 길이입니다.</param>
      <param name="trackingMode">추적 범위가 해당 경계의 변경에 반응할 방식입니다.</param>
      <param name="trackingFidelity">추적 정밀도 모드입니다.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="start" /> is negative or greater than <see cref="P:Microsoft.VisualStudio.Text.ITextSnapshot.Length" />, or <paramref name="length" /> is negative, or <paramref name="start" /> plus <paramref name="length" /> is less than <paramref name="start" />.</exception>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.ITextSnapshot.GetLineFromLineNumber(System.Int32)">
      <summary>지정된 줄 번호의 <see cref="T:Microsoft.VisualStudio.Text.ITextSnapshotLine" />을 가져옵니다.</summary>
      <returns>null이 아닌 <see cref="T:Microsoft.VisualStudio.Text.ITextSnapshotLine" />입니다.</returns>
      <param name="lineNumber">줄 번호입니다.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="lineNumber" /> is less than zero or greater than or equal to LineCount/&gt;.</exception>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.ITextSnapshot.GetLineFromPosition(System.Int32)">
      <summary>지정된 위치에서 줄의 <see cref="T:Microsoft.VisualStudio.Text.ITextSnapshotLine" />을 가져옵니다.</summary>
      <returns>null이 아닌 <see cref="T:Microsoft.VisualStudio.Text.ITextSnapshotLine" />입니다.</returns>
      <param name="position">위치입니다.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="position" /> is less than zero or greater than length of line.</exception>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.ITextSnapshot.GetLineNumberFromPosition(System.Int32)">
      <summary>지정된 위치에서 문자를 포함하는 줄의 번호를 가져옵니다.</summary>
      <returns>
        <paramref name="position" />이 있는 줄의 줄 번호입니다.</returns>
      <param name="position">줄 번호를 가져올 위치입니다.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="position" /> is less than zero or greater than Length.</exception>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.ITextSnapshot.GetText">
      <summary>스냅숏의 모든 텍스트를 가져옵니다.</summary>
      <returns>null이 아닌 문자열입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.ITextSnapshot.GetText(Microsoft.VisualStudio.Text.Span)">
      <summary>스냅숏에서 범위의 처음부터 시작하여 길이가 범위의 길이와 같은 텍스트를 가져옵니다.</summary>
      <returns>null이 아닌 문자열입니다.</returns>
      <param name="span">반환할 범위입니다.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">The end of the span is greater than <see cref="P:Microsoft.VisualStudio.Text.ITextSnapshot.Length" />.</exception>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.ITextSnapshot.GetText(System.Int32,System.Int32)">
      <summary>스냅숏에서 <paramref name="startIndex" />부터 시작하여 길이가 <paramref name="length" />와 같은 텍스트를 가져옵니다.</summary>
      <returns>기본 <see cref="T:Microsoft.VisualStudio.Text.ITextBuffer" />의 <paramref name="startIndex" />에서 시작하는 길이 <paramref name="length" />의 문자열입니다.</returns>
      <param name="startIndex">시작 인덱스입니다.</param>
      <param name="length">가져올 텍스트의 길이입니다.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="startIndex" /> is less than zero or greater than the length of the snapshot, or <paramref name="length" /> is less than zero, or <paramref name="startIndex" /> plus <paramref name="length" /> is greater than the length of the snapshot.</exception>
    </member>
    <member name="P:Microsoft.VisualStudio.Text.ITextSnapshot.Item(System.Int32)">
      <summary>지정된 위치의 단일 문자열을 가져옵니다.</summary>
      <returns>
        <paramref name="position" />의 문자입니다.</returns>
      <param name="position">문자의 위치입니다.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="position" /> is less than zero or greater than or equal to the length of the snapshot.</exception>
    </member>
    <member name="P:Microsoft.VisualStudio.Text.ITextSnapshot.Length">
      <summary>스냅숏에 포함된 UTF-16 문자의 수를 가져옵니다.</summary>
      <returns>문자 수입니다.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.Text.ITextSnapshot.LineCount">
      <summary>스냅숏의 줄을 나타내는 양수를 가져옵니다. <see cref="P:Microsoft.VisualStudio.Text.ITextSnapshot.Length" />가 0인 스냅숏은 한 줄을 포함한 것으로 간주됩니다.</summary>
      <returns>줄 수입니다.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.Text.ITextSnapshot.Lines">
      <summary>스냅숏의 줄 집합에 대한 열거자입니다.</summary>
      <returns>
        <see cref="T:Microsoft.VisualStudio.Text.ITextSnapshotLine" /> 형식의 <see cref="T:System.Collections.Generic.IEnumerable`1" />입니다.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.Text.ITextSnapshot.TextBuffer">
      <summary>스냅숏의 기반이 되는 <see cref="T:Microsoft.VisualStudio.Text.ITextBuffer" />입니다.</summary>
      <returns>
        <see cref="T:Microsoft.VisualStudio.Text.ITextBuffer" />입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.ITextSnapshot.ToCharArray(System.Int32,System.Int32)">
      <summary>텍스트 범위를 문자 배열로 변환합니다.</summary>
      <returns>기본 <see cref="T:Microsoft.VisualStudio.Text.ITextBuffer" />의 <paramref name="startIndex" />에서 시작하고 해당 끝까지 확장되는 문자 배열입니다.</returns>
      <param name="startIndex">텍스트 범위의 시작 인덱스입니다.</param>
      <param name="length">텍스트의 길이입니다.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="startIndex" /> is less than zero or greater than the length of the snapshot, or <paramref name="length" /> is less than zero, or <paramref name="startIndex" /> plus <paramref name="length" /> is greater than the length of the snapshot.</exception>
    </member>
    <member name="P:Microsoft.VisualStudio.Text.ITextSnapshot.Version">
      <summary>이 <see cref="T:Microsoft.VisualStudio.Text.ITextSnapshot" />이 나타내는 <see cref="T:Microsoft.VisualStudio.Text.ITextBuffer" />의 버전입니다.</summary>
      <returns>
        <see cref="T:Microsoft.VisualStudio.Text.ITextVersion" />입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.ITextSnapshot.Write(System.IO.TextWriter)">
      <summary>스냅숏의 내용을 씁니다.</summary>
      <param name="writer">사용할 <see cref="T:System.IO.TextWriter" />입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="writer" /> is null.</exception>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.ITextSnapshot.Write(System.IO.TextWriter,Microsoft.VisualStudio.Text.Span)">
      <summary>스냅숏 내용의 부분 문자열을 씁니다.</summary>
      <param name="writer">사용할 <see cref="T:System.IO.TextWriter" />입니다.</param>
      <param name="span">쓰려는 텍스트의 범위입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="writer" /> is null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">The end of the span is greater than the length of the snapshot.</exception>
    </member>
    <member name="T:Microsoft.VisualStudio.Text.ITextSnapshotLine">
      <summary>ITextSnapshot의 텍스트 줄에 대한 변경할 수 없는 정보입니다.</summary>
    </member>
    <member name="P:Microsoft.VisualStudio.Text.ITextSnapshotLine.End">
      <summary>줄 바꿈 문자를 제외하고 줄의 끝을 벗어나는 첫 번째 문자의 <see cref="T:Microsoft.VisualStudio.Text.SnapshotPoint" />입니다. 따라서 이 속성은 줄 바꿈 문자를 가리키게 됩니다. 단, 버퍼 끝을 벗어나는 위치를 가리키는 버퍼의 마지막 줄은 예외입니다.</summary>
    </member>
    <member name="P:Microsoft.VisualStudio.Text.ITextSnapshotLine.EndIncludingLineBreak">
      <summary>줄 바꿈 문자를 포함하여 줄의 끝을 벗어나는 첫 번째 문자의 <see cref="T:Microsoft.VisualStudio.Text.SnapshotPoint" />입니다. 따라서 이 속성은 다음 줄의 첫 번째 문자를 가리키게 됩니다. 단, 다음 줄이 버퍼 끝을 벗어나는 위치를 가리키는 버퍼의 마지막 줄인 경우에는 예외입니다.</summary>
    </member>
    <member name="P:Microsoft.VisualStudio.Text.ITextSnapshotLine.Extent">
      <summary>줄 바꿈 문자를 제외한 줄의 범위입니다.</summary>
    </member>
    <member name="P:Microsoft.VisualStudio.Text.ITextSnapshotLine.ExtentIncludingLineBreak">
      <summary>줄 바꿈 문자를 포함한 줄의 범위입니다.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.ITextSnapshotLine.GetLineBreakText">
      <summary>줄 끝에서 줄 바꿈 문자(있는 경우)로 구성된 문자열을 가져옵니다. 버퍼의 마지막 줄의 경우 길이가 0입니다.</summary>
      <returns>문자열입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.ITextSnapshotLine.GetText">
      <summary>줄 바꿈 문자를 제외하고 줄의 텍스트를 가져옵니다.</summary>
      <returns>줄의 텍스트입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.ITextSnapshotLine.GetTextIncludingLineBreak">
      <summary>줄 바꿈 문자를 포함하여 줄의 텍스트를 가져옵니다.</summary>
      <returns>줄의 텍스트입니다.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.Text.ITextSnapshotLine.Length">
      <summary>줄 바꿈 문자를 제외한 줄의 길이입니다.</summary>
    </member>
    <member name="P:Microsoft.VisualStudio.Text.ITextSnapshotLine.LengthIncludingLineBreak">
      <summary>줄 바꿈 문자를 포함한 줄의 길이입니다.</summary>
    </member>
    <member name="P:Microsoft.VisualStudio.Text.ITextSnapshotLine.LineBreakLength">
      <summary>줄 바꿈 문자의 길이입니다. 항상 [0..2] 범위에 속합니다.</summary>
    </member>
    <member name="P:Microsoft.VisualStudio.Text.ITextSnapshotLine.LineNumber">
      <summary>0부터 시작하는 줄의 줄 번호입니다.</summary>
    </member>
    <member name="P:Microsoft.VisualStudio.Text.ITextSnapshotLine.Snapshot">
      <summary>줄이 나타나는 <see cref="T:Microsoft.VisualStudio.Text.ITextSnapshot" />입니다.</summary>
    </member>
    <member name="P:Microsoft.VisualStudio.Text.ITextSnapshotLine.Start">
      <summary>줄에 있는 첫 번째 문자의 <see cref="T:Microsoft.VisualStudio.Text.SnapshotPoint" />입니다.</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.Text.ITextVersion">
      <summary>
        <see cref="T:Microsoft.VisualStudio.Text.ITextBuffer" />의 버전을 설명합니다. 텍스트 버퍼에 <see cref="T:Microsoft.VisualStudio.Text.ITextEdit" />를 적용할 때마다 새 ITextVersion이 생성됩니다.</summary>
    </member>
    <member name="P:Microsoft.VisualStudio.Text.ITextVersion.Changes">
      <summary>다음 버전을 생성하는 텍스트 변경을 가져옵니다. 해당 텍스트 버퍼의 가장 최신 버전인 경우에만 null을 반환합니다.</summary>
      <returns>텍스트 변경입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.ITextVersion.CreateCustomTrackingSpan(Microsoft.VisualStudio.Text.Span,Microsoft.VisualStudio.Text.TrackingFidelityMode,System.Object,Microsoft.VisualStudio.Text.CustomTrackToVersion)">
      <summary>이 버전에 대해 사용자 지정 <see cref="T:Microsoft.VisualStudio.Text.ITrackingSpan" />을 만듭니다.</summary>
      <returns>null이 아닌 <see cref="T:Microsoft.VisualStudio.Text.ITrackingSpan" />입니다.</returns>
      <param name="span">이 스냅숏에서 <see cref="T:Microsoft.VisualStudio.Text.ITrackingSpan" />이 나타낼 텍스트의 범위입니다.</param>
      <param name="trackingFidelity">범위의 추적 정밀도입니다.</param>
      <param name="customState">해당 범위와 관련된 클라이언트 정의 상태입니다.</param>
      <param name="behavior">사용자 지정 추적 동작입니다.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="span" />.End is greater than <see cref="P:Microsoft.VisualStudio.Text.ITextVersion.Length" />.</exception>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.ITextVersion.CreateTrackingPoint(System.Int32,Microsoft.VisualStudio.Text.PointTrackingMode)">
      <summary>이 버전에 대해 <see cref="T:Microsoft.VisualStudio.Text.ITrackingPoint" />를 만듭니다.</summary>
      <returns>null이 아닌 <see cref="T:Microsoft.VisualStudio.Text.ITrackingPoint" />입니다.</returns>
      <param name="position">지점의 위치입니다.</param>
      <param name="trackingMode">지점의 추적 모드입니다.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="position" /> is less than zero or greater than the length of this version.</exception>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.ITextVersion.CreateTrackingPoint(System.Int32,Microsoft.VisualStudio.Text.PointTrackingMode,Microsoft.VisualStudio.Text.TrackingFidelityMode)">
      <summary>이 버전에 대해 <see cref="T:Microsoft.VisualStudio.Text.ITrackingPoint" />를 만듭니다.</summary>
      <returns>null이 아닌 <see cref="T:Microsoft.VisualStudio.Text.ITrackingPoint" />입니다.</returns>
      <param name="position">지점의 위치입니다.</param>
      <param name="trackingMode">지점의 추적 모드입니다.</param>
      <param name="trackingFidelity">지점의 추적 정밀도입니다.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="position" /> is less than zero or greater than the length of the snapshot.</exception>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.ITextVersion.CreateTrackingSpan(Microsoft.VisualStudio.Text.Span,Microsoft.VisualStudio.Text.SpanTrackingMode)">
      <summary>이 버전에 대해 <see cref="T:Microsoft.VisualStudio.Text.ITrackingSpan" />을 만듭니다.</summary>
      <returns>null이 아닌 <see cref="T:Microsoft.VisualStudio.Text.ITrackingSpan" />입니다.</returns>
      <param name="span">이 스냅숏에서 <see cref="T:Microsoft.VisualStudio.Text.ITrackingSpan" />이 나타낼 텍스트의 범위입니다.</param>
      <param name="trackingMode">
        <see cref="T:Microsoft.VisualStudio.Text.ITrackingSpan" />이 해당 경계의 변경에 반응할 방식입니다.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="span" />.End is greater than the length of this version, or <paramref name="trackingMode" /> is equal to <see cref="F:Microsoft.VisualStudio.Text.SpanTrackingMode.Custom" />.</exception>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.ITextVersion.CreateTrackingSpan(Microsoft.VisualStudio.Text.Span,Microsoft.VisualStudio.Text.SpanTrackingMode,Microsoft.VisualStudio.Text.TrackingFidelityMode)">
      <summary>이 버전에 대해 <see cref="T:Microsoft.VisualStudio.Text.ITrackingSpan" />을 만듭니다.</summary>
      <returns>null이 아닌 <see cref="T:Microsoft.VisualStudio.Text.ITrackingSpan" />입니다.</returns>
      <param name="span">이 스냅숏에서 <see cref="T:Microsoft.VisualStudio.Text.ITrackingSpan" />이 나타낼 텍스트의 범위입니다.</param>
      <param name="trackingMode">
        <see cref="T:Microsoft.VisualStudio.Text.ITrackingSpan" />이 해당 경계의 변경에 반응할 방식입니다.</param>
      <param name="trackingFidelity">범위의 추적 정밀도입니다.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="span" />.End is greater than <see cref="P:Microsoft.VisualStudio.Text.ITextVersion.Length" />, or <paramref name="trackingMode" /> is equal to <see cref="F:Microsoft.VisualStudio.Text.SpanTrackingMode.Custom" />.</exception>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.ITextVersion.CreateTrackingSpan(System.Int32,System.Int32,Microsoft.VisualStudio.Text.SpanTrackingMode)">
      <summary>이 버전에 대해 <see cref="T:Microsoft.VisualStudio.Text.ITrackingSpan" />을 만듭니다.</summary>
      <returns>null이 아닌 <see cref="T:Microsoft.VisualStudio.Text.ITrackingSpan" />입니다.</returns>
      <param name="start">이 버전에서 <see cref="T:Microsoft.VisualStudio.Text.ITrackingSpan" />의 시작 위치입니다.</param>
      <param name="length">이 버전에서 <see cref="T:Microsoft.VisualStudio.Text.ITrackingSpan" />의 길이입니다.</param>
      <param name="trackingMode">
        <see cref="T:Microsoft.VisualStudio.Text.ITrackingSpan" />이 해당 경계의 변경에 반응할 방식입니다.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="start" /> is negative or greater than the length of this version, or <paramref name="length" /> is negative, or <paramref name="start" /> + <paramref name="length" /> is less than <paramref name="start" />, or <paramref name="trackingMode" /> is equal to <see cref="F:Microsoft.VisualStudio.Text.SpanTrackingMode.Custom" />.</exception>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.ITextVersion.CreateTrackingSpan(System.Int32,System.Int32,Microsoft.VisualStudio.Text.SpanTrackingMode,Microsoft.VisualStudio.Text.TrackingFidelityMode)">
      <summary>이 버전에 대해 <see cref="T:Microsoft.VisualStudio.Text.ITrackingSpan" />을 만듭니다.</summary>
      <returns>null이 아닌 <see cref="T:Microsoft.VisualStudio.Text.ITrackingSpan" />입니다.</returns>
      <param name="start">이 스냅숏에서 <see cref="T:Microsoft.VisualStudio.Text.ITrackingSpan" />의 시작 위치입니다.</param>
      <param name="length">이 스냅숏에서 <see cref="T:Microsoft.VisualStudio.Text.ITrackingSpan" />의 길이입니다.</param>
      <param name="trackingMode">
        <see cref="T:Microsoft.VisualStudio.Text.ITrackingSpan" />이 해당 경계의 변경에 반응할 방식입니다.</param>
      <param name="trackingFidelity">추적 정밀도 모드입니다.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="start" /> is negative or greater than <see cref="P:Microsoft.VisualStudio.Text.ITextVersion.Length" />, or <paramref name="length" /> is negative, or <paramref name="start" /> + <paramref name="length" /> is less than <paramref name="start" />, or <paramref name="trackingMode" /> is equal to <see cref="F:Microsoft.VisualStudio.Text.SpanTrackingMode.Custom" />.</exception>
    </member>
    <member name="P:Microsoft.VisualStudio.Text.ITextVersion.Length">
      <summary>이 <see cref="T:Microsoft.VisualStudio.Text.ITextVersion" />의 길이(문자 수)를 가져옵니다.</summary>
      <returns>이 버전의 문자 수입니다.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.Text.ITextVersion.Next">
      <summary>다음 <see cref="T:Microsoft.VisualStudio.Text.ITextVersion" />을 가져옵니다. 해당 텍스트 버퍼의 가장 최신 버전인 경우에만 null을 반환합니다.</summary>
      <returns>다음 텍스트 버전입니다.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.Text.ITextVersion.ReiteratedVersionNumber">
      <summary>두 버전 간의 모든 텍스트 변경이 해당 실행 취소/다시 실행 작업에 의해 취소된 가장 오래된 버전 번호를 가져옵니다.</summary>
      <returns>가장 오래된 버전의 번호입니다.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.Text.ITextVersion.TextBuffer">
      <summary>이 <see cref="T:Microsoft.VisualStudio.Text.ITextVersion" />이 적용되는 <see cref="T:Microsoft.VisualStudio.Text.ITextBuffer" />입니다.</summary>
      <returns>텍스트 버퍼입니다.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.Text.ITextVersion.VersionNumber">
      <summary>이 버전의 버전 번호입니다. 같은 버퍼의 버전 간 비교에 사용됩니다.</summary>
      <returns>버전 번호입니다.</returns>
    </member>
    <member name="T:Microsoft.VisualStudio.Text.ITrackingPoint">
      <summary>
        <see cref="T:Microsoft.VisualStudio.Text.ITextBuffer" />의 추적 위치입니다.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.ITrackingPoint.GetCharacter(Microsoft.VisualStudio.Text.ITextSnapshot)">
      <summary>이 추적 지점을 지정된 스냅숏에 매핑하고 해당 위치의 문자를 가져옵니다.</summary>
      <returns>지정된 위치의 문자입니다.</returns>
      <param name="snapshot">위치를 매핑할 스냅숏입니다.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">This ITrackingPoint denotes the end position of the snapshot.</exception>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.ITrackingPoint.GetPoint(Microsoft.VisualStudio.Text.ITextSnapshot)">
      <summary>추적 지점을 해당 <see cref="T:Microsoft.VisualStudio.Text.ITextBuffer" />의 특정 스냅숏에 매핑합니다.</summary>
      <returns>
        <see cref="T:Microsoft.VisualStudio.Text.SnapshotPoint" />입니다.</returns>
      <param name="snapshot">추적 지점을 매핑할 스냅숏입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="snapshot" /> is null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="snapshot" /> is not a snapshot of <see cref="T:Microsoft.VisualStudio.Text.ITextBuffer" />.</exception>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.ITrackingPoint.GetPosition(Microsoft.VisualStudio.Text.ITextSnapshot)">
      <summary>지정된 <see cref="T:Microsoft.VisualStudio.Text.ITextSnapshot" />에서 추적 지점의 위치입니다.</summary>
      <returns>지정된 스냅숏의 정수 위치입니다.</returns>
      <param name="snapshot">위치를 매핑할 스냅숏입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="snapshot" /> is null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="snapshot" /> is not a snapshot of <see cref="P:Microsoft.VisualStudio.Text.ITrackingPoint.TextBuffer" />.</exception>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.ITrackingPoint.GetPosition(Microsoft.VisualStudio.Text.ITextVersion)">
      <summary>지정된 <see cref="T:Microsoft.VisualStudio.Text.ITextVersion" />에서 추적 지점의 위치입니다.</summary>
      <returns>지정된 버전의 정수 위치입니다.</returns>
      <param name="version">위치를 매핑할 버전입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="version" /> is null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="version" /> is not a version of <see cref="P:Microsoft.VisualStudio.Text.ITrackingPoint.TextBuffer" />.</exception>
    </member>
    <member name="P:Microsoft.VisualStudio.Text.ITrackingPoint.TextBuffer">
      <summary>이 지점에서 참조할 <see cref="T:Microsoft.VisualStudio.Text.ITextBuffer" />입니다.</summary>
    </member>
    <member name="P:Microsoft.VisualStudio.Text.ITrackingPoint.TrackingFidelity">
      <summary>이전 버전으로 이동하는 경우 또는 실행 취소 또는 다시 실행으로 인해 이전 버전의 복제 버전이 발생할 경우 추적 지점의 동작 방식을 확인합니다.</summary>
    </member>
    <member name="P:Microsoft.VisualStudio.Text.ITrackingPoint.TrackingMode">
      <summary>해당 위치에서 삽입이 발생할 경우 추적 지점이 이동하는지 아니면 고정된 상태를 유지하는지를 확인합니다.</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.Text.ITrackingSpan">
      <summary>텍스트 버퍼의 변경에 따라 늘어나거나 줄어드는 <see cref="T:Microsoft.VisualStudio.Text.ITextBuffer" />의 텍스트 범위입니다. 범위는 비어 있을 수 있습니다.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.ITrackingSpan.GetEndPoint(Microsoft.VisualStudio.Text.ITextSnapshot)">
      <summary>추적 범위의 끝을 해당 텍스트 버퍼의 특정 스냅숏에 매핑합니다.</summary>
      <returns>제공된 스냅숏의 <see cref="T:Microsoft.VisualStudio.Text.SnapshotPoint" />입니다.</returns>
      <param name="snapshot">끝점을 매핑할 스냅숏입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="snapshot" /> is null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="snapshot" /> is not a snapshot of <see cref="P:Microsoft.VisualStudio.Text.ITrackingSpan.TextBuffer" />.</exception>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.ITrackingSpan.GetSpan(Microsoft.VisualStudio.Text.ITextSnapshot)">
      <summary>추적 범위를 해당 텍스트 버퍼의 특정 스냅숏에 매핑합니다.</summary>
      <returns>
        <see cref="T:Microsoft.VisualStudio.Text.SnapshotSpan" />입니다.</returns>
      <param name="snapshot">추적 범위를 매핑할 스냅숏입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="snapshot" /> is null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="snapshot" /> is not a snapshot of <see cref="P:Microsoft.VisualStudio.Text.ITrackingSpan.TextBuffer" />.</exception>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.ITrackingSpan.GetSpan(Microsoft.VisualStudio.Text.ITextVersion)">
      <summary>TrackingSpan을 해당 텍스트 버퍼의 특정 버전에 매핑합니다.</summary>
      <returns>
        <see cref="T:Microsoft.VisualStudio.Text.Span" />입니다.</returns>
      <param name="version">추적 범위를 매핑할 버전입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="version" /> is null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="version" /> is not a version of <see cref="P:Microsoft.VisualStudio.Text.ITrackingSpan.TextBuffer" />.</exception>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.ITrackingSpan.GetStartPoint(Microsoft.VisualStudio.Text.ITextSnapshot)">
      <summary>추적 범위의 시작을 해당 텍스트 버퍼의 특정 스냅숏에 매핑합니다.</summary>
      <returns>제공된 스냅숏의 <see cref="T:Microsoft.VisualStudio.Text.SnapshotPoint" />입니다.</returns>
      <param name="snapshot">시작점을 매핑할 스냅숏입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="snapshot" /> is null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="snapshot" /> is not a snapshot of <see cref="P:Microsoft.VisualStudio.Text.ITrackingSpan.TextBuffer" />.</exception>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.ITrackingSpan.GetText(Microsoft.VisualStudio.Text.ITextSnapshot)">
      <summary>추적 범위를 해당 텍스트 버퍼의 특정 스냅숏에 매핑하고 추적 범위에서 지정하는 텍스트를 가져옵니다.</summary>
      <returns>지정된 텍스트 스냅숏에서 추적 범위의 내용입니다.</returns>
      <param name="snapshot">추적 범위를 매핑할 스냅숏입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="snapshot" /> is null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="snapshot" /> is not a snapshot of <see cref="P:Microsoft.VisualStudio.Text.ITrackingSpan.TextBuffer" />.</exception>
    </member>
    <member name="P:Microsoft.VisualStudio.Text.ITrackingSpan.TextBuffer">
      <summary>이 추적 범위에서 참조하는 <see cref="T:Microsoft.VisualStudio.Text.ITextBuffer" />입니다.</summary>
    </member>
    <member name="P:Microsoft.VisualStudio.Text.ITrackingSpan.TrackingFidelity">
      <summary>추적 범위의 <see cref="T:Microsoft.VisualStudio.Text.TrackingFidelityMode" />로, 이전 버전으로 이동하는 경우 또는 실행 취소 또는 다시 실행으로 인해 이전 버전의 복제 버전이 발생할 경우 추적 범위의 동작 방식을 결정합니다.</summary>
    </member>
    <member name="P:Microsoft.VisualStudio.Text.ITrackingSpan.TrackingMode">
      <summary>이 추적 범위의 <see cref="P:Microsoft.VisualStudio.Text.ITrackingSpan.TrackingMode" />로, 삽입이 추적 범위의 가장자리에서 발생할 경우 해당 범위의 동작 방식을 결정합니다.</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.Text.NormalizedSnapshotSpanCollection">
      <summary>같은 스냅숏의 모든 <see cref="T:Microsoft.VisualStudio.Text.SnapshotSpan" /> 개체로 구성된 읽기 전용 컬렉션입니다.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.NormalizedSnapshotSpanCollection.#ctor">
      <summary>빈 <see cref="T:Microsoft.VisualStudio.Text.NormalizedSnapshotSpanCollection" />을 초기화합니다.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.NormalizedSnapshotSpanCollection.#ctor(Microsoft.VisualStudio.Text.ITextSnapshot,Microsoft.VisualStudio.Text.NormalizedSpanCollection)">
      <summary>
        <see cref="T:Microsoft.VisualStudio.Text.NormalizedSpanCollection" /> 및 <see cref="T:Microsoft.VisualStudio.Text.ITextSnapshot" />을 사용하여 <see cref="T:Microsoft.VisualStudio.Text.NormalizedSnapshotSpanCollection" />의 새 인스턴스를 초기화합니다.</summary>
      <param name="snapshot">
        <paramref name="spans" />에 적용할 <see cref="T:Microsoft.VisualStudio.Text.ITextSnapshot" />입니다.</param>
      <param name="spans">정규화된 범위입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="snapshot" /> or <paramref name="spans" /> is null.</exception>
      <exception cref="T:System.ArgumentException">The spans in <paramref name="spans" /> extend beyond the end of <paramref name="snapshot" />.</exception>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.NormalizedSnapshotSpanCollection.#ctor(Microsoft.VisualStudio.Text.ITextSnapshot,System.Collections.Generic.IEnumerable{Microsoft.VisualStudio.Text.Span})">
      <summary>
        <see cref="T:Microsoft.VisualStudio.Text.Span" />의 목록 및 <see cref="T:Microsoft.VisualStudio.Text.ITextSnapshot" />을 사용하여 <see cref="T:Microsoft.VisualStudio.Text.NormalizedSnapshotSpanCollection" />의 새 인스턴스를 초기화합니다.</summary>
      <param name="snapshot">
        <paramref name="spans" />에 적용할 <see cref="T:Microsoft.VisualStudio.Text.ITextSnapshot" />입니다.</param>
      <param name="spans">임의의 <see cref="T:Microsoft.VisualStudio.Text.Span" /> 개체 집합입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="snapshot" /> or <paramref name="spans" /> is null.</exception>
      <exception cref="T:System.ArgumentException">The spans in <paramref name="spans" /> extend beyond the end of <paramref name="snapshot" />.</exception>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.NormalizedSnapshotSpanCollection.#ctor(Microsoft.VisualStudio.Text.SnapshotSpan)">
      <summary>단일 요소를 사용하여 <see cref="T:Microsoft.VisualStudio.Text.NormalizedSnapshotSpanCollection" />의 새 인스턴스를 초기화합니다.</summary>
      <param name="span">컬렉션의 단독 멤버입니다.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="span" /> is not initialized.</exception>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.NormalizedSnapshotSpanCollection.#ctor(System.Collections.Generic.IEnumerable{Microsoft.VisualStudio.Text.SnapshotSpan})">
      <summary>
        <see cref="T:Microsoft.VisualStudio.Text.SnapshotSpan" /> 개체의 목록을 사용하여 <see cref="T:Microsoft.VisualStudio.Text.NormalizedSnapshotSpanCollection" />의 새 인스턴스를 초기화합니다.</summary>
      <param name="snapshotSpans">임의의 <see cref="T:Microsoft.VisualStudio.Text.SnapshotSpan" /> 개체 집합입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="snapshotSpans" /> is null.</exception>
      <exception cref="T:System.ArgumentException">A <see cref="T:Microsoft.VisualStudio.Text.SnapshotSpan" /> is uninitialized, or it does not refer to the same <see cref="T:Microsoft.VisualStudio.Text.ITextSnapshot" /> as the other snapshot spans, or it refers to an uninitialized <see cref="T:Microsoft.VisualStudio.Text.ITextSnapshot" />.</exception>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.NormalizedSnapshotSpanCollection.Contains(Microsoft.VisualStudio.Text.SnapshotSpan)">
      <summary>컬렉션에 지정된 스냅숏 범위가 포함되는지 여부를 확인합니다.</summary>
      <returns>
            컬렉션에 해당 스냅숏 범위가 있으면 true이고, 그렇지 않으면 false입니다.</returns>
      <param name="item">스냅숏 범위입니다.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.NormalizedSnapshotSpanCollection.Contains(System.Object)">
      <summary>컬렉션에 지정된 스냅숏 범위가 포함되는지 여부를 확인합니다.</summary>
      <returns>
            컬렉션에 해당 스냅숏 범위가 있으면 true이고, 그렇지 않으면 false입니다.</returns>
      <param name="value">스냅숏 범위입니다.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.NormalizedSnapshotSpanCollection.CopyTo(Microsoft.VisualStudio.Text.SnapshotSpan[],System.Int32)">
      <summary>컬렉션을 지정된 위치의 스냅숏 범위 배열로 복사합니다.</summary>
      <param name="array">스냅숏 범위의 배열입니다.</param>
      <param name="arrayIndex">스냅숏 범위를 복사할 위치입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> is null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="arrayIndex" /> is negative or greater than the array length, or the number of spans in the collection is greater than the length of the array minus the array index.</exception>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.NormalizedSnapshotSpanCollection.CopyTo(System.Array,System.Int32)">
      <summary>이 컬렉션의 스냅숏 범위를 지정된 인덱스에서 시작하는 지정된 배열로 복사합니다.</summary>
      <param name="array">배열입니다.</param>
      <param name="index">복사를 시작할 위치입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> is null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> is negative, or greater than the length of the array, or the number of spans is greater than the length of the array less the index.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="array" /> is not one-dimensional.</exception>
    </member>
    <member name="P:Microsoft.VisualStudio.Text.NormalizedSnapshotSpanCollection.Count">
      <summary>컬렉션의 범위 수를 가져옵니다.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.NormalizedSnapshotSpanCollection.Difference(Microsoft.VisualStudio.Text.NormalizedSnapshotSpanCollection,Microsoft.VisualStudio.Text.NormalizedSnapshotSpanCollection)">
      <summary>두 정규화된 스냅숏 범위 컬렉션 간의 차이를 계산하고 결과를 정규화합니다.</summary>
      <returns>정규화된 차집합입니다.</returns>
      <param name="left">
        <paramref name="right" />를 뺄 컬렉션입니다.</param>
      <param name="right">
        <paramref name="left" />에서 뺄 컬렉션입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="left" /> or <paramref name="right" /> is null.</exception>
      <exception cref="T:System.ArgumentException">The input collections refer to different snapshots.</exception>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.NormalizedSnapshotSpanCollection.Equals(System.Object)">
      <summary>두 스냅숏 범위 컬렉션이 같은지 여부를 확인합니다.</summary>
      <returns>
            두 컬렉션이 같으면 true이고, 그렇지 않으면 false입니다.</returns>
      <param name="obj">두 번째 컬렉션입니다.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.NormalizedSnapshotSpanCollection.GetEnumerator">
      <summary>컬렉션의 열거자를 가져옵니다.</summary>
      <returns>열거자입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.NormalizedSnapshotSpanCollection.GetHashCode">
      <summary>컬렉션의 해시 코드를 가져옵니다.</summary>
      <returns>컬렉션과 관련된 32비트 해시 코드입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.NormalizedSnapshotSpanCollection.IndexOf(Microsoft.VisualStudio.Text.SnapshotSpan)">
      <summary>지정된 <see cref="T:Microsoft.VisualStudio.Text.SnapshotSpan" />의 인덱스를 가져옵니다.</summary>
      <returns>스냅숏 범위의 인덱스입니다.</returns>
      <param name="item">
        <see cref="T:Microsoft.VisualStudio.Text.SnapshotSpan" />입니다.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.NormalizedSnapshotSpanCollection.IndexOf(System.Object)">
      <summary>지정된 스냅숏 범위의 인덱스를 가져옵니다.</summary>
      <returns>스냅숏 범위의 위치입니다.</returns>
      <param name="value">스냅숏 범위입니다.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.NormalizedSnapshotSpanCollection.Intersection(Microsoft.VisualStudio.Text.NormalizedSnapshotSpanCollection,Microsoft.VisualStudio.Text.NormalizedSnapshotSpanCollection)">
      <summary>두 정규화된 스냅숏 범위 컬렉션의 교차 부분을 계산하고 결과를 정규화합니다.</summary>
      <returns>교차 범위의 정규화된 집합입니다.</returns>
      <param name="left">첫 번째 <see cref="T:Microsoft.VisualStudio.Text.NormalizedSnapshotSpanCollection" />입니다.</param>
      <param name="right">두 번째 <see cref="T:Microsoft.VisualStudio.Text.NormalizedSnapshotSpanCollection" />입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="left" /> or <paramref name="right" /> is null.</exception>
      <exception cref="T:System.ArgumentException">The collections refer to different snapshots.</exception>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.NormalizedSnapshotSpanCollection.IntersectsWith(Microsoft.VisualStudio.Text.NormalizedSnapshotSpanCollection)">
      <summary>이 컬렉션이 다른 정규화된 스냅숏 범위 컬렉션과 교차하는지 여부를 확인합니다.</summary>
      <returns>
            두 컬렉션이 교차하면 true이고, 그렇지 않으면 false입니다.</returns>
      <param name="set">컬렉션입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="set" /> is null.</exception>
      <exception cref="T:System.ArgumentException">The input collections refer to different snapshots.</exception>
    </member>
    <member name="P:Microsoft.VisualStudio.Text.NormalizedSnapshotSpanCollection.Item(System.Int32)">
      <summary>지정된 위치의 스냅숏 범위를 가져옵니다. setter가 <see cref="T:System.NotSupportedException" />을 throw합니다.</summary>
      <returns>스냅숏 범위입니다.</returns>
      <param name="index">스냅숏 범위를 가져올 위치입니다.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.NormalizedSnapshotSpanCollection.op_Equality(Microsoft.VisualStudio.Text.NormalizedSnapshotSpanCollection,Microsoft.VisualStudio.Text.NormalizedSnapshotSpanCollection)">
      <summary>두 <see cref="T:Microsoft.VisualStudio.Text.NormalizedSnapshotSpanCollection" /> 개체가 같은지 여부를 확인합니다.</summary>
      <returns>
            두 집합이 같으면 true이고, 그렇지 않으면 false입니다.</returns>
      <param name="left">첫 번째 컬렉션입니다.</param>
      <param name="right">두 번째 컬렉션입니다.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.NormalizedSnapshotSpanCollection.op_Implicit(Microsoft.VisualStudio.Text.NormalizedSnapshotSpanCollection)~Microsoft.VisualStudio.Text.NormalizedSpanCollection">
      <summary>지정된 <see cref="T:Microsoft.VisualStudio.Text.NormalizedSnapshotSpanCollection" />을 <see cref="T:Microsoft.VisualStudio.Text.NormalizedSpanCollection" />으로 변환합니다.</summary>
      <returns>해당하는 정규화된 <see cref="T:Microsoft.VisualStudio.Text.Span" /> 개체 컬렉션을 포함하는 <see cref="T:Microsoft.VisualStudio.Text.NormalizedSpanCollection" />입니다.</returns>
      <param name="spans">변환할 컬렉션입니다.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.NormalizedSnapshotSpanCollection.op_Inequality(Microsoft.VisualStudio.Text.NormalizedSnapshotSpanCollection,Microsoft.VisualStudio.Text.NormalizedSnapshotSpanCollection)">
      <summary>두 <see cref="T:Microsoft.VisualStudio.Text.NormalizedSnapshotSpanCollection" />이 다른지 여부를 확인합니다.</summary>
      <returns>
            두 컬렉션이 다르면 true입니다.</returns>
      <param name="left">첫 번째 컬렉션입니다.</param>
      <param name="right">두 번째 컬렉션입니다.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.NormalizedSnapshotSpanCollection.Overlap(Microsoft.VisualStudio.Text.NormalizedSnapshotSpanCollection,Microsoft.VisualStudio.Text.NormalizedSnapshotSpanCollection)">
      <summary>두 정규화된 스냅숏 범위 컬렉션의 중첩 부분을 계산하고 결과를 정규화합니다.</summary>
      <returns>중첩 스냅숏 범위의 정규화된 집합입니다.</returns>
      <param name="left">첫 번째 <see cref="T:Microsoft.VisualStudio.Text.NormalizedSnapshotSpanCollection" />입니다.</param>
      <param name="right">두 번째 <see cref="T:Microsoft.VisualStudio.Text.NormalizedSnapshotSpanCollection" />입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="left" /> or <paramref name="right" /> is null.</exception>
      <exception cref="T:System.ArgumentException">The input collections refer to different snapshots.</exception>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.NormalizedSnapshotSpanCollection.OverlapsWith(Microsoft.VisualStudio.Text.NormalizedSnapshotSpanCollection)">
      <summary>이 컬렉션이 다른 정규화된 스냅숏 범위 컬렉션과 중첩되는지 여부를 확인합니다.</summary>
      <returns>
            두 컬렉션이 같은 스냅숏을 참조하고 둘의 범위가 중첩되면 true이고, 그렇지 않으면 false입니다.</returns>
      <param name="set">컬렉션입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="set" /> is null.</exception>
      <exception cref="T:System.ArgumentException">The collections refer to different snapshots.</exception>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.NormalizedSnapshotSpanCollection.System#Collections#Generic#ICollection{T}#Add(Microsoft.VisualStudio.Text.SnapshotSpan)">
      <param name="item">추가할 항목입니다.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.NormalizedSnapshotSpanCollection.System#Collections#Generic#ICollection{T}#Clear">
      <summary>컬렉션을 지웁니다. 이 메서드는 <see cref="T:System.NotSupportedException" />을 throw합니다.</summary>
    </member>
    <member name="P:Microsoft.VisualStudio.Text.NormalizedSnapshotSpanCollection.System#Collections#Generic#ICollection{T}#IsReadOnly">
      <summary>컬렉션이 읽기 전용인지 여부를 확인합니다. 항상 true를 반환합니다.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.NormalizedSnapshotSpanCollection.System#Collections#Generic#ICollection{T}#Remove(Microsoft.VisualStudio.Text.SnapshotSpan)">
      <summary>컬렉션에서 지정된 범위를 제거합니다. 이 메서드는 <see cref="T:System.NotSupportedException" />을 throw합니다.</summary>
      <returns>
            범위를 제거할 수 있으면 true입니다.</returns>
      <param name="item">제거할 항목입니다.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.NormalizedSnapshotSpanCollection.System#Collections#Generic#IList{T}#Insert(System.Int32,Microsoft.VisualStudio.Text.SnapshotSpan)">
      <summary>스냅숏 범위를 목록에 삽입합니다. 이 메서드는 <see cref="T:System.NotSupportedException" />을 throw합니다.</summary>
      <param name="index">스냅숏 범위를 삽입할 위치입니다.</param>
      <param name="item">삽입할 스냅숏 범위입니다.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.NormalizedSnapshotSpanCollection.System#Collections#Generic#IList{T}#RemoveAt(System.Int32)">
      <summary>지정된 위치의 스냅숏 범위를 제거합니다. 이 메서드는 <see cref="T:System.NotSupportedException" />을 throw합니다.</summary>
      <param name="index">스냅숏 범위를 제거할 위치입니다.</param>
    </member>
    <member name="P:Microsoft.VisualStudio.Text.NormalizedSnapshotSpanCollection.System#Collections#ICollection#IsSynchronized">
      <summary>이 컬렉션이 동기화되는지 여부를 확인합니다.</summary>
    </member>
    <member name="P:Microsoft.VisualStudio.Text.NormalizedSnapshotSpanCollection.System#Collections#ICollection#SyncRoot">
      <summary>이 컬렉션에 대한 액세스를 동기화하는 데 사용할 수 있는 개체를 가져옵니다.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.NormalizedSnapshotSpanCollection.System#Collections#IEnumerable#GetEnumerator">
      <summary>컬렉션의 열거자를 가져옵니다.</summary>
      <returns>열거자입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.NormalizedSnapshotSpanCollection.System#Collections#IList#Add(System.Object)">
      <summary>개체를 목록에 추가합니다. 이 메서드는 <see cref="T:System.NotSupportedException" />을 throw합니다.</summary>
      <returns>개체가 추가된 위치입니다.</returns>
      <param name="value">추가할 개체입니다.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.NormalizedSnapshotSpanCollection.System#Collections#IList#Clear">
      <summary>목록을 지웁니다. 이 메서드는 <see cref="T:System.NotSupportedException" />을 throw합니다.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.NormalizedSnapshotSpanCollection.System#Collections#IList#Insert(System.Int32,System.Object)">
      <summary>스냅숏 범위를 지정된 위치의 목록에 삽입합니다. 이 메서드는 <see cref="T:System.NotSupportedException" />을 throw합니다.</summary>
      <param name="index">위치를 나타냅니다.</param>
      <param name="value">스냅숏 범위입니다.</param>
    </member>
    <member name="P:Microsoft.VisualStudio.Text.NormalizedSnapshotSpanCollection.System#Collections#IList#IsFixedSize">
      <summary>컬렉션이 고정 크기인지 여부를 확인합니다. 항상 true를 반환합니다.</summary>
    </member>
    <member name="P:Microsoft.VisualStudio.Text.NormalizedSnapshotSpanCollection.System#Collections#IList#IsReadOnly">
      <summary>이 컬렉션이 읽기 전용인지 여부를 확인합니다. 이 속성은 항상 true를 반환합니다.</summary>
    </member>
    <member name="P:Microsoft.VisualStudio.Text.NormalizedSnapshotSpanCollection.System#Collections#IList#Item(System.Int32)">
      <summary>지정된 위치의 스냅숏 범위를 가져옵니다. setter가 <see cref="T:System.NotSupportedException" />을 throw합니다.</summary>
      <returns>스냅숏 범위입니다.</returns>
      <param name="index">위치를 나타냅니다.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.NormalizedSnapshotSpanCollection.System#Collections#IList#Remove(System.Object)">
      <summary>지정된 스냅숏 범위를 제거합니다. 이 메서드는 <see cref="T:System.NotSupportedException" />을 throw합니다.</summary>
      <param name="value">스냅숏 범위입니다.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.NormalizedSnapshotSpanCollection.System#Collections#IList#RemoveAt(System.Int32)">
      <summary>지정된 위치의 스냅숏 범위를 제거합니다. 이 메서드는 <see cref="T:System.NotSupportedException" />을 throw합니다.</summary>
      <param name="index">위치를 나타냅니다.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.NormalizedSnapshotSpanCollection.ToString">
      <summary>범위를 문자열로 변환합니다.</summary>
      <returns>문자열 표현입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.NormalizedSnapshotSpanCollection.Union(Microsoft.VisualStudio.Text.NormalizedSnapshotSpanCollection,Microsoft.VisualStudio.Text.NormalizedSnapshotSpanCollection)">
      <summary>두 스냅숏 범위 컬렉션의 공통 부분을 계산하고 결과를 정규화합니다.</summary>
      <returns>입력 컬렉션의 정규화된 공통 부분입니다.</returns>
      <param name="left">첫 번째 <see cref="T:Microsoft.VisualStudio.Text.NormalizedSnapshotSpanCollection" />입니다.</param>
      <param name="right">두 번째 <see cref="T:Microsoft.VisualStudio.Text.NormalizedSnapshotSpanCollection" />입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="left" /> or <paramref name="right" /> is null.</exception>
      <exception cref="T:System.ArgumentException">The collections refer to different snapshots.</exception>
    </member>
    <member name="T:Microsoft.VisualStudio.Text.NormalizedSpanCollection">
      <summary>시작 위치를 기준으로 정렬되고 인접 범위 및 중첩 범위가 결합된 범위의 컬렉션입니다.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.NormalizedSpanCollection.#ctor">
      <summary>비어 있는 <see cref="T:Microsoft.VisualStudio.Text.NormalizedSpanCollection" />의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.NormalizedSpanCollection.#ctor(Microsoft.VisualStudio.Text.Span)">
      <summary>지정된 범위를 포함하는 <see cref="T:Microsoft.VisualStudio.Text.NormalizedSpanCollection" />의 새 인스턴스를 초기화합니다.</summary>
      <param name="span">범위 집합에 포함된 범위입니다.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.NormalizedSpanCollection.#ctor(System.Collections.Generic.IEnumerable{Microsoft.VisualStudio.Text.Span})">
      <summary>지정된 범위 목록을 포함하는 <see cref="T:Microsoft.VisualStudio.Text.NormalizedSpanCollection" />의 새 인스턴스를 초기화합니다.</summary>
      <param name="spans">추가할 범위입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="spans" /> is null.</exception>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.NormalizedSpanCollection.Difference(Microsoft.VisualStudio.Text.NormalizedSpanCollection,Microsoft.VisualStudio.Text.NormalizedSpanCollection)">
      <summary>두 집합 간의 차집합을 찾습니다. 차집합이란 첫 번째 범위 집합에는 있지만 두 번째 범위 집합에는 없는 모든 것으로 정의됩니다.</summary>
      <returns>
        <paramref name="left" /> 및 <paramref name="right" /> 간의 차집합에 해당하는 새 범위 집합입니다.</returns>
      <param name="left">첫 번째 범위 집합입니다.</param>
      <param name="right">두 번째 범위 집합입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="left" /> is null.-or-<paramref name="right" /> is null.</exception>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.NormalizedSpanCollection.Equals(System.Object)">
      <summary>이 범위 집합이 다른 개체와 같은지 여부를 확인합니다.</summary>
      <returns>
            두 개체가 같으면 true이고, 그렇지 않으면 false입니다.</returns>
      <param name="obj">테스트할 개체입니다.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.NormalizedSpanCollection.GetHashCode">
      <summary>범위 집합의 고유한 해시 코드를 가져옵니다.</summary>
      <returns>해당 집합과 관련된 32비트 해시 코드입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.NormalizedSpanCollection.Intersection(Microsoft.VisualStudio.Text.NormalizedSpanCollection,Microsoft.VisualStudio.Text.NormalizedSpanCollection)">
      <summary>두 범위 집합의 교차 부분을 찾습니다.</summary>
      <returns>
        <paramref name="left" /> 및 <paramref name="right" /> 간의 교차 부분에 해당하는 새 범위 집합입니다.</returns>
      <param name="left">첫 번째 범위 집합입니다.</param>
      <param name="right">두 번째 범위 집합입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="left" /> is null.-or-<paramref name="right" /> is null.</exception>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.NormalizedSpanCollection.IntersectsWith(Microsoft.VisualStudio.Text.NormalizedSpanCollection)">
      <summary>이 범위 집합이 다른 범위 집합과 교차하는지 여부를 확인합니다.</summary>
      <returns>
            두 범위 집합이 교차하면 true이고, 그렇지 않으면 false입니다.</returns>
      <param name="set">테스트할 집합입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="set" /> is null.</exception>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.NormalizedSpanCollection.op_Equality(Microsoft.VisualStudio.Text.NormalizedSpanCollection,Microsoft.VisualStudio.Text.NormalizedSpanCollection)">
      <summary>두 범위 집합이 같은지 여부를 확인합니다.</summary>
      <returns>
            두 집합이 같으면 true이고, 그렇지 않으면 false입니다.</returns>
      <param name="left">첫 번째 집합입니다.</param>
      <param name="right">두 번째 집합입니다.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.NormalizedSpanCollection.op_Inequality(Microsoft.VisualStudio.Text.NormalizedSpanCollection,Microsoft.VisualStudio.Text.NormalizedSpanCollection)">
      <summary>두 범위 집합이 같지 않은지 여부를 확인합니다.</summary>
      <returns>
            두 집합이 같지 않으면 true이고, 그렇지 않으면 false입니다.</returns>
      <param name="left">첫 번째 집합입니다.</param>
      <param name="right">두 번째 집합입니다.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.NormalizedSpanCollection.Overlap(Microsoft.VisualStudio.Text.NormalizedSpanCollection,Microsoft.VisualStudio.Text.NormalizedSpanCollection)">
      <summary>두 범위 집합의 중첩 부분을 찾습니다.</summary>
      <returns>
        <paramref name="left" /> 및 <paramref name="right" />의 중첩 부분에 해당하는 새 범위 집합입니다.</returns>
      <param name="left">첫 번째 범위 집합입니다.</param>
      <param name="right">두 번째 범위 집합입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="left" /> or <paramref name="right" /> is null.</exception>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.NormalizedSpanCollection.OverlapsWith(Microsoft.VisualStudio.Text.NormalizedSpanCollection)">
      <summary>이 범위 집합이 다른 범위 집합과 중첩되는지 여부를 확인합니다.</summary>
      <returns>
            두 범위 집합이 중첩되면 true이고, 그렇지 않으면 false입니다.</returns>
      <param name="set">테스트할 범위 집합입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="set" /> is null.</exception>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.NormalizedSpanCollection.ToString">
      <summary>해당 집합의 문자열 표현을 제공합니다.</summary>
      <returns>집합의 문자열 표현입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.NormalizedSpanCollection.Union(Microsoft.VisualStudio.Text.NormalizedSpanCollection,Microsoft.VisualStudio.Text.NormalizedSpanCollection)">
      <summary>두 범위 집합의 공통 부분을 찾습니다.</summary>
      <returns>
        <paramref name="left" /> 및 <paramref name="right" />의 공통 부분에 해당하는 새 범위 집합입니다.</returns>
      <param name="left">첫 번째 범위 집합입니다.</param>
      <param name="right">두 번째 범위 집합입니다.</param>
      <exception cref="T:System.ArgumentNullException">Either <paramref name="left" /> or <paramref name="right" /> is null.</exception>
    </member>
    <member name="T:Microsoft.VisualStudio.Text.PointTrackingMode">
      <summary>
        <see cref="T:Microsoft.VisualStudio.Text.ITrackingPoint" /> 개체의 추적 모드를 나타냅니다.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Text.PointTrackingMode.Positive">
      <summary>이 설정을 사용하면 지점에서 문서의 끝 방향으로 추적하므로 현재 위치의 삽입에서 지점을 삽입된 텍스트의 끝으로 밀어냅니다. 대체 시 해당 지점이 포함된 경우 대체 텍스트의 끝 부분이 됩니다.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Text.PointTrackingMode.Negative">
      <summary>이 설정을 사용하면 지점에서 문서의 시작 방향으로 추적하므로 현재 위치의 삽입에서 지점이 영향을 받지 않습니다. 대체 시 해당 지점이 포함된 경우 대체 텍스트의 시작 부분이 됩니다.</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.Text.PositionAffinity">
      <summary>두 문자 사이에 있는 것으로 간주될 수 있는 <see cref="T:Microsoft.VisualStudio.Text.ITextBuffer" />의 위치가 선행 문자 또는 후행 문자와 결합되는지 여부를 확인합니다.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Text.PositionAffinity.Predecessor">
      <summary>선행 문자와 결합되는 위치입니다.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Text.PositionAffinity.Successor">
      <summary>후행 문자와 결합되는 위치입니다.</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.Text.PreContentChangedEventArgs">
      <summary>콘텐츠가 변경되기 전에 제공된 정보입니다.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.PreContentChangedEventArgs.#ctor(Microsoft.VisualStudio.Text.ITextSnapshot,Microsoft.VisualStudio.Text.INormalizedTextChangeCollection)">
      <summary>
        <see cref="T:Microsoft.VisualStudio.Text.PreContentChangedEventArgs" />의 새 인스턴스를 초기화합니다.</summary>
      <param name="beforeSnapshot">변경 전 텍스트 스냅숏입니다.</param>
      <param name="changes">변경 컬렉션입니다.</param>
    </member>
    <member name="P:Microsoft.VisualStudio.Text.PreContentChangedEventArgs.BeforeSnapshot">
      <summary>변경 전 텍스트 스냅숏을 가져옵니다.</summary>
    </member>
    <member name="P:Microsoft.VisualStudio.Text.PreContentChangedEventArgs.Changes">
      <summary>변경 컬렉션을 가져옵니다.</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.Text.ReloadResult">
      <summary>
        <see cref="T:Microsoft.VisualStudio.Text.ITextDocument" />에 대한 Reload 메서드의 반환 값입니다.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Text.ReloadResult.Aborted">
      <summary>텍스트 문서 버퍼의 읽기 전용 영역 또는 <see cref="E:Microsoft.VisualStudio.Text.ITextBuffer.Changing" /> 이벤트에 의해 다시 로드가 차단되었습니다.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Text.ReloadResult.Succeeded">
      <summary>다시 로드가 완료되었습니다.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Text.ReloadResult.SucceededWithCharacterSubstitutions">
      <summary>다시 로드가 완료되었지만 일부 바이트가 디코딩되지 못해 대체 문자로 바뀌었습니다.</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.Text.SnapshotPoint">
      <summary>특정 텍스트 스냅숏의 변경할 수 없는 텍스트 위치입니다.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.SnapshotPoint.#ctor(Microsoft.VisualStudio.Text.ITextSnapshot,System.Int32)">
      <summary>특정 스냅숏 및 위치를 기준으로 <see cref="T:Microsoft.VisualStudio.Text.SnapshotPoint" />의 새 인스턴스를 초기화합니다.</summary>
      <param name="snapshot">
        <see cref="T:Microsoft.VisualStudio.Text.ITextSnapshot" />입니다.</param>
      <param name="position">지점의 위치입니다.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.SnapshotPoint.Add(System.Int32)">
      <summary>이 지점의 지정된 오프셋에서 새 스냅숏 지점을 만듭니다.</summary>
      <param name="offset">새 지점의 오프셋입니다.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">The new point is less than zero or greater than Snapshot.Length.</exception>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.SnapshotPoint.CompareTo(Microsoft.VisualStudio.Text.SnapshotPoint)">
      <summary>이 스냅숏이 두 번째 스냅숏 지점과 같은지 여부를 확인합니다.</summary>
      <returns>이 스냅숏 지점의 위치가 두 번째 스냅숏 지점 앞에 있으면 음의 정수이고, 이 스냅숏 지점의 위치가 두 번째 스냅숏 지점 뒤에 있으면 양의 정수이며, 두 위치가 같으면 0입니다.</returns>
      <param name="other">비교할 스냅숏 지점입니다.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.SnapshotPoint.Difference(Microsoft.VisualStudio.Text.SnapshotPoint)">
      <summary>이 스냅숏 지점과 다른 스냅숏 지점 간의 오프셋을 계산합니다.</summary>
      <returns>두 지점, 즉 other.Position과 this.Position 간의 오프셋입니다.</returns>
      <param name="other">오프셋을 계산할 지점입니다.</param>
      <exception cref="T:System.ArgumentException">The two points do not belong to the same snapshot.</exception>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.SnapshotPoint.Equals(System.Object)">
      <summary>이 스냅숏 지점이 두 번째 스냅숏 지점과 같은지 여부를 확인합니다.</summary>
      <returns>두 개체가 같으면 true이고, 그렇지 않으면 false입니다.</returns>
      <param name="obj">다른 스냅숏 지점입니다.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.SnapshotPoint.GetChar">
      <summary>이 스냅숏 지점의 위치에서 문자를 가져옵니다.</summary>
      <returns>이 스냅숏 지점의 위치에 있는 문자입니다.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">if the position of this point is equal to the length of the snapshot.</exception>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.SnapshotPoint.GetContainingLine">
      <summary>이 스냅숏 지점을 포함하는 <see cref="T:Microsoft.VisualStudio.Text.ITextSnapshotLine" />입니다.</summary>
      <returns>
        <see cref="T:Microsoft.VisualStudio.Text.ITextSnapshotLine" />입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.SnapshotPoint.GetHashCode">
      <summary>이 형식에 대한 해시 함수 역할을 합니다.</summary>
      <returns>해시 코드입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.SnapshotPoint.op_Addition(Microsoft.VisualStudio.Text.SnapshotPoint,System.Int32)">
      <summary>스냅숏 지점의 위치를 증가시킵니다.</summary>
      <param name="point">새 위치를 계산할 지점입니다.</param>
      <param name="offset">새 지점의 오프셋입니다.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">The new point is less than zero or greater than Snapshot.Length.</exception>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.SnapshotPoint.op_Equality(Microsoft.VisualStudio.Text.SnapshotPoint,Microsoft.VisualStudio.Text.SnapshotPoint)">
      <summary>이 스냅숏 지점이 두 번째 스냅숏 지점과 같은지 여부를 확인합니다.</summary>
      <returns>두 스냅숏 지점이 같으면 true이고, 그렇지 않으면 false입니다.</returns>
      <param name="left">왼쪽 스냅숏 지점입니다.</param>
      <param name="right">오른쪽 스냅숏 지점입니다.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.SnapshotPoint.op_GreaterThan(Microsoft.VisualStudio.Text.SnapshotPoint,Microsoft.VisualStudio.Text.SnapshotPoint)">
      <summary>한 스냅숏 지점의 위치가 두 번째 스냅숏 지점의 위치보다 큰지 여부를 확인합니다.</summary>
      <returns>
            첫 번째 위치가 두 번째 위치보다 크면 true이고, 그렇지 않으면 false입니다.</returns>
      <param name="left">왼쪽 스냅숏 지점입니다.</param>
      <param name="right">오른쪽 스냅숏 지점입니다.</param>
      <exception cref="T:System.ArgumentException">The two points do not belong to the same snapshot.</exception>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.SnapshotPoint.op_Implicit(Microsoft.VisualStudio.Text.SnapshotPoint)~System.Int32">
      <summary>스냅숏에서 스냅숏 지점의 위치와 같은 정수로 스냅숏 지점을 암시적으로 변환합니다.</summary>
      <returns>스냅숏에서 스냅숏 지점의 위치와 같은 정수입니다.</returns>
      <param name="snapshotPoint">스냅숏 지점입니다.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.SnapshotPoint.op_Inequality(Microsoft.VisualStudio.Text.SnapshotPoint,Microsoft.VisualStudio.Text.SnapshotPoint)">
      <summary>이 스냅숏 지점이 두 번째 스냅숏 지점과 다른지 여부를 확인합니다.</summary>
      <returns>두 개체가 다르면 true이고, 그렇지 않으면 false입니다.</returns>
      <param name="left">왼쪽 스냅숏 지점입니다.</param>
      <param name="right">오른쪽 스냅숏 지점입니다.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.SnapshotPoint.op_LessThan(Microsoft.VisualStudio.Text.SnapshotPoint,Microsoft.VisualStudio.Text.SnapshotPoint)">
      <summary>왼쪽 지점의 위치가 오른쪽 지점의 위치보다 작은지 여부를 확인합니다.</summary>
      <returns>
            left.Position이 right.Position보다 크면 true이고, 그렇지 않으면 false입니다.</returns>
      <param name="left">왼쪽 스냅숏 지점입니다.</param>
      <param name="right">오른쪽 스냅숏 지점입니다.</param>
      <exception cref="T:System.ArgumentException">The two points do not belong to the same snapshot.</exception>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.SnapshotPoint.op_Subtraction(Microsoft.VisualStudio.Text.SnapshotPoint,Microsoft.VisualStudio.Text.SnapshotPoint)">
      <summary>두 <see cref="T:Microsoft.VisualStudio.Text.SnapshotPoint" /> 개체 간의 오프셋을 계산합니다.</summary>
      <returns>두 지점, 즉 start.Position과 other.Position 간의 오프셋입니다.</returns>
      <param name="start">시작 지점입니다.</param>
      <param name="other">오프셋을 계산할 지점입니다.</param>
      <exception cref="T:System.ArgumentException">The two points do not belong to the same snapshot.</exception>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.SnapshotPoint.op_Subtraction(Microsoft.VisualStudio.Text.SnapshotPoint,System.Int32)">
      <summary>스냅숏 지점의 위치를 감소시킵니다.</summary>
      <returns>위치를 나타내는 정수입니다.</returns>
      <param name="point">새 위치를 계산할 지점입니다.</param>
      <param name="offset">새 지점의 오프셋입니다.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">The new point is less than zero or greater than Snapshot.Length.</exception>
    </member>
    <member name="P:Microsoft.VisualStudio.Text.SnapshotPoint.Position">
      <summary>지점의 위치를 가져옵니다.</summary>
      <returns>스냅숏의 길이보다 작거나 같은 음수가 아닌 정수입니다.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.Text.SnapshotPoint.Snapshot">
      <summary>이 스냅숏 지점에서 참조하는 <see cref="T:Microsoft.VisualStudio.Text.ITextSnapshot" />을 가져옵니다.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.SnapshotPoint.Subtract(System.Int32)">
      <summary>이 지점의 지정된 음수 오프셋에서 새 스냅숏 지점을 만듭니다.</summary>
      <returns>스냅숏 지점입니다.</returns>
      <param name="offset">새 지점의 오프셋입니다.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">The new point is less than zero or greater than Snapshot.Length.</exception>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.SnapshotPoint.ToString">
      <summary>이 스냅숏 지점을 문자열로 변환하거나, <see cref="T:Microsoft.VisualStudio.Text.ITextSnapshot" />이 null인 경우 "uninit" 문자열로 변환합니다.</summary>
      <returns>문자열입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.SnapshotPoint.TranslateTo(Microsoft.VisualStudio.Text.ITextSnapshot,Microsoft.VisualStudio.Text.PointTrackingMode)">
      <summary>이 스냅숏 지점을 같은 <see cref="T:Microsoft.VisualStudio.Text.ITextBuffer" />의 다른 스냅숏으로 변환합니다.</summary>
      <returns>요청된 스냅숏으로 매핑된 새 스냅숏 지점입니다.</returns>
      <param name="targetSnapshot">변환할 스냅숏입니다.</param>
      <param name="trackingMode">변환에 사용할 <see cref="T:Microsoft.VisualStudio.Text.PointTrackingMode" />입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="targetSnapshot" /> is null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="targetSnapshot" /> does not refer to the same <see cref="T:Microsoft.VisualStudio.Text.ITextBuffer" /> as this snapshot point.</exception>
    </member>
    <member name="T:Microsoft.VisualStudio.Text.SnapshotSpan">
      <summary>특정 텍스트 스냅숏의 변경할 수 없는 텍스트 범위입니다.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.SnapshotSpan.#ctor(Microsoft.VisualStudio.Text.ITextSnapshot,Microsoft.VisualStudio.Text.Span)">
      <summary>지정된 스냅숏 및 범위를 사용하여 <see cref="T:Microsoft.VisualStudio.Text.SnapshotSpan" />의 새 인스턴스를 초기화합니다.</summary>
      <param name="snapshot">스냅숏 범위의 기반이 되는 <see cref="T:Microsoft.VisualStudio.Text.ITextSnapshot" />입니다.</param>
      <param name="span">스냅숏 범위의 범위입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="snapshot" /> is null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="span" />.End is greater than <paramref name="snapshot" />.Length.</exception>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.SnapshotSpan.#ctor(Microsoft.VisualStudio.Text.ITextSnapshot,System.Int32,System.Int32)">
      <summary>지정된 스냅숏, 시작점 및 길이를 사용하여 <see cref="T:Microsoft.VisualStudio.Text.SnapshotSpan" />의 새 인스턴스를 초기화합니다.</summary>
      <param name="snapshot">스냅숏 범위의 기반이 되는 텍스트 스냅숏입니다.</param>
      <param name="start">스냅숏 범위의 시작점입니다.</param>
      <param name="length">스냅숏 범위의 길이입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="snapshot" /> is null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="start" /> is negative or greater than <paramref name="snapshot" />.Length, or <paramref name="length" /> is negative or <paramref name="start" /> + <paramref name="length" /> is greater than <paramref name="snapshot" />.Length.</exception>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.SnapshotSpan.#ctor(Microsoft.VisualStudio.Text.SnapshotPoint,Microsoft.VisualStudio.Text.SnapshotPoint)">
      <summary>두 <see cref="T:Microsoft.VisualStudio.Text.SnapshotPoint" /> 개체를 기반으로 <see cref="T:Microsoft.VisualStudio.Text.SnapshotSpan" />의 새 인스턴스를 초기화합니다.</summary>
      <param name="start">시작점입니다.</param>
      <param name="end">시작점과 같은 <see cref="T:Microsoft.VisualStudio.Text.ITextSnapshot" />에서 가져와야 하는 끝점입니다.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">The end point comes before the start point.</exception>
      <exception cref="T:System.ArgumentException">The snapshot points belong to different <see cref="T:Microsoft.VisualStudio.Text.ITextSnapshot" /> objects.</exception>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.SnapshotSpan.#ctor(Microsoft.VisualStudio.Text.SnapshotPoint,System.Int32)">
      <summary>기존 <see cref="T:Microsoft.VisualStudio.Text.SnapshotPoint" /> 및 지정된 길이를 사용하여 <see cref="T:Microsoft.VisualStudio.Text.SnapshotSpan" />의 새 인스턴스를 초기화합니다.</summary>
      <param name="start">시작 스냅숏 지점입니다.</param>
      <param name="length">범위의 길이입니다.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="length" /> is negative or <paramref name="start" /> + <paramref name="length" /> is greater than the length of the snapshot.</exception>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.SnapshotSpan.Contains(Microsoft.VisualStudio.Text.SnapshotPoint)">
      <summary>지정된 <see cref="T:Microsoft.VisualStudio.Text.SnapshotPoint" />가 범위 내에 있는지 여부를 확인합니다.</summary>
      <returns>
            위치가 span.Start 매개 변수보다 크거나 같고 span.End 매개 변수보다 작으면 true이고, 그렇지 않으면 false입니다.</returns>
      <param name="point">확인할 지점입니다.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.SnapshotSpan.Contains(Microsoft.VisualStudio.Text.SnapshotSpan)">
      <summary>
        <paramref name="snapshotSpan" />이 이 범위 내에 완전히 속하는지 여부를 확인합니다.</summary>
      <returns>
            지정된 범위가 이 범위 내에 완전히 속하면 true이고, 그렇지 않으면 false입니다.</returns>
      <param name="snapshotSpan">확인할 범위입니다.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.SnapshotSpan.Contains(Microsoft.VisualStudio.Text.Span)">
      <summary>
        <paramref name="simpleSpan" />이 이 범위 내에 완전히 속하는지 여부를 확인합니다.</summary>
      <returns>
            지정된 범위가 이 범위 내에 완전히 속하면 true이고, 그렇지 않으면 false입니다.</returns>
      <param name="simpleSpan">확인할 범위입니다.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.SnapshotSpan.Contains(System.Int32)">
      <summary>위치가 범위 내에 있는지 여부를 확인합니다.</summary>
      <returns>
            위치가 span.Start 매개 변수보다 크거나 같고 span.End 매개 변수보다 작으면 true이고, 그렇지 않으면 false입니다.</returns>
      <param name="position">확인할 위치입니다.</param>
    </member>
    <member name="P:Microsoft.VisualStudio.Text.SnapshotSpan.End">
      <summary>스냅숏 범위의 끝을 가져옵니다. 범위가 오른쪽 제한이 없습니다. 즉, 시작 + 길이 = 끝입니다.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.SnapshotSpan.Equals(System.Object)">
      <summary>두 스냅숏 범위가 같은지 여부를 확인합니다.</summary>
      <returns>두 개체가 같으면 true이고, 그렇지 않으면 false입니다.</returns>
      <param name="obj">다른 스냅숏 범위입니다.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.SnapshotSpan.GetHashCode">
      <summary>이 형식에 대한 해시 함수 역할을 합니다.</summary>
      <returns>해시 코드입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.SnapshotSpan.GetText">
      <summary>이 스냅숏 범위에 포함된 텍스트입니다.</summary>
      <returns>null이 아닌 문자열입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.SnapshotSpan.Intersection(Microsoft.VisualStudio.Text.SnapshotSpan)">
      <summary>지정된 <see cref="T:Microsoft.VisualStudio.Text.SnapshotSpan" />과의 교차 부분을 계산하거나, 교차 부분이 없을 경우에는 null입니다.</summary>
      <returns>범위의 교차 부분이거나, 교차 부분이 비어 있을 경우에는 null입니다.</returns>
      <param name="snapshotSpan">확인할 범위입니다.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="snapshotSpan" /> does not refer to the same snapshot.</exception>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.SnapshotSpan.Intersection(Microsoft.VisualStudio.Text.Span)">
      <summary>지정된 범위와의 교차 부분을 계산하거나, 교차 부분이 없을 경우에는 null입니다.</summary>
      <returns>범위의 교차 부분이거나, 교차 부분이 비어 있을 경우에는 null입니다.</returns>
      <param name="simpleSpan">확인할 범위입니다.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.SnapshotSpan.IntersectsWith(Microsoft.VisualStudio.Text.SnapshotSpan)">
      <summary>
        <paramref name="snapshotSpan" />이 이 범위와 교차하는지 여부를 확인합니다. 공통되는 위치가 있거나, 한 범위의 끝이 다른 범위의 시작과 일치하고 둘 다 비어 있지 않을 경우 두 범위는 교차하는 것으로 간주됩니다.</summary>
      <returns>
            두 범위가 교차하면 true이고, 그렇지 않으면 false입니다.</returns>
      <param name="snapshotSpan">확인할 범위입니다.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.SnapshotSpan.IntersectsWith(Microsoft.VisualStudio.Text.Span)">
      <summary>
        <paramref name="simpleSpan" />이 이 범위와 교차하는지 여부를 확인합니다. 공통되는 위치가 있거나, 한 범위의 끝이 다른 범위의 시작과 일치하고 둘 다 비어 있지 않을 경우 두 범위는 교차하는 것으로 간주됩니다.</summary>
      <returns>
            두 범위가 교차하면 true이고, 그렇지 않으면 false입니다.</returns>
      <param name="simpleSpan">확인할 범위입니다.</param>
    </member>
    <member name="P:Microsoft.VisualStudio.Text.SnapshotSpan.IsEmpty">
      <summary>이 범위가 비어 있는지 여부를 확인합니다.</summary>
      <returns>
            범위의 길이가 0이면 true이고, 그렇지 않으면 false입니다.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.Text.SnapshotSpan.Length">
      <summary>항상 음수가 아닌 범위의 길이를 가져옵니다.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.SnapshotSpan.op_Equality(Microsoft.VisualStudio.Text.SnapshotSpan,Microsoft.VisualStudio.Text.SnapshotSpan)">
      <summary>두 스냅숏 범위가 같은지 여부를 확인합니다.</summary>
      <returns>두 개체가 같으면 true이고, 그렇지 않으면 false입니다.</returns>
      <param name="left">왼쪽 스냅숏 범위입니다.</param>
      <param name="right">오른쪽 스냅숏 범위입니다.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.SnapshotSpan.op_Implicit(Microsoft.VisualStudio.Text.SnapshotSpan)~Microsoft.VisualStudio.Text.Span">
      <summary>스냅숏 범위를 범위로 암시적으로 변환합니다.</summary>
      <returns>
        <see cref="T:Microsoft.VisualStudio.Text.Span" />입니다.</returns>
      <param name="snapshotSpan">스냅숏 범위입니다.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.SnapshotSpan.op_Inequality(Microsoft.VisualStudio.Text.SnapshotSpan,Microsoft.VisualStudio.Text.SnapshotSpan)">
      <summary>두 스냅숏 범위가 다른지 여부를 확인합니다.</summary>
      <returns>두 개체가 다르면 true이고, 그렇지 않으면 false입니다.</returns>
      <param name="left">왼쪽 스냅숏 범위입니다.</param>
      <param name="right">오른쪽 스냅숏 범위입니다.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.SnapshotSpan.Overlap(Microsoft.VisualStudio.Text.SnapshotSpan)">
      <summary>지정된 <see cref="T:Microsoft.VisualStudio.Text.SnapshotSpan" />과의 중첩 부분을 반환하거나, 중첩 부분이 없을 경우에는 null을 반환합니다.</summary>
      <returns>범위의 중첩 부분이거나, 중첩 부분이 비어 있을 경우에는 null입니다.</returns>
      <param name="snapshotSpan">확인할 범위입니다.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="snapshotSpan" /> does not refer to the same <see cref="T:Microsoft.VisualStudio.Text.ITextSnapshot" /> as this snapshot span.</exception>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.SnapshotSpan.Overlap(Microsoft.VisualStudio.Text.Span)">
      <summary>지정된 범위와의 중첩 부분을 반환하거나, 중첩 부분이 없을 경우에는 null을 반환합니다.</summary>
      <returns>범위의 중첩 부분이거나, 중첩 부분이 비어 있을 경우에는 null입니다.</returns>
      <param name="simpleSpan">확인할 범위입니다.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.SnapshotSpan.OverlapsWith(Microsoft.VisualStudio.Text.SnapshotSpan)">
      <summary>
        <paramref name="snapshotSpan" />이 이 범위와 중첩되는지 여부를 확인합니다. 공통되는 위치가 있고 둘 다 비어 있지 않을 경우 두 범위는 중첩되는 것으로 간주됩니다. 빈 범위는 다른 어떤 범위와도 중첩되지 않습니다.</summary>
      <returns>
            두 범위가 중첩되면 true이고, 그렇지 않으면 false입니다.</returns>
      <param name="snapshotSpan">중첩을 확인할 범위입니다.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.SnapshotSpan.OverlapsWith(Microsoft.VisualStudio.Text.Span)">
      <summary>
        <paramref name="simpleSpan" />이 이 범위와 중첩되는지 여부를 확인합니다. 공통되는 위치가 있고 둘 다 비어 있지 않을 경우 두 범위는 중첩되는 것으로 간주됩니다. 빈 범위는 다른 어떤 범위와도 중첩되지 않습니다.</summary>
      <returns>
            두 범위가 중첩되면 true이고, 그렇지 않으면 false입니다.</returns>
      <param name="simpleSpan">확인할 범위입니다.</param>
    </member>
    <member name="P:Microsoft.VisualStudio.Text.SnapshotSpan.Snapshot">
      <summary>이 스냅숏 범위에서 참조하는 <see cref="T:Microsoft.VisualStudio.Text.ITextSnapshot" />입니다.</summary>
    </member>
    <member name="P:Microsoft.VisualStudio.Text.SnapshotSpan.Span">
      <summary>스냅숏 범위에 포함되는 범위를 가져옵니다.</summary>
    </member>
    <member name="P:Microsoft.VisualStudio.Text.SnapshotSpan.Start">
      <summary>스냅숏 범위의 시작 인덱스를 가져옵니다.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.SnapshotSpan.ToString">
      <summary>이 스냅숏 범위를 문자열로 변환하거나, <see cref="T:Microsoft.VisualStudio.Text.ITextSnapshot" />이 null인 경우 "uninit" 문자열로 변환합니다.</summary>
      <returns>문자열입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.SnapshotSpan.TranslateTo(Microsoft.VisualStudio.Text.ITextSnapshot,Microsoft.VisualStudio.Text.SpanTrackingMode)">
      <summary>이 스냅숏 범위를 같은 <see cref="T:Microsoft.VisualStudio.Text.ITextBuffer" />의 다른 스냅숏으로 변환합니다.</summary>
      <returns>새 스냅숏 범위입니다.</returns>
      <param name="targetSnapshot">변환할 스냅숏입니다.</param>
      <param name="spanTrackingMode">변환에 사용할 <see cref="T:Microsoft.VisualStudio.Text.SpanTrackingMode" />입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="targetSnapshot" /> is null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="targetSnapshot" /> does not refer to the same <see cref="T:Microsoft.VisualStudio.Text.ITextBuffer" /> as this snapshot span.</exception>
    </member>
    <member name="T:Microsoft.VisualStudio.Text.SnapshotSpanEventArgs"></member>
    <member name="M:Microsoft.VisualStudio.Text.SnapshotSpanEventArgs.#ctor(Microsoft.VisualStudio.Text.SnapshotSpan)"></member>
    <member name="P:Microsoft.VisualStudio.Text.SnapshotSpanEventArgs.Span"></member>
    <member name="T:Microsoft.VisualStudio.Text.Span">
      <summary>왼쪽에서 닫히고 오른쪽에서 열리는 <see cref="P:Microsoft.VisualStudio.Text.Span.Start" />에서 <see cref="P:Microsoft.VisualStudio.Text.Span.End" />까지의 값 범위를 설명하는 변경할 수 없는 정수 간격 [Start .. End]입니다. 범위는 일반적으로 텍스트의 범위를 나타내기 위해 <see cref="T:Microsoft.VisualStudio.Text.ITextSnapshot" />에 적용되지만 특정 텍스트 버퍼 또는 스냅숏에 독립적입니다.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.Span.#ctor(System.Int32,System.Int32)">
      <summary>지정된 시작점 및 길이를 사용하여 <see cref="T:Microsoft.VisualStudio.Text.Span" />의 새 인스턴스를 초기화합니다.</summary>
      <param name="start">범위의 시작점입니다.</param>
      <param name="length">범위의 길이입니다.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="start" /> or <paramref name="length" /> is less than zero, or start + length is greater than the length of the text snapshot.</exception>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.Span.Contains(Microsoft.VisualStudio.Text.Span)">
      <summary>
        <paramref name="span" />이 이 범위 내에 완전히 속하는지 여부를 확인합니다.</summary>
      <returns>
            지정된 범위가 이 범위 내에 완전히 속하면 true이고, 그렇지 않으면 false입니다.</returns>
      <param name="span">확인할 범위입니다.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.Span.Contains(System.Int32)">
      <summary>위치가 범위 내에 있는지 여부를 확인합니다.</summary>
      <returns>
            위치가 Start보다 크거나 같고 End보다 작으면 true이고, 그렇지 않으면 false입니다.</returns>
      <param name="position">확인할 위치입니다.</param>
    </member>
    <member name="P:Microsoft.VisualStudio.Text.Span.End">
      <summary>범위의 끝입니다. 범위가 오른쪽 제한이 없습니다. 즉, 시작 + 길이 = 끝입니다.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.Span.Equals(System.Object)">
      <summary>두 범위가 같은지 여부를 확인합니다.</summary>
      <returns>두 개체가 같으면 true이고, 그렇지 않으면 false입니다.</returns>
      <param name="obj">비교할 개체입니다.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.Span.FromBounds(System.Int32,System.Int32)">
      <summary>지정된 시작 위치 및 끝 위치를 사용하여 <see cref="T:Microsoft.VisualStudio.Text.Span" />의 새 인스턴스를 초기화합니다.</summary>
      <returns>새 범위입니다.</returns>
      <param name="start">새 범위의 시작 위치입니다.</param>
      <param name="end">새 범위의 끝 위치입니다.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="start" /> is less than zero, or <paramref name="end" /> is less than <paramref name="start" />.</exception>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.Span.GetHashCode">
      <summary>형식에 대한 해시 함수를 제공합니다.</summary>
      <returns>해시 코드입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.Span.Intersection(Microsoft.VisualStudio.Text.Span)">
      <summary>지정된 범위와의 교차 부분을 반환하거나, 교차 부분이 없을 경우에는 null을 반환합니다.</summary>
      <returns>범위의 교차 부분이거나, 교차 부분이 비어 있을 경우에는 null입니다.</returns>
      <param name="span">확인할 범위입니다.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.Span.IntersectsWith(Microsoft.VisualStudio.Text.Span)">
      <summary>
        <paramref name="span" />이 이 범위와 교차하는지 여부를 확인합니다. 공통되는 위치가 있거나 한 범위의 끝이 다른 범위의 시작과 일치하는 경우 두 범위는 교차하는 것으로 간주됩니다.</summary>
      <returns>
            두 범위가 교차하면 true이고, 그렇지 않으면 false입니다.</returns>
      <param name="span">확인할 범위입니다.</param>
    </member>
    <member name="P:Microsoft.VisualStudio.Text.Span.IsEmpty">
      <summary>이 범위가 비어 있는지 여부를 확인합니다.</summary>
      <returns>
            범위의 길이가 0이면 true이고, 그렇지 않으면 false입니다.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.Text.Span.Length">
      <summary>항상 음수가 아닌 범위의 길이입니다.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.Span.op_Equality(Microsoft.VisualStudio.Text.Span,Microsoft.VisualStudio.Text.Span)">
      <summary>두 범위가 같은지 여부를 확인합니다.</summary>
      <returns>두 개체가 같으면 true이고, 그렇지 않으면 false입니다.</returns>
      <param name="left">왼쪽 범위입니다.</param>
      <param name="right">오른쪽 범위입니다.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.Span.op_Inequality(Microsoft.VisualStudio.Text.Span,Microsoft.VisualStudio.Text.Span)">
      <summary>두 범위가 다른지 여부를 확인합니다.</summary>
      <returns>두 개체가 다르면 true이고, 그렇지 않으면 false입니다.</returns>
      <param name="left">왼쪽 범위입니다.</param>
      <param name="right">오른쪽 범위입니다.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.Span.Overlap(Microsoft.VisualStudio.Text.Span)">
      <summary>지정된 범위와의 중첩 부분을 반환하거나, 중첩 부분이 없을 경우에는 null을 반환합니다.</summary>
      <returns>범위의 중첩 부분이거나, 중첩 부분이 비어 있을 경우에는 null입니다.</returns>
      <param name="span">확인할 범위입니다.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.Span.OverlapsWith(Microsoft.VisualStudio.Text.Span)">
      <summary>
        <paramref name="span" />이 이 범위와 중첩되는지 여부를 확인합니다. 공통되는 위치가 있고 둘 다 비어 있지 않을 경우 두 범위는 중첩되는 것으로 간주됩니다. 빈 범위는 다른 어떤 범위와도 중첩되지 않습니다.</summary>
      <returns>
            두 범위가 중첩되면 true이고, 그렇지 않으면 false입니다.</returns>
      <param name="span">확인할 범위입니다.</param>
    </member>
    <member name="P:Microsoft.VisualStudio.Text.Span.Start">
      <summary>범위의 시작 인덱스입니다.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.Span.ToString">
      <summary>범위의 문자열 표현을 제공합니다.</summary>
      <returns>문자열입니다.</returns>
    </member>
    <member name="T:Microsoft.VisualStudio.Text.SpanTrackingMode">
      <summary>
        <see cref="T:Microsoft.VisualStudio.Text.ITrackingSpan" /> 개체의 추적 모드를 나타냅니다.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Text.SpanTrackingMode.EdgeExclusive">
      <summary>범위의 선행 가장자리가 양의 추적이고(삽입에서 현재 위치를 끝 방향으로 밀어냄), 후행 가장자리는 음의 추적입니다(삽입에서 현재 위치를 시작 방향으로 밀어냄). 범위 경계에서 텍스트 변경이 발생할 때 범위가 확장되지 않습니다. 예를 들어 EdgeExclusive 범위의 시작 위치가 3이고 단일 문자를 3의 위치에 삽입하면 범위의 시작 위치가 4가 되지만 길이는 변경되지 않습니다.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Text.SpanTrackingMode.EdgeInclusive">
      <summary>범위의 선행 가장자리가 음의 추적이고(삽입에서 현재 위치를 시작 방향으로 밀어냄), 후행 가장자리는 양의 추적입니다(삽입에서 현재 위치를 끝 방향으로 밀어냄). 범위 경계에서 텍스트 변경이 발생할 때 범위가 확장됩니다. 예를 들어 EdgeInclusive 범위의 시작 위치가 3이고 단일 문자를 3의 위치에 삽입하면 범위의 시작 위치가 3이 되지만 길이는 1만큼 늘어납니다.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Text.SpanTrackingMode.EdgePositive">
      <summary>범위의 양쪽 가장자리가 양의 추적입니다(삽입에서 현재 위치를 시작 방향으로 밀어냄).</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Text.SpanTrackingMode.EdgeNegative">
      <summary>범위의 양쪽 가장자리가 음의 추적입니다(삽입에서 현재 위치를 끝 방향으로 밀어냄).</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Text.SpanTrackingMode.Custom">
      <summary>사용자 지정 클라이언트 확인 추적 동작입니다.</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.Text.TextBufferCreatedEventArgs">
      <summary>새로 만들어진 <see cref="T:Microsoft.VisualStudio.Text.ITextBuffer" />에 대한 정보를 제공합니다.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.TextBufferCreatedEventArgs.#ctor(Microsoft.VisualStudio.Text.ITextBuffer)">
      <summary>
        <see cref="T:Microsoft.VisualStudio.Text.TextBufferCreatedEventArgs" />의 새 인스턴스를 초기화합니다.</summary>
      <param name="textBuffer">텍스트 버퍼입니다.</param>
    </member>
    <member name="P:Microsoft.VisualStudio.Text.TextBufferCreatedEventArgs.TextBuffer">
      <summary>새로 만들어진 <see cref="T:Microsoft.VisualStudio.Text.ITextBuffer" />입니다.</summary>
      <returns>
        <see cref="T:Microsoft.VisualStudio.Text.ITextBuffer" />입니다.</returns>
    </member>
    <member name="T:Microsoft.VisualStudio.Text.TextContentChangedEventArgs">
      <summary>
        <see cref="T:Microsoft.VisualStudio.Text.ITextBuffer" />의 편집 트랜잭션에 대한 정보를 제공합니다.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.TextContentChangedEventArgs.#ctor(Microsoft.VisualStudio.Text.ITextSnapshot,Microsoft.VisualStudio.Text.ITextSnapshot,Microsoft.VisualStudio.Text.EditOptions,System.Object)">
      <summary>Change 이벤트에 대해 <see cref="T:Microsoft.VisualStudio.Text.TextContentChangedEventArgs" />의 새 인스턴스를 초기화합니다.</summary>
      <param name="beforeSnapshot">변경이 발생하기 전 가장 최근의 <see cref="T:Microsoft.VisualStudio.Text.ITextSnapshot" />입니다.</param>
      <param name="afterSnapshot">변경이 발생한 직후의 <see cref="T:Microsoft.VisualStudio.Text.ITextSnapshot" />입니다.</param>
      <param name="options">이 변경에 적용된 편집 옵션입니다.</param>
      <param name="editTag">이 변경과 관련된 임의의 개체입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="beforeSnapshot" /> or <paramref name="afterSnapshot" /> or <paramref name="options" /> is null.</exception>
    </member>
    <member name="P:Microsoft.VisualStudio.Text.TextContentChangedEventArgs.Changes">
      <summary>발생한 변경 집합을 가져옵니다.</summary>
    </member>
    <member name="P:Microsoft.VisualStudio.Text.TextContentChangedEventArgs.Options">
      <summary>이 변경에 적용된 편집 옵션을 가져옵니다.</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.Text.TextContentChangingEventArgs">
      <summary>
        <see cref="T:Microsoft.VisualStudio.Text.ITextBuffer" />의 예정된 편집 트랜잭션에 대한 정보를 제공합니다.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.TextContentChangingEventArgs.#ctor(Microsoft.VisualStudio.Text.ITextSnapshot,System.Object,System.Action{Microsoft.VisualStudio.Text.TextContentChangingEventArgs})">
      <summary>Changing 이벤트 동안 전달할 <see cref="T:Microsoft.VisualStudio.Text.TextContentChangingEventArgs" />의 새 인스턴스를 초기화합니다.</summary>
      <param name="beforeSnapshot">변경 전 가장 최근의 <see cref="T:Microsoft.VisualStudio.Text.ITextSnapshot" />입니다.</param>
      <param name="editTag">이 변경과 관련된 임의의 개체입니다.</param>
      <param name="cancelAction">
        <see cref="M:Microsoft.VisualStudio.Text.TextContentChangingEventArgs.Cancel" />이 호출될 때 실행할 동작입니다. 한 번만 호출됩니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="beforeSnapshot" /> is null.</exception>
    </member>
    <member name="P:Microsoft.VisualStudio.Text.TextContentChangingEventArgs.Before">
      <summary>변경 전 가장 최근의 <see cref="T:Microsoft.VisualStudio.Text.ITextSnapshot" />입니다.</summary>
    </member>
    <member name="P:Microsoft.VisualStudio.Text.TextContentChangingEventArgs.BeforeVersion">
      <summary>
        <see cref="P:Microsoft.VisualStudio.Text.TextContentChangingEventArgs.Before" />와 연결된 <see cref="T:Microsoft.VisualStudio.Text.ITextVersion" />을 가져옵니다.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.TextContentChangingEventArgs.Cancel">
      <summary>편집 트랜잭션을 취소합니다.</summary>
    </member>
    <member name="P:Microsoft.VisualStudio.Text.TextContentChangingEventArgs.Canceled">
      <summary>편집 트랜잭션이 취소되었는지 여부를 확인합니다.</summary>
    </member>
    <member name="P:Microsoft.VisualStudio.Text.TextContentChangingEventArgs.EditTag">
      <summary>변경 개시자가 제공한 임의의 개체를 가져옵니다.</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.Text.TextDocumentEventArgs">
      <summary>
        <see cref="T:Microsoft.VisualStudio.Text.ITextDocument" />가 만들어졌거나 삭제되었을 때 이벤트에 대한 정보를 제공합니다.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.TextDocumentEventArgs.#ctor(Microsoft.VisualStudio.Text.ITextDocument)">
      <summary>
        <see cref="T:Microsoft.VisualStudio.Text.TextDocumentEventArgs" />의 새 인스턴스를 초기화합니다.</summary>
      <param name="textDocument">만들어졌거나 삭제된 <see cref="T:Microsoft.VisualStudio.Text.ITextDocument" />입니다.</param>
    </member>
    <member name="P:Microsoft.VisualStudio.Text.TextDocumentEventArgs.TextDocument">
      <summary>만들어졌거나 삭제된 <see cref="T:Microsoft.VisualStudio.Text.ITextDocument" />를 가져옵니다.</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.Text.TextDocumentFileActionEventArgs">
      <summary>
        <see cref="T:Microsoft.VisualStudio.Text.ITextDocument" />가 디스크에서 로드되었거나 디스크에 저장된 경우 발생하는 이벤트에 대한 정보를 제공합니다.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.TextDocumentFileActionEventArgs.#ctor(System.String,System.DateTime,Microsoft.VisualStudio.Text.FileActionTypes)">
      <summary>파일 작업 이벤트에 대해 <see cref="T:Microsoft.VisualStudio.Text.TextDocumentFileActionEventArgs" />의 새 인스턴스를 초기화합니다.</summary>
      <param name="filePath">파일에 대한 경로입니다.</param>
      <param name="time">파일 작업이 발생했을 때의 <see cref="T:System.DateTime" />입니다.</param>
      <param name="fileActionType">발생한 <see cref="T:Microsoft.VisualStudio.Text.FileActionTypes" />입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="filePath" /> is null.</exception>
    </member>
    <member name="P:Microsoft.VisualStudio.Text.TextDocumentFileActionEventArgs.FileActionType">
      <summary>발생한 <see cref="P:Microsoft.VisualStudio.Text.TextDocumentFileActionEventArgs.FileActionType" />을 가져옵니다.</summary>
      <returns>파일 작업 형식입니다.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.Text.TextDocumentFileActionEventArgs.FilePath">
      <summary>파일의 경로를 가져옵니다.</summary>
      <returns>파일 경로입니다.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.Text.TextDocumentFileActionEventArgs.Time">
      <summary>파일 작업이 발생했을 때의 <see cref="T:System.DateTime" />을 가져옵니다.</summary>
      <returns>파일 작업의 날짜 및 시간입니다.</returns>
    </member>
    <member name="T:Microsoft.VisualStudio.Text.TextSnapshotChangedEventArgs">
      <summary>새 <see cref="T:Microsoft.VisualStudio.Text.ITextSnapshot" />을 생성하게 하는 <see cref="T:Microsoft.VisualStudio.Text.ITextBuffer" />의 트랜잭션에 대한 정보를 제공합니다.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.TextSnapshotChangedEventArgs.#ctor(Microsoft.VisualStudio.Text.ITextSnapshot,Microsoft.VisualStudio.Text.ITextSnapshot,System.Object)">
      <summary>Change 이벤트에 대해 <see cref="T:Microsoft.VisualStudio.Text.TextSnapshotChangedEventArgs" />의 새 인스턴스를 초기화합니다.</summary>
      <param name="beforeSnapshot">변경이 발생하기 전 가장 최근의 <see cref="T:Microsoft.VisualStudio.Text.ITextSnapshot" />입니다.</param>
      <param name="afterSnapshot">변경이 발생한 직후의 <see cref="T:Microsoft.VisualStudio.Text.ITextSnapshot" />입니다.</param>
      <param name="editTag">이 변경과 관련된 임의의 개체입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="beforeSnapshot" /> or <paramref name="afterSnapshot" /> is null.</exception>
    </member>
    <member name="P:Microsoft.VisualStudio.Text.TextSnapshotChangedEventArgs.After">
      <summary>변경 후 <see cref="T:Microsoft.VisualStudio.Text.ITextBuffer" />의 상태를 가져옵니다.</summary>
    </member>
    <member name="P:Microsoft.VisualStudio.Text.TextSnapshotChangedEventArgs.AfterVersion">
      <summary>
        <see cref="P:Microsoft.VisualStudio.Text.TextSnapshotChangedEventArgs.After" />에 연결된 <see cref="T:Microsoft.VisualStudio.Text.ITextVersion" />을 가져옵니다.</summary>
    </member>
    <member name="P:Microsoft.VisualStudio.Text.TextSnapshotChangedEventArgs.Before">
      <summary>변경이 발생하기 전 <see cref="T:Microsoft.VisualStudio.Text.ITextBuffer" />의 상태를 가져옵니다.</summary>
    </member>
    <member name="P:Microsoft.VisualStudio.Text.TextSnapshotChangedEventArgs.BeforeVersion">
      <summary>
        <see cref="P:Microsoft.VisualStudio.Text.TextSnapshotChangedEventArgs.Before" />와 연결된 <see cref="T:Microsoft.VisualStudio.Text.ITextVersion" />을 가져옵니다.</summary>
    </member>
    <member name="P:Microsoft.VisualStudio.Text.TextSnapshotChangedEventArgs.EditTag">
      <summary>변경 개시자가 제공한 임의의 개체를 가져옵니다.</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.Text.TextSnapshotToTextReader">
      <summary>텍스트 스냅숏에 대한 <see cref="T:System.IO.TextReader" /> 외관을 제공합니다.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.TextSnapshotToTextReader.#ctor(Microsoft.VisualStudio.Text.ITextSnapshot)">
      <summary>지정된 텍스트 스냅숏을 사용하여 <see cref="T:Microsoft.VisualStudio.Text.TextSnapshotToTextReader" />의 새 인스턴스를 초기화합니다.</summary>
      <param name="textSnapshot">판독기로 노출할 <see cref="T:Microsoft.VisualStudio.Text.ITextSnapshot" />입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="textSnapshot" /> is null.</exception>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.TextSnapshotToTextReader.Close">
      <summary>판독기를 닫고 관련된 시스템 리소스를 모두 해제합니다.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.TextSnapshotToTextReader.Peek">
      <summary>문자 소스나 판독기의 상태를 변경하지 않고 다음 문자를 반환합니다.</summary>
      <returns>읽을 다음 문자를 반환이거나, 사용할 수 있는 문자가 더 이상 없거나 스트림에서 검색을 지원하지 않을 경우 -1입니다.</returns>
      <exception cref="T:System.ObjectDisposedException">The reader is closed.</exception>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.TextSnapshotToTextReader.Read">
      <summary>입력 스트림에서 다음 문자를 읽고 문자 위치를 한 문자씩 앞으로 이동합니다.</summary>
      <returns>입력 스트림의 다음 문자를 반환하거나 사용할 수 있는 문자가 더 이상 없으면 -1을 반환합니다.</returns>
      <exception cref="T:System.ObjectDisposedException">The reader is closed.</exception>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.TextSnapshotToTextReader.Read(System.Char[],System.Int32,System.Int32)">
      <summary>현재 스트림에서 지정된 수의 문자를 읽어 이 데이터를 지정된 위치에서 시작되는 버퍼에 씁니다.</summary>
      <returns>읽은 문자 수입니다. 이 문자 수는 스트림 내에서 데이터를 사용할 수 있는지 여부에 따라 <paramref name="count" />보다 작거나 같습니다. 읽을 문자가 더 이상 없는 경우에 이 메서드를 호출하면 0이 반환됩니다.</returns>
      <param name="buffer">이 메서드가 반환되면 현재 소스의 지정된 문자 배열이 포함됩니다.</param>
      <param name="index">쓰기를 시작할 버퍼의 위치입니다.</param>
      <param name="count">읽을 최대 문자 수입니다.</param>
      <exception cref="T:System.ObjectDisposedException">The reader is closed.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> is null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> or <paramref name="count" /> is negative, or the buffer length minus index is less than <paramref name="count" />.</exception>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.TextSnapshotToTextReader.ReadBlock(System.Char[],System.Int32,System.Int32)">
      <summary>현재 스트림에서 최대 <paramref name="count" /> 문자를 읽어 이 데이터를 인덱스에서 시작되는 버퍼에 씁니다.</summary>
      <returns>읽은 문자 수입니다. 이 문자 수는 스트림 내에서 데이터를 사용할 수 있는지 여부에 따라 <paramref name="count" />보다 작거나 같습니다. 읽을 문자가 더 이상 없는 경우에 이 메서드를 호출하면 0이 반환됩니다.</returns>
      <param name="buffer">이 메서드가 반환되면 현재 소스의 지정된 문자 배열이 포함됩니다.</param>
      <param name="index">쓰기를 시작할 버퍼의 위치입니다.</param>
      <param name="count">읽을 최대 문자 수입니다.</param>
      <exception cref="T:System.ObjectDisposedException">The reader is closed.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> is null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> or <paramref name="count" /> is negative, or the buffer length minus index is less than <paramref name="count" />.</exception>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.TextSnapshotToTextReader.ReadLine">
      <summary>현재 스트림에서 한 줄의 문자를 읽고 데이터를 문자열로 반환합니다.</summary>
      <returns>입력 스트림의 다음 줄이거나, 모든 문자를 읽은 경우 null입니다.</returns>
      <exception cref="T:System.ObjectDisposedException">The <see cref="T:System.IO.TextReader" /> is closed.</exception>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.TextSnapshotToTextReader.ReadToEnd">
      <summary>현재 위치에서 판독기 끝까지 문자를 모두 읽어 하나의 문자열로 반환합니다.</summary>
      <returns>현재 위치에서 판독기 끝까지의 모든 문자를 포함하는 문자열입니다.</returns>
      <exception cref="T:System.ObjectDisposedException">The <see cref="T:System.IO.TextReader" /> is closed.</exception>
    </member>
    <member name="T:Microsoft.VisualStudio.Text.TrackingFidelityMode">
      <summary>
        <see cref="T:Microsoft.VisualStudio.Text.ITrackingPoint" /> 및 <see cref="T:Microsoft.VisualStudio.Text.ITrackingSpan" /> 개체에 대한 특수 추적 동작을 나타냅니다.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Text.TrackingFidelityMode.Forward">
      <summary>이전 버전으로 명시적으로 이동하거나 실행 취소 또는 다시 실행 작업을 통해서 이전 버전으로 다시 이동하는 경우 결과가 해당 버전에 대해 원래 주어진 결과와 다를 수 있습니다. 이 모드는 대부분의 용도에 적합하며 가장 공간 효율적인 모드입니다.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Text.TrackingFidelityMode.Backward">
      <summary>이전 버전으로 다시 매핑하는 경우 원래 버전에서 정방향 매핑하는 것과 결과가 같습니다. 이 모드는 수명이 짧은 지점 및 범위에만 사용해야 합니다.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Text.TrackingFidelityMode.UndoRedo">
      <summary>실행 취소 또는 다시 실행 작업의 결과로 얻어지는 버전으로 매핑하는 경우 실행 취소 또는 다시 실행의 반복으로 얻어지는 버전으로 정방향 매핑하는 것과 결과가 같습니다. 이 모드는 <see cref="F:Microsoft.VisualStudio.Text.TrackingFidelityMode.Forward" />보다 공간 및 시간을 더 많이 소모하므로 필요한 경우에만 사용해야 합니다.</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.Text.Differencing.DetermineLocalityCallback">
      <summary>지정된 차이점 형식과 왼쪽/오른쪽 문자열의 집약성을 확인하기 위한 대리자입니다.</summary>
      <returns>원하는 경우 집약성이며, 그렇지 않고 null이면 기본 집약성이 됩니다.</returns>
      <param name="differenceType">집약성을 가져올 차이점 형식입니다. 항상 단일 형식입니다.</param>
      <param name="leftStrings">문자열 목록으로 분해된 왼쪽 텍스트입니다.</param>
      <param name="rightStrings">문자열 목록으로 분해된 오른쪽 텍스트입니다.</param>
    </member>
    <member name="T:Microsoft.VisualStudio.Text.Differencing.Difference">
      <summary>두 요소 목록의 차이점 집합에서 단일 차이점을 나타냅니다.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.Differencing.Difference.#ctor(Microsoft.VisualStudio.Text.Span,Microsoft.VisualStudio.Text.Span,Microsoft.VisualStudio.Text.Differencing.Match,Microsoft.VisualStudio.Text.Differencing.Match)">
      <summary>지정된 왼쪽 및 오른쪽 범위와 이전 및 이후 일치를 사용하여 <see cref="T:Microsoft.VisualStudio.Text.Differencing.Difference" />의 새 인스턴스를 초기화합니다.</summary>
      <param name="left">차이점의 왼쪽 부분입니다(길이가 0일 수 있음).</param>
      <param name="right">차이점의 오른쪽 부분입니다(길이가 0일 수 있음).</param>
      <param name="before">이 차이점 이전에 차이가 없는 요소 범위입니다.</param>
      <param name="after">이 차이점 이후에 차이가 없는 요소 범위입니다.</param>
    </member>
    <member name="P:Microsoft.VisualStudio.Text.Differencing.Difference.After">
      <summary>이 차이점 이후의 일치 사항입니다. 시퀀스의 끝에서는 null입니다.</summary>
      <returns>차이점 이후의 일치 사항입니다.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.Text.Differencing.Difference.Before">
      <summary>이 섹션 이전의 일치 사항입니다. 시퀀스의 시작에서는 null입니다.</summary>
      <returns>차이점 이전의 일치 사항입니다.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.Text.Differencing.Difference.DifferenceType">
      <summary>차이점의 형식(추가, 제거 또는 변경)입니다.</summary>
      <returns>차이점의 형식입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.Differencing.Difference.Equals(System.Object)">
      <summary>두 Difference 개체가 같은지 여부(같은 차이점 형식과 같은 이전 및 이후 일치를 가지고 있는지 여부)를 확인합니다.</summary>
      <returns>두 개체가 같으면 true이고, 그렇지 않으면 false입니다.</returns>
      <param name="obj">두 번째 Difference 개체입니다.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.Differencing.Difference.GetHashCode">
      <summary>이 형식에 대한 해시 코드 역할을 합니다.</summary>
      <returns>해시 코드입니다.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.Text.Differencing.Difference.Left">
      <summary>차이점의 왼쪽 부분입니다(길이가 0일 수 있음).</summary>
      <returns>차이점의 왼쪽 부분입니다.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.Text.Differencing.Difference.Right">
      <summary>차이점의 오른쪽 부분입니다(길이가 0일 수 있음).</summary>
      <returns>차이점의 오른쪽 부분입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.Differencing.Difference.ToString">
      <summary>이 차이점의 문자열 표현입니다.</summary>
      <returns>문자열입니다.</returns>
    </member>
    <member name="T:Microsoft.VisualStudio.Text.Differencing.DifferenceType">
      <summary>차이점의 형식입니다.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Text.Differencing.DifferenceType.Add">
      <summary>줄이 추가되었으므로 해당 텍스트가 오른쪽에 있습니다.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Text.Differencing.DifferenceType.Remove">
      <summary>줄이 제거되었으므로 해당 텍스트가 왼쪽에 있습니다.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Text.Differencing.DifferenceType.Change">
      <summary>줄이 변경되었으므로 해당 텍스트가 양쪽에 있습니다.</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.Text.Differencing.IDifferenceCollection`1">
      <summary>차이점 알고리즘에서 생성된 최대 일치 시퀀스가 지정된 경우 동일한 형식의 요소로 이루어진 두 목록에서 추출된 <see cref="T:Microsoft.VisualStudio.Text.Differencing.Difference" /> 개체의 컬렉션을 나타냅니다.</summary>
      <typeparam name="T">비교되는 목록의 요소 형식입니다.</typeparam>
    </member>
    <member name="P:Microsoft.VisualStudio.Text.Differencing.IDifferenceCollection`1.Differences">
      <summary>차이점 컬렉션을 목록으로 반환합니다.</summary>
    </member>
    <member name="P:Microsoft.VisualStudio.Text.Differencing.IDifferenceCollection`1.LeftSequence">
      <summary>이 차이점 컬렉션을 만드는 데 사용된 왼쪽 시퀀스를 가져옵니다.</summary>
      <returns>왼쪽 시퀀스입니다.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.Text.Differencing.IDifferenceCollection`1.MatchSequence">
      <summary>이 차이점 컬렉션을 만드는 데 사용된 원래 일치 시퀀스를 가져옵니다.</summary>
      <returns>일치 시퀀스입니다.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.Text.Differencing.IDifferenceCollection`1.RightSequence">
      <summary>이 차이점 컬렉션을 만드는 데 사용된 오른쪽 시퀀스를 가져옵니다.</summary>
      <returns>오른쪽 시퀀스입니다.</returns>
    </member>
    <member name="T:Microsoft.VisualStudio.Text.Differencing.IDifferenceService">
      <summary>요소를 추가 또는 제거하는 방식으로(요소를 변환하거나 복사하지는 않음) 두 시퀀스 간의 차이점을 확인합니다.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.Differencing.IDifferenceService.DifferenceSequences``1(System.Collections.Generic.IList{``0},System.Collections.Generic.IList{``0})">
      <summary>두 시퀀스 간의 차이점을 계산합니다.</summary>
      <returns>두 시퀀스 간의 차이점 컬렉션입니다.</returns>
      <param name="left">왼쪽 시퀀스입니다. 대부분의 경우 "이전" 시퀀스입니다.</param>
      <param name="right">오른쪽 시퀀스입니다. 대부분의 경우 "새" 시퀀스입니다.</param>
      <typeparam name="T">시퀀스의 형식입니다.</typeparam>
    </member>
    <member name="T:Microsoft.VisualStudio.Text.Differencing.IHierarchicalDifferenceCollection">
      <summary>왼쪽 및 오른쪽 시퀀스가 <see cref="T:Microsoft.VisualStudio.Text.Differencing.ITokenizedStringList" /> 개체이고 각 차이점 자체에 <see cref="T:Microsoft.VisualStudio.Text.Differencing.IHierarchicalDifferenceCollection" />이 포함되어 있는 차이점 컬렉션을 나타냅니다.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.Differencing.IHierarchicalDifferenceCollection.GetContainedDifferences(System.Int32)">
      <summary>지정된 요소의 포함된 차이점 컬렉션을 가져옵니다(있는 경우).</summary>
      <returns>해당 <see cref="T:Microsoft.VisualStudio.Text.Differencing.Difference" />에 포함된 차이점이 있으면 true이고, 그렇지 않으면 false입니다.</returns>
      <param name="index">포함된 차이점을 계산할 인덱스입니다.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.Differencing.IHierarchicalDifferenceCollection.HasContainedDifferences(System.Int32)">
      <summary>지정된 인덱스에 있는 <see cref="T:Microsoft.VisualStudio.Text.Differencing.Difference" /> 자체에 차이점이 들어 있는지 여부를 확인합니다. 지정된 요소에 대해 포함된 차이점을 강제로 계산합니다.</summary>
      <returns>
            해당 <see cref="T:Microsoft.VisualStudio.Text.Differencing.Difference" />에 포함된 차이점이 있으면 true이고, 그렇지 않으면 false입니다.</returns>
      <param name="index">포함된 차이점을 확인할 인덱스입니다.</param>
    </member>
    <member name="P:Microsoft.VisualStudio.Text.Differencing.IHierarchicalDifferenceCollection.LeftDecomposition">
      <summary>왼쪽으로 토큰화된 원래 목록을 가져옵니다.</summary>
      <returns>
        <see cref="T:Microsoft.VisualStudio.Text.Differencing.ITokenizedStringList" />입니다.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.Text.Differencing.IHierarchicalDifferenceCollection.RightDecomposition">
      <summary>오른쪽으로 토큰화된 원래 목록을 가져옵니다.</summary>
      <returns>
        <see cref="T:Microsoft.VisualStudio.Text.Differencing.ITokenizedStringList" />입니다.</returns>
    </member>
    <member name="T:Microsoft.VisualStudio.Text.Differencing.IHierarchicalStringDifferenceService">
      <summary>이 서비스에는 문자열, 스냅숏 및 범위에 대해 차이점을 계산하는 여러 개의 바로 가기 메서드가 있습니다.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.Differencing.IHierarchicalStringDifferenceService.DiffSnapshotSpans(Microsoft.VisualStudio.Text.SnapshotSpan,Microsoft.VisualStudio.Text.SnapshotSpan,Microsoft.VisualStudio.Text.Differencing.StringDifferenceOptions)">
      <summary>지정된 차이점 옵션을 사용하여 두 스냅숏 간의 차이점을 계산합니다.</summary>
      <returns>차이점의 계층적 컬렉션입니다.</returns>
      <param name="left">왼쪽 스냅숏입니다. 대부분의 경우 "이전" 스냅숏입니다.</param>
      <param name="right">오른쪽 스냅숏입니다. 대부분의 경우 "새" 스냅숏입니다.</param>
      <param name="differenceOptions">사용할 옵션입니다.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.Differencing.IHierarchicalStringDifferenceService.DiffStrings(System.String,System.String,Microsoft.VisualStudio.Text.Differencing.StringDifferenceOptions)">
      <summary>지정된 차이점 옵션을 사용하여 두 문자열 간의 차이점을 계산합니다.</summary>
      <returns>차이점의 계층적 컬렉션입니다.</returns>
      <param name="left">왼쪽 문자열입니다. 대부분의 경우 "이전" 문자열입니다.</param>
      <param name="right">오른쪽 문자열입니다. 대부분의 경우 "새" 문자열입니다.</param>
      <param name="differenceOptions">차이 비교에 사용할 옵션입니다.</param>
    </member>
    <member name="T:Microsoft.VisualStudio.Text.Differencing.ITokenizedStringList">
      <summary>서로 인접해 있으면서 겹치지 않는 세그먼트들로 이루어진 토큰화된 문자열 표현입니다.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.Differencing.ITokenizedStringList.GetElementInOriginal(System.Int32)">
      <summary>요소의 인덱스를 원래 목록의 해당 범위에 매핑합니다.</summary>
      <returns>요소의 범위입니다.</returns>
      <param name="index">요소 목록에서의 요소 인덱스입니다.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">The specified index is either negative or exceeds the list's Count property.</exception>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.Differencing.ITokenizedStringList.GetSpanInOriginal(Microsoft.VisualStudio.Text.Span)">
      <summary>이 목록의 요소 범위를 원래 목록의 범위에 매핑합니다.</summary>
      <returns>원래 목록에 매핑된 범위입니다.</returns>
      <param name="span">요소 목록에서의 요소 범위입니다.</param>
    </member>
    <member name="P:Microsoft.VisualStudio.Text.Differencing.ITokenizedStringList.Original">
      <summary>토큰화된 원래 문자열입니다.</summary>
      <returns>원래 문자열입니다.</returns>
    </member>
    <member name="T:Microsoft.VisualStudio.Text.Differencing.Match">
      <summary>두 시퀀스 간에 일치하는 범위를 동일한 길이의 범위 쌍으로 나타냅니다.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.Differencing.Match.#ctor(Microsoft.VisualStudio.Text.Span,Microsoft.VisualStudio.Text.Span)">
      <summary>같은 길이의 두 범위에서 일치 항목을 만듭니다.</summary>
      <param name="left">왼쪽 시퀀스의 범위입니다.</param>
      <param name="right">오른쪽 시퀀스의 범위입니다.</param>
      <exception cref="T:System.ArgumentNullException">The left span or right span is null.</exception>
      <exception cref="T:System.ArgumentException">The spans are not of equal length.</exception>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.Differencing.Match.Equals(System.Object)">
      <summary>두 Match 개체가 같은 왼쪽 및 오른쪽 범위를 갖는지 여부를 확인합니다.</summary>
      <returns>두 Match 개체가 같으면 true이고, 그렇지 않으면 false입니다.</returns>
      <param name="obj">두 번째 Match 개체입니다.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.Differencing.Match.GetEnumerator">
      <summary>정수 <see cref="T:System.Tuple`2" />로 형식화된 열거자를 가져옵니다.</summary>
      <returns>형식화된 열거자입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.Differencing.Match.GetHashCode">
      <summary>해시 함수를 제공합니다.</summary>
      <returns>해시 함수입니다.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.Text.Differencing.Match.Left">
      <summary>왼쪽 범위를 가져옵니다.</summary>
      <returns>왼쪽 범위입니다.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.Text.Differencing.Match.Length">
      <summary>범위의 길이를 가져옵니다. 양쪽 범위의 길이가 같습니다.</summary>
      <returns>범위의 길이입니다.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.Text.Differencing.Match.Right">
      <summary>오른쪽 범위를 가져옵니다.</summary>
      <returns>오른쪽 범위입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.Differencing.Match.System#Collections#IEnumerable#GetEnumerator">
      <summary>형식화되지 않은 열거자를 가져옵니다.</summary>
      <returns>열거자입니다.</returns>
    </member>
    <member name="T:Microsoft.VisualStudio.Text.Differencing.StringDifferenceOptions">
      <summary>문자열 차이점을 계산하는 데 사용되는 옵션입니다.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.Differencing.StringDifferenceOptions.#ctor(Microsoft.VisualStudio.Text.Differencing.StringDifferenceOptions)">
      <summary>지정된 옵션을 사용하여 <see cref="T:Microsoft.VisualStudio.Text.Differencing.StringDifferenceOptions" />의 새 인스턴스를 초기화합니다.</summary>
      <param name="other">기타 옵션입니다.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.Differencing.StringDifferenceOptions.#ctor(Microsoft.VisualStudio.Text.Differencing.StringDifferenceTypes,System.Int32,System.Boolean)">
      <summary>지정된 옵션을 사용하여 <see cref="T:Microsoft.VisualStudio.Text.Differencing.StringDifferenceOptions" />의 새 인스턴스를 초기화합니다.</summary>
      <param name="differenceType">차이점 형식입니다.</param>
      <param name="locality">집약성입니다.</param>
      <param name="ignoreTrimWhiteSpace">공백을 무시할지 여부입니다.</param>
    </member>
    <member name="P:Microsoft.VisualStudio.Text.Differencing.StringDifferenceOptions.DetermineLocalityCallback">
      <summary>특정 차이 비교 시의 집약도를 재정의하기 위한 선택적 콜백입니다.</summary>
      <returns>
        <see cref="T:Microsoft.VisualStudio.Text.Differencing.DetermineLocalityCallback" />입니다.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.Text.Differencing.StringDifferenceOptions.DifferenceType">
      <summary>수행할 문자열 차이 비교의 형식으로, 줄, 단어 및 문자 차이 비교를 조합한 것입니다.</summary>
      <returns>
        <see cref="T:Microsoft.VisualStudio.Text.Differencing.StringDifferenceTypes" />입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.Differencing.StringDifferenceOptions.Equals(System.Object)">
      <summary>두 StringDifferenceOptions가 같은지 여부를 확인합니다.</summary>
      <returns>두 개체가 같으면 true이고, 그렇지 않으면 false입니다.</returns>
      <param name="obj">비교할 개체입니다.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.Differencing.StringDifferenceOptions.GetHashCode">
      <summary>형식에 대한 해시 함수를 제공합니다.</summary>
      <returns>해시 코드입니다.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.Text.Differencing.StringDifferenceOptions.IgnoreTrimWhiteSpace">
      <summary>공백을 무시하는지 여부를 가져오거나 설정합니다.</summary>
      <returns>공백이 무시되면 true이고, 그렇지 않으면 false입니다.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.Text.Differencing.StringDifferenceOptions.Locality">
      <summary>차이를 비교할 요소(줄, 범위 또는 문자)를 이동할 때 여전히 동일한 소스에 속하는 것으로 간주할 수 있는 최대 거리입니다.  예를 들어, 집약성을 100으로 설정하면 어떤 줄이 이웃한 줄과 100줄 이하로 서로 떨어져 있을 경우 "같은" 줄로 간주됩니다. 100줄을 초과한 거리만큼 떨어져 있으면 "다른" 줄로 간주됩니다.</summary>
      <returns>줄 수로 나타낸 최대 거리입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.Differencing.StringDifferenceOptions.op_Equality(Microsoft.VisualStudio.Text.Differencing.StringDifferenceOptions,Microsoft.VisualStudio.Text.Differencing.StringDifferenceOptions)">
      <summary>두 StringDifferenceOptions가 같은지 여부를 확인합니다.</summary>
      <returns>두 차이점이 같으면 true이고, 그렇지 않으면 false입니다.</returns>
      <param name="left">왼쪽 문자열 차이점입니다.</param>
      <param name="right">오른쪽 문자열 차이점입니다.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.Differencing.StringDifferenceOptions.op_Inequality(Microsoft.VisualStudio.Text.Differencing.StringDifferenceOptions,Microsoft.VisualStudio.Text.Differencing.StringDifferenceOptions)">
      <summary>두 StringDifferenceOptions가 다른지 여부를 확인합니다.</summary>
      <returns>두 차이점이 다르면 true이고, 그렇지 않으면 false입니다.</returns>
      <param name="left">왼쪽 문자열 차이점입니다.</param>
      <param name="right">오른쪽 문자열 차이점입니다.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.Differencing.StringDifferenceOptions.ToString">
      <summary>이들 차이점 옵션의 문자열 표현을 제공합니다.</summary>
      <returns>문자열입니다.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.Text.Differencing.StringDifferenceOptions.WordSplitBehavior">
      <summary>
        <see cref="P:Microsoft.VisualStudio.Text.Differencing.StringDifferenceOptions.DifferenceType" />에서 단어 차이 비교를 요청한 경우 단어를 분할하는 데 사용할 동작입니다.</summary>
      <returns>
        <see cref="T:Microsoft.VisualStudio.Text.Differencing.WordSplitBehavior" />입니다.</returns>
    </member>
    <member name="T:Microsoft.VisualStudio.Text.Differencing.StringDifferenceTypes">
      <summary>
        <see cref="T:Microsoft.VisualStudio.Text.Differencing.IHierarchicalStringDifferenceService" />의 다양한 메서드로 차이점을 계산하는 데 사용되는 열거형 값의 비트 조합입니다.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Text.Differencing.StringDifferenceTypes.Line">
      <summary>줄 차이점을 계산합니다.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Text.Differencing.StringDifferenceTypes.Word">
      <summary>단어 차이점을 계산합니다.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Text.Differencing.StringDifferenceTypes.Character">
      <summary>문자 차이점을 계산합니다.</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.Text.Differencing.WordSplitBehavior">
      <summary>문자열 차이 비교에서 단어를 분할하는 동안 사용할 동작입니다.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Text.Differencing.WordSplitBehavior.Default">
      <summary>
        <see cref="F:Microsoft.VisualStudio.Text.Differencing.WordSplitBehavior.CharacterClass" />에 따라 단어를 분할합니다. </summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Text.Differencing.WordSplitBehavior.CharacterClass">
      <summary>문자 클래스에 따라 단어를 분할합니다.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Text.Differencing.WordSplitBehavior.WhiteSpace">
      <summary>텍스트를 공백만을 기준으로 단어로 분할합니다. 단어 분할 논리에서 사용하는 문자 클래스는 공백 및 제어 문자, 숫자, 문장 부호/기호, 문자입니다.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Text.Differencing.WordSplitBehavior.WhiteSpaceAndPunctuation">
      <summary>텍스트를 공백 및 문장 부호/기호에 따라 단어로 분할합니다.</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.Text.Projection.ElisionBufferOptions">
      <summary>
        <see cref="T:Microsoft.VisualStudio.Text.Projection.IElisionBuffer" />에 적용할 옵션입니다.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Text.Projection.ElisionBufferOptions.None">
      <summary>특별하게 처리되지 않습니다.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Text.Projection.ElisionBufferOptions.FillInMappingMode">
      <summary>범위를 매핑할 때 시작점과 끝점 사이의 숨겨진 텍스트를 포함합니다.</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.Text.Projection.ElisionSourceSpansChangedEventArgs">
      <summary>숨겨진 소스 범위 집합이 변경된 <see cref="T:Microsoft.VisualStudio.Text.Projection.IElisionBuffer" />의 편집 트랜잭션에 대한 데이터를 제공합니다.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.Projection.ElisionSourceSpansChangedEventArgs.#ctor(Microsoft.VisualStudio.Text.Projection.IProjectionSnapshot,Microsoft.VisualStudio.Text.Projection.IProjectionSnapshot,Microsoft.VisualStudio.Text.NormalizedSpanCollection,Microsoft.VisualStudio.Text.NormalizedSpanCollection,System.Object)">
      <summary>
        <see cref="T:Microsoft.VisualStudio.Text.Projection.ElisionSourceSpansChangedEventArgs" /> 개체의 새 인스턴스를 초기화합니다.</summary>
      <param name="beforeSnapshot">변경이 발생하기 전 가장 최근의 <see cref="T:Microsoft.VisualStudio.Text.Projection.IProjectionSnapshot" />입니다.</param>
      <param name="afterSnapshot">변경이 발생한 직후의 <see cref="T:Microsoft.VisualStudio.Text.Projection.IProjectionSnapshot" />입니다.</param>
      <param name="elidedSpans">숨겨진 0개 이상의 소스 범위입니다.</param>
      <param name="expandedSpans">확장된 0개 이상의 소스 범위입니다.</param>
      <param name="sourceToken">이 변경과 관련된 임의의 개체입니다.</param>
      <exception cref="T:System.ArgumentNullException">One of <paramref name="beforeSnapshot" />, <paramref name="afterSnapshot" />, <paramref name="elidedSpans" />, or <paramref name="expandedSpans" /> is null.</exception>
    </member>
    <member name="P:Microsoft.VisualStudio.Text.Projection.ElisionSourceSpansChangedEventArgs.After">
      <summary>변경이 발생한 후 <see cref="T:Microsoft.VisualStudio.Text.Projection.IProjectionBuffer" />의 상태입니다.</summary>
    </member>
    <member name="P:Microsoft.VisualStudio.Text.Projection.ElisionSourceSpansChangedEventArgs.Before">
      <summary>변경이 발생하기 전 <see cref="T:Microsoft.VisualStudio.Text.Projection.IProjectionBuffer" />의 상태입니다.</summary>
    </member>
    <member name="P:Microsoft.VisualStudio.Text.Projection.ElisionSourceSpansChangedEventArgs.ElidedSpans">
      <summary>이 편집 트랜잭션에 의해 <see cref="T:Microsoft.VisualStudio.Text.Projection.IProjectionBuffer" />에 삽입된 소스 범위 집합입니다.</summary>
    </member>
    <member name="P:Microsoft.VisualStudio.Text.Projection.ElisionSourceSpansChangedEventArgs.ExpandedSpans">
      <summary>이 편집 트랜잭션에 의해 <see cref="T:Microsoft.VisualStudio.Text.Projection.IProjectionBuffer" />에서 삭제된 소스 범위 집합입니다.</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.Text.Projection.GraphBufferContentTypeChangedEventArgs">
      <summary>
        <see cref="T:Microsoft.VisualStudio.Text.Projection.IBufferGraph" /> 멤버의 <see cref="T:Microsoft.VisualStudio.Utilities.IContentType" /> 변경에 관한 데이터를 제공합니다.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.Projection.GraphBufferContentTypeChangedEventArgs.#ctor(Microsoft.VisualStudio.Text.ITextBuffer,Microsoft.VisualStudio.Utilities.IContentType,Microsoft.VisualStudio.Utilities.IContentType)">
      <summary>지정된 텍스트 버퍼와 이전 및 새 콘텐츠 형식을 사용하여 <see cref="T:Microsoft.VisualStudio.Text.Projection.GraphBufferContentTypeChangedEventArgs" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="textBuffer">
        <see cref="T:Microsoft.VisualStudio.Utilities.IContentType" />이 변경된 <see cref="T:Microsoft.VisualStudio.Text.ITextBuffer" />입니다.</param>
      <param name="beforeContentType">변경 전의 <see cref="T:Microsoft.VisualStudio.Utilities.IContentType" />입니다.</param>
      <param name="afterContentType">변경 후의 <see cref="T:Microsoft.VisualStudio.Utilities.IContentType" />입니다.</param>
      <exception cref="T:System.ArgumentNullException">One of <paramref name="textBuffer" />, <paramref name="beforeContentType" />, or <paramref name="afterContentType" /> is null.</exception>
    </member>
    <member name="P:Microsoft.VisualStudio.Text.Projection.GraphBufferContentTypeChangedEventArgs.AfterContentType">
      <summary>변경 후의 <see cref="T:Microsoft.VisualStudio.Utilities.IContentType" />입니다.</summary>
    </member>
    <member name="P:Microsoft.VisualStudio.Text.Projection.GraphBufferContentTypeChangedEventArgs.BeforeContentType">
      <summary>변경 전의 <see cref="T:Microsoft.VisualStudio.Utilities.IContentType" />입니다.</summary>
    </member>
    <member name="P:Microsoft.VisualStudio.Text.Projection.GraphBufferContentTypeChangedEventArgs.TextBuffer">
      <summary>
        <see cref="T:Microsoft.VisualStudio.Utilities.IContentType" />이 변경된 <see cref="T:Microsoft.VisualStudio.Text.ITextBuffer" />입니다.</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.Text.Projection.GraphBuffersChangedEventArgs">
      <summary>
        <see cref="T:Microsoft.VisualStudio.Text.ITextBuffer" />가 <see cref="T:Microsoft.VisualStudio.Text.Projection.IBufferGraph" />에서 추가되거나 제거될 때 제공되는 정보입니다.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.Projection.GraphBuffersChangedEventArgs.#ctor(System.Collections.Generic.IList{Microsoft.VisualStudio.Text.ITextBuffer},System.Collections.Generic.IList{Microsoft.VisualStudio.Text.ITextBuffer})">
      <summary>제공된 버퍼를 사용하여 <see cref="T:Microsoft.VisualStudio.Text.Projection.GraphBuffersChangedEventArgs" />의 새 인스턴스를 초기화합니다.</summary>
      <param name="addedBuffers">추가된 버퍼의 목록입니다.</param>
      <param name="removedBuffers">제거된 버퍼의 목록입니다.</param>
      <exception cref="T:System.ArgumentNullException">Either <paramref name="addedBuffers" /> or <paramref name="removedBuffers" /> is null.</exception>
    </member>
    <member name="P:Microsoft.VisualStudio.Text.Projection.GraphBuffersChangedEventArgs.AddedBuffers">
      <summary>
        <see cref="T:Microsoft.VisualStudio.Text.Projection.IBufferGraph" />에 추가된 <see cref="T:Microsoft.VisualStudio.Text.ITextBuffer" /> 개체의 목록입니다.</summary>
    </member>
    <member name="P:Microsoft.VisualStudio.Text.Projection.GraphBuffersChangedEventArgs.RemovedBuffers">
      <summary>
        <see cref="T:Microsoft.VisualStudio.Text.Projection.IBufferGraph" />에서 제거된 <see cref="T:Microsoft.VisualStudio.Text.ITextBuffer" /> 개체의 목록입니다.</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.Text.Projection.IBufferGraph">
      <summary>
        <see cref="T:Microsoft.VisualStudio.Text.ITextBuffer" /> 개체의 그래프를 나타냅니다. 최상위 텍스트 버퍼가 <see cref="T:Microsoft.VisualStudio.Text.Projection.IProjectionBuffer" />일 수도 있고 아닐 수도 있습니다.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.Projection.IBufferGraph.CreateMappingPoint(Microsoft.VisualStudio.Text.SnapshotPoint,Microsoft.VisualStudio.Text.PointTrackingMode)">
      <summary>지정된 스냅숏 지점과 추적 모드를 사용하여 새 <see cref="T:Microsoft.VisualStudio.Text.IMappingPoint" />를 만듭니다.</summary>
      <returns>해당 버퍼 내에서 추적하고 그래프 내에서 매핑할 수 있는 <see cref="T:Microsoft.VisualStudio.Text.IMappingPoint" />입니다.</returns>
      <param name="point">그래프의 버퍼 중 하나에 있는 <see cref="T:Microsoft.VisualStudio.Text.SnapshotPoint" />입니다.</param>
      <param name="trackingMode">지점을 추적하는 방법입니다.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.Projection.IBufferGraph.CreateMappingSpan(Microsoft.VisualStudio.Text.SnapshotSpan,Microsoft.VisualStudio.Text.SpanTrackingMode)">
      <summary>
        <see cref="T:Microsoft.VisualStudio.Text.IMappingSpan" />의 새 인스턴스를 초기화합니다.</summary>
      <returns>해당 버퍼 내에서 추적하고 그래프 내에서 매핑할 수 있는 <see cref="T:Microsoft.VisualStudio.Text.IMappingSpan" />입니다.</returns>
      <param name="span">그래프의 버퍼 중 하나에 있는 <see cref="T:Microsoft.VisualStudio.Text.SnapshotSpan" />입니다.</param>
      <param name="trackingMode">범위를 추적하는 방법입니다.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.Projection.IBufferGraph.GetTextBuffers(System.Predicate{Microsoft.VisualStudio.Text.ITextBuffer})">
      <summary>그래프에서 지정된 조건자와 일치하는 <see cref="T:Microsoft.VisualStudio.Text.ITextBuffer" /> 개체를 모두 찾습니다.</summary>
      <returns>null이 아니지만 비어 있을 수 있는 <see cref="T:Microsoft.VisualStudio.Text.ITextBuffer" /> 개체의 컬렉션입니다.</returns>
      <param name="match">일치 작업에 사용되는 조건자입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="match" /> is null.</exception>
    </member>
    <member name="E:Microsoft.VisualStudio.Text.Projection.IBufferGraph.GraphBufferContentTypeChanged">
      <summary>버퍼 그래프에 있는 <see cref="T:Microsoft.VisualStudio.Text.ITextBuffer" />의 <see cref="T:Microsoft.VisualStudio.Utilities.IContentType" />이 변경될 때 발생합니다.</summary>
    </member>
    <member name="E:Microsoft.VisualStudio.Text.Projection.IBufferGraph.GraphBuffersChanged">
      <summary>버퍼 그래프의 <see cref="T:Microsoft.VisualStudio.Text.ITextBuffer" /> 개체 집합이 변경될 때 발생합니다.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.Projection.IBufferGraph.MapDownToBuffer(Microsoft.VisualStudio.Text.SnapshotPoint,Microsoft.VisualStudio.Text.PointTrackingMode,Microsoft.VisualStudio.Text.ITextBuffer,Microsoft.VisualStudio.Text.PositionAffinity)">
      <summary>그래프의 위치를 그래프의 하위 버퍼에 있는 해당 위치에 매핑합니다. 소스 버퍼는 이 버퍼를 사용하는 프로젝션 버퍼보다 하위에 있는 것으로 간주됩니다.</summary>
      <returns>대상 버퍼의 스냅숏에 있는 지점이거나, 상위 위치가 지정된 선호도의 버퍼에 매핑되지 않는 경우 null입니다.</returns>
      <param name="position">그래프에서 버퍼의 위치입니다.</param>
      <param name="trackingMode">필요한 경우 현재 스냅숏에 대해 <paramref name="position" />을 추적하는 방법입니다.</param>
      <param name="targetBuffer">
        <paramref name="position" />을 매핑할 버퍼입니다.</param>
      <param name="affinity">매핑이 모호한 경우, 즉 위치가 소스 범위 경계에 있을 경우 매핑할 때 최상위 버퍼에서 선행 문자 바로 뒤 또는 후행 문자 바로 앞의 위치를 대상으로 지정할지 여부를 확인합니다. 매핑이 명확한 경우 이 설정은 아무런 영향을 주지 않습니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="position" />.Snapshot or <paramref name="targetBuffer" /> is null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="trackingMode" /> is not a valid <see cref="T:Microsoft.VisualStudio.Text.PointTrackingMode" />, or <paramref name="affinity" /> is not a valid <see cref="T:Microsoft.VisualStudio.Text.PositionAffinity" />.</exception>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.Projection.IBufferGraph.MapDownToBuffer(Microsoft.VisualStudio.Text.SnapshotSpan,Microsoft.VisualStudio.Text.SpanTrackingMode,Microsoft.VisualStudio.Text.ITextBuffer)">
      <summary>그래프에 있는 일부 버퍼의 스냅숏 범위를 그래프에서 하위에 있는 버퍼의 0개 이상의 범위 시퀀스에 매핑합니다. 소스 버퍼는 이 버퍼를 사용하는 프로젝션 버퍼보다 하위에 있는 것으로 간주됩니다.</summary>
      <returns>대상 버퍼에서 범위를 매핑할 0개 이상의 스냅숏 범위 컬렉션입니다.</returns>
      <param name="span">매핑할 범위입니다.</param>
      <param name="trackingMode">필요한 경우 현재 스냅숏에 대해 <paramref name="span" />을 추적하는 방법입니다.</param>
      <param name="targetBuffer">범위를 매핑할 버퍼입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="span" />.Snapshot or <paramref name="targetBuffer" /> is null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="trackingMode" /> is not a valid <see cref="T:Microsoft.VisualStudio.Text.SpanTrackingMode" />.</exception>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.Projection.IBufferGraph.MapDownToFirstMatch(Microsoft.VisualStudio.Text.SnapshotPoint,Microsoft.VisualStudio.Text.PointTrackingMode,System.Predicate{Microsoft.VisualStudio.Text.ITextSnapshot},Microsoft.VisualStudio.Text.PositionAffinity)">
      <summary>그래프의 위치를 그래프의 하위에 있는 일치하는 버퍼의 위치에 매핑합니다. 소스 버퍼는 이 버퍼를 사용하는 프로젝션 버퍼보다 하위에 있는 것으로 간주됩니다.</summary>
      <returns>대상 버퍼의 스냅숏에 있는 지점이거나, 위치가 <paramref name="match" />에서 선택한 버퍼에 매핑되지 않는 경우 null입니다.</returns>
      <param name="position">그래프에서 버퍼의 위치입니다.</param>
      <param name="trackingMode">필요한 경우 현재 스냅숏에 대해 <paramref name="position" />을 추적하는 방법입니다.</param>
      <param name="match">대상 버퍼를 식별하는 조건자입니다.</param>
      <param name="affinity">매핑이 모호한 경우, 즉 위치가 소스 범위 경계에 있을 경우 매핑할 때 최상위 버퍼에서 선행 문자 바로 뒤 또는 후행 문자 바로 앞의 위치를 대상으로 지정할지 여부를 확인합니다. 매핑이 명확한 경우 이 설정은 아무런 영향을 주지 않습니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="position" />.Snapshot or <paramref name="match" /> is null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="trackingMode" /> is not a valid <see cref="T:Microsoft.VisualStudio.Text.PointTrackingMode" />, or <paramref name="affinity" /> is not a valid <see cref="T:Microsoft.VisualStudio.Text.PositionAffinity" />.</exception>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.Projection.IBufferGraph.MapDownToFirstMatch(Microsoft.VisualStudio.Text.SnapshotSpan,Microsoft.VisualStudio.Text.SpanTrackingMode,System.Predicate{Microsoft.VisualStudio.Text.ITextSnapshot})">
      <summary>그래프에 있는 일부 버퍼의 스냅숏 범위를 조건자에서 선택한 일부 소스 스냅숏에 있는 0개 이상의 범위 시퀀스에 매핑합니다.</summary>
      <returns>대상 버퍼에서 topSpan을 매핑할 0개 이상의 스냅숏 범위 컬렉션입니다.</returns>
      <param name="span">매핑할 범위입니다.</param>
      <param name="trackingMode">필요한 경우 현재 스냅숏에 대해 <paramref name="span" />을 추적하는 방법입니다.</param>
      <param name="match">대상 버퍼를 식별하는 조건자입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="span" />.Snapshot or <paramref name="match" /> is null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="trackingMode" /> is not a valid <see cref="T:Microsoft.VisualStudio.Text.SpanTrackingMode" />.</exception>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.Projection.IBufferGraph.MapDownToInsertionPoint(Microsoft.VisualStudio.Text.SnapshotPoint,Microsoft.VisualStudio.Text.PointTrackingMode,System.Predicate{Microsoft.VisualStudio.Text.ITextSnapshot})">
      <summary>그래프에 있는 일부 버퍼의 위치를 그래프에서 하위에 있고 삽입이 라우팅될 일치하는 버퍼의 위치에 매핑합니다. 소스 버퍼는 이 버퍼를 사용하는 프로젝션 버퍼보다 하위에 있는 것으로 간주됩니다.</summary>
      <returns>일부 소스 버퍼의 스냅숏에 있는 위치입니다.</returns>
      <param name="position">그래프에서 버퍼의 위치입니다.</param>
      <param name="trackingMode">필요한 경우 현재 스냅숏에 대해 <paramref name="position" />을 추적하는 방법입니다.</param>
      <param name="match">대상 버퍼를 식별하는 조건자입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="position" />.Snapshot or <paramref name="match" /> is null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="trackingMode" /> is not a valid <see cref="T:Microsoft.VisualStudio.Text.PointTrackingMode" />.</exception>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.Projection.IBufferGraph.MapDownToSnapshot(Microsoft.VisualStudio.Text.SnapshotPoint,Microsoft.VisualStudio.Text.PointTrackingMode,Microsoft.VisualStudio.Text.ITextSnapshot,Microsoft.VisualStudio.Text.PositionAffinity)">
      <summary>그래프의 위치를 그래프의 하위 스냅숏에 있는 해당 위치에 매핑합니다. 소스 버퍼는 이 버퍼를 사용하는 프로젝션 버퍼보다 하위에 있는 것으로 간주됩니다.</summary>
      <returns>대상 버퍼의 스냅숏에 있는 지점이거나, 상위 위치가 지정된 선호도의 버퍼에 매핑되지 않는 경우 null입니다.</returns>
      <param name="position">그래프에서 버퍼의 위치입니다.</param>
      <param name="trackingMode">필요한 경우 현재 스냅숏에 대해 <paramref name="position" />을 추적하는 방법입니다.</param>
      <param name="targetSnapshot">
        <paramref name="position" />을 매핑할 버퍼입니다.</param>
      <param name="affinity">매핑이 모호한 경우, 즉 위치가 소스 범위 경계에 있을 경우 매핑할 때 최상위 버퍼에서 선행 문자 바로 뒤 또는 후행 문자 바로 앞의 위치를 대상으로 지정할지 여부를 확인합니다. 매핑이 명확한 경우 이 설정은 아무런 영향을 주지 않습니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="position" />.Snapshot or <paramref name="targetSnapshot" /> is null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="trackingMode" /> is not a valid <see cref="T:Microsoft.VisualStudio.Text.PointTrackingMode" />, or <paramref name="affinity" /> is not a valid <see cref="T:Microsoft.VisualStudio.Text.PositionAffinity" />.</exception>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.Projection.IBufferGraph.MapDownToSnapshot(Microsoft.VisualStudio.Text.SnapshotSpan,Microsoft.VisualStudio.Text.SpanTrackingMode,Microsoft.VisualStudio.Text.ITextSnapshot)">
      <summary>그래프에 있는 일부 버퍼의 스냅숏 범위를 그래프에서 하위에 있는 버퍼의 0개 이상의 범위 시퀀스에 매핑합니다. 소스 버퍼는 이 버퍼를 사용하는 프로젝션 버퍼보다 하위에 있는 것으로 간주됩니다.</summary>
      <returns>대상 버퍼에서 범위를 매핑할 0개 이상의 스냅숏 범위 컬렉션입니다.</returns>
      <param name="span">매핑할 범위입니다.</param>
      <param name="trackingMode">필요한 경우 현재 스냅숏에 대해 <paramref name="span" />을 추적하는 방법입니다.</param>
      <param name="targetSnapshot">범위를 매핑할 버퍼입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="span" />.Snapshot or <paramref name="targetSnapshot" /> is null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="trackingMode" /> is not a valid <see cref="T:Microsoft.VisualStudio.Text.SpanTrackingMode" />.</exception>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.Projection.IBufferGraph.MapUpToBuffer(Microsoft.VisualStudio.Text.SnapshotPoint,Microsoft.VisualStudio.Text.PointTrackingMode,Microsoft.VisualStudio.Text.PositionAffinity,Microsoft.VisualStudio.Text.ITextBuffer)">
      <summary>버퍼 그래프의 멤버인 일부 버퍼의 현재 스냅숏에 있는 위치를 일부 버퍼의 스냅숏에 매핑합니다.</summary>
      <returns>대상 버퍼의 스냅숏에 있는 해당 위치이거나, 위치가 대상 버퍼에 매핑되지 않는 경우 null입니다.</returns>
      <param name="point">
        <see cref="T:Microsoft.VisualStudio.Text.Projection.IBufferGraph" />의 일부 버퍼에 있는 위치입니다.</param>
      <param name="trackingMode">필요한 경우 현재 스냅숏에 대해 <paramref name="point" />를 추적하는 방법입니다.</param>
      <param name="affinity">매핑이 모호한 경우, 즉 위치가 소스 범위 경계에 있을 경우 매핑할 때 최상위 버퍼에서 선행 문자 바로 뒤 또는 후행 문자 바로 앞의 위치를 대상으로 지정할지 여부를 확인합니다. 매핑이 명확한 경우 이 설정은 아무런 영향을 주지 않습니다.</param>
      <param name="targetBuffer">매핑할 버퍼입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="point" />.Snapshot is null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="trackingMode" /> is not a valid <see cref="T:Microsoft.VisualStudio.Text.PointTrackingMode" />, or <paramref name="affinity" /> is not a valid <see cref="T:Microsoft.VisualStudio.Text.PositionAffinity" />.</exception>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.Projection.IBufferGraph.MapUpToBuffer(Microsoft.VisualStudio.Text.SnapshotSpan,Microsoft.VisualStudio.Text.SpanTrackingMode,Microsoft.VisualStudio.Text.ITextBuffer)">
      <summary>버퍼 그래프의 멤버인 일부 버퍼의 현재 스냅숏에 있는 범위를 지정된 버퍼의 스냅숏에 있는 범위 시퀀스에 매핑합니다.</summary>
      <returns>최상위 버퍼에서 범위를 매핑할 0개 이상의 스냅숏 범위 컬렉션입니다.</returns>
      <param name="span">
        <see cref="T:Microsoft.VisualStudio.Text.Projection.IBufferGraph" />의 일부 버퍼에 있는 범위입니다.</param>
      <param name="trackingMode">필요한 경우 현재 스냅숏에 대해 <paramref name="span" />을 추적하는 방법입니다.</param>
      <param name="targetBuffer">매핑할 버퍼입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="span" />.Snapshot is null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="trackingMode" /> is not a valid <see cref="T:Microsoft.VisualStudio.Text.SpanTrackingMode" />.</exception>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.Projection.IBufferGraph.MapUpToFirstMatch(Microsoft.VisualStudio.Text.SnapshotPoint,Microsoft.VisualStudio.Text.PointTrackingMode,System.Predicate{Microsoft.VisualStudio.Text.ITextSnapshot},Microsoft.VisualStudio.Text.PositionAffinity)">
      <summary>버퍼 그래프의 멤버인 일부 버퍼의 현재 스냅숏에 있는 위치를 조건자에서 선택한 일부 버퍼의 스냅숏에 매핑합니다.</summary>
      <returns>일치하는 버퍼의 스냅숏에 있는 해당 위치이거나, 위치가 일치하는 버퍼에 매핑되지 않는 경우 null입니다.</returns>
      <param name="point">
        <see cref="T:Microsoft.VisualStudio.Text.Projection.IBufferGraph" />의 일부 버퍼에 있는 위치입니다.</param>
      <param name="trackingMode">필요한 경우 현재 스냅숏에 대해 <paramref name="point" />를 추적하는 방법입니다.</param>
      <param name="match">대상 버퍼를 식별하는 조건자입니다.</param>
      <param name="affinity">매핑이 모호한 경우, 즉 위치가 소스 범위 경계에 있을 경우 매핑할 때 최상위 버퍼에서 선행 문자 바로 뒤 또는 후행 문자 바로 앞의 위치를 대상으로 지정할지 여부를 확인합니다. 매핑이 명확한 경우 이 설정은 아무런 영향을 주지 않습니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="point" />.Snapshot or <paramref name="match" /> is null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="trackingMode" /> is not a valid <see cref="T:Microsoft.VisualStudio.Text.PointTrackingMode" />, or <paramref name="affinity" /> is not a valid <see cref="T:Microsoft.VisualStudio.Text.PositionAffinity" />.</exception>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.Projection.IBufferGraph.MapUpToFirstMatch(Microsoft.VisualStudio.Text.SnapshotSpan,Microsoft.VisualStudio.Text.SpanTrackingMode,System.Predicate{Microsoft.VisualStudio.Text.ITextSnapshot})">
      <summary>버퍼 그래프의 멤버인 일부 버퍼의 현재 스냅숏에 있는 범위를 조건자에서 선택한 일부 버퍼의 스냅숏에 있는 범위 시퀀스에 매핑합니다.</summary>
      <returns>최상위 버퍼에서 범위를 매핑할 0개 이상의 스냅숏 범위 컬렉션입니다.</returns>
      <param name="span">IBufferGraph의 일부 버퍼에 있는 범위입니다.</param>
      <param name="trackingMode">필요한 경우 현재 스냅숏에 대해 <paramref name="span" />을 추적하는 방법입니다.</param>
      <param name="match">대상 버퍼를 식별하는 조건자입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="span" />.Snapshot or <paramref name="match" /> is null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="trackingMode" /> is not a valid <see cref="T:Microsoft.VisualStudio.Text.SpanTrackingMode" />.</exception>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.Projection.IBufferGraph.MapUpToSnapshot(Microsoft.VisualStudio.Text.SnapshotPoint,Microsoft.VisualStudio.Text.PointTrackingMode,Microsoft.VisualStudio.Text.PositionAffinity,Microsoft.VisualStudio.Text.ITextSnapshot)">
      <summary>버퍼 그래프의 멤버인 버퍼의 현재 스냅숏에 있는 위치를 지정된 스냅숏에 매핑합니다.</summary>
      <returns>
        <paramref name="targetSnapshot" />의 해당 위치이거나, 위치가 이 그래프를 통해 <paramref name="targetSnapshot" />에 매핑되지 않는 경우 null입니다.</returns>
      <param name="point">
        <see cref="T:Microsoft.VisualStudio.Text.Projection.IBufferGraph" />의 일부 버퍼에 있는 위치입니다.</param>
      <param name="trackingMode">필요한 경우 현재 스냅숏에 대해 <paramref name="point" />를 추적하는 방법입니다.</param>
      <param name="affinity">매핑이 모호한 경우, 즉 위치가 소스 범위 경계에 있을 경우 매핑할 때 최상위 버퍼에서 선행 문자 바로 뒤 또는 후행 문자 바로 앞의 위치를 대상으로 지정할지 여부를 확인합니다. 매핑이 명확한 경우 이 설정은 아무런 영향을 주지 않습니다.</param>
      <param name="targetSnapshot">매핑할 스냅숏입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="point" />.Snapshot is null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="trackingMode" /> is not a valid <see cref="T:Microsoft.VisualStudio.Text.PointTrackingMode" />, or <paramref name="affinity" /> is not a valid <see cref="T:Microsoft.VisualStudio.Text.PositionAffinity" />.</exception>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.Projection.IBufferGraph.MapUpToSnapshot(Microsoft.VisualStudio.Text.SnapshotSpan,Microsoft.VisualStudio.Text.SpanTrackingMode,Microsoft.VisualStudio.Text.ITextSnapshot)">
      <summary>버퍼 그래프의 멤버인 버퍼의 현재 스냅숏에 있는 범위를 지정된 버퍼의 스냅숏에 있는 범위 시퀀스에 매핑합니다.</summary>
      <returns>
        <paramref name="targetSnapshot" />에서 이 그래프를 사용하여 범위를 매핑할 0개 이상의 스냅숏 범위 컬렉션입니다.</returns>
      <param name="span">
        <see cref="T:Microsoft.VisualStudio.Text.Projection.IBufferGraph" />의 일부 버퍼에 있는 범위입니다.</param>
      <param name="trackingMode">필요한 경우 현재 스냅숏에 대해 <paramref name="span" />을 추적하는 방법입니다.</param>
      <param name="targetSnapshot">매핑할 스냅숏입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="span" />.Snapshot is null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="trackingMode" /> is not a valid <see cref="T:Microsoft.VisualStudio.Text.SpanTrackingMode" />.</exception>
    </member>
    <member name="P:Microsoft.VisualStudio.Text.Projection.IBufferGraph.TopBuffer">
      <summary>버퍼 그래프의 최상위 텍스트 버퍼를 가져옵니다.</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.Text.Projection.IBufferGraphFactoryService">
      <summary>프로젝션에서 생성한 <see cref="T:Microsoft.VisualStudio.Text.ITextBuffer" /> 개체 그래프를 기반으로 버퍼 그래프를 만듭니다.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.Projection.IBufferGraphFactoryService.CreateBufferGraph(Microsoft.VisualStudio.Text.ITextBuffer)">
      <summary>지정된 <see cref="T:Microsoft.VisualStudio.Text.ITextBuffer" />에 대한 <see cref="T:Microsoft.VisualStudio.Text.Projection.IBufferGraph" />의 새 인스턴스를 초기화합니다.</summary>
      <returns>
        <see cref="T:Microsoft.VisualStudio.Text.Projection.IBufferGraph" />입니다.</returns>
      <param name="textBuffer">
        <see cref="T:Microsoft.VisualStudio.Text.Projection.IBufferGraph" />를 만들 <see cref="T:Microsoft.VisualStudio.Text.ITextBuffer" />입니다.</param>
    </member>
    <member name="T:Microsoft.VisualStudio.Text.Projection.IElisionBuffer">
      <summary>정확히 하나의 소스 버퍼만 포함하는 제한된 프로젝션 버퍼입니다. 소스 버퍼의 범위는 프로젝션 버퍼와 소스 버퍼에서 같은 순서로 나타나야 합니다.</summary>
    </member>
    <member name="P:Microsoft.VisualStudio.Text.Projection.IElisionBuffer.CurrentSnapshot">
      <summary>이 생략 버퍼의 현재 스냅숏을 가져옵니다.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.Projection.IElisionBuffer.ElideSpans(Microsoft.VisualStudio.Text.NormalizedSpanCollection)">
      <summary>
        <paramref name="spansToElide" />에 지정된 텍스트를 숨깁니다.</summary>
      <returns>새로 생성된 스냅숏입니다.</returns>
      <param name="spansToElide">소스 버퍼의 현재 스냅숏과 관련하여 숨길 텍스트 범위입니다.  지정된 텍스트의 일부가 이미 숨겨진 경우 오류가 아닙니다. 이러한 범위는 EdgeExclusive 추적 범위로 변환됩니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="spansToElide" /> is null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">The end of the final span in <paramref name="spansToElide" /> is greater than <see cref="P:Microsoft.VisualStudio.Text.Projection.IElisionBuffer.SourceBuffer.CurrentSnapshot.Length" />.</exception>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.Projection.IElisionBuffer.ExpandSpans(Microsoft.VisualStudio.Text.NormalizedSpanCollection)">
      <summary>
        <paramref name="spansToExpand" />에 지정된 텍스트를 확장합니다.</summary>
      <returns>
        <see cref="T:Microsoft.VisualStudio.Text.Projection.IProjectionSnapshot" />입니다.</returns>
      <param name="spansToExpand">소스 버퍼의 현재 스냅숏과 관련하여 확장할 텍스트 범위입니다. 지정된 텍스트의 일부가 이미 확장된 경우 오류가 아닙니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="spansToExpand" /> is null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">The end of the final spans in <paramref name="spansToExpand" /> is greater than <see cref="P:Microsoft.VisualStudio.Text.Projection.IElisionBuffer.SourceBuffer.CurrentSnapshot.Length" />.</exception>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.Projection.IElisionBuffer.ModifySpans(Microsoft.VisualStudio.Text.NormalizedSpanCollection,Microsoft.VisualStudio.Text.NormalizedSpanCollection)">
      <summary>단일 트랜잭션에서 <paramref name="spansToElide" />를 숨긴 다음 <paramref name="spansToExpand" />를 확장하여 노출된 텍스트를 수정합니다.</summary>
      <returns>
        <see cref="T:Microsoft.VisualStudio.Text.Projection.IProjectionSnapshot" />입니다.</returns>
      <param name="spansToElide">소스 버퍼의 현재 스냅숏과 관련하여 숨길 텍스트 범위입니다.  지정된 텍스트의 일부가 이미 숨겨진 경우 오류가 아닙니다. 이러한 범위는 EdgeExclusive 추적 범위로 변환됩니다. 이 매개 변수는 null일 수 있습니다.</param>
      <param name="spansToExpand">소스 버퍼의 현재 스냅숏과 관련하여 확장할 텍스트 범위입니다. 지정된 텍스트의 일부가 이미 확장된 경우 오류가 아닙니다. 이 매개 변수는 null일 수 있습니다.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">The end of the final spans in <paramref name="spansToElide" /> or <paramref name="spansToExpand" /> is greater than <see cref="P:Microsoft.VisualStudio.Text.Projection.IElisionBuffer.SourceBuffer.CurrentSnapshot.Length" />.</exception>
    </member>
    <member name="P:Microsoft.VisualStudio.Text.Projection.IElisionBuffer.Options">
      <summary>이 <see cref="T:Microsoft.VisualStudio.Text.Projection.IElisionBuffer" />에 적용되는 <see cref="T:Microsoft.VisualStudio.Text.Projection.ElisionBufferOptions" />를 가져옵니다.</summary>
    </member>
    <member name="P:Microsoft.VisualStudio.Text.Projection.IElisionBuffer.SourceBuffer">
      <summary>이 생략 버퍼의 소스 버퍼를 가져옵니다.</summary>
    </member>
    <member name="E:Microsoft.VisualStudio.Text.Projection.IElisionBuffer.SourceSpansChanged">
      <summary>숨겨진 범위 집합이 변경될 경우 발생합니다.</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.Text.Projection.IElisionSnapshot">
      <summary>
        <see cref="T:Microsoft.VisualStudio.Text.Projection.IElisionBuffer" /> 개체의 스냅숏입니다.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.Projection.IElisionSnapshot.MapFromSourceSnapshotToNearest(Microsoft.VisualStudio.Text.SnapshotPoint)">
      <summary>소스 버퍼의 스냅숏 지점에서 생략 스냅숏의 해당 지점으로 매핑합니다. 소스 버퍼 위치가 생략 스냅숏에 노출되지 않은 경우 노출된 지점 중 가장 근접한 지점을 반환합니다. 아무 것도 노출되지 않은 경우에는 0 위치를 반환합니다.</summary>
      <returns>생략 스냅숏의 위치입니다.</returns>
      <param name="point">소스 버퍼에서 매핑할 스냅숏 지점입니다.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="point" /> does not belong to the source snapshot of this elision snapshot.</exception>
    </member>
    <member name="P:Microsoft.VisualStudio.Text.Projection.IElisionSnapshot.SourceSnapshot">
      <summary>이 생략 스냅숏의 기반이 되는 텍스트 스냅숏을 가져옵니다.</summary>
    </member>
    <member name="P:Microsoft.VisualStudio.Text.Projection.IElisionSnapshot.TextBuffer">
      <summary>스냅숏의 기반이 되는 <see cref="T:Microsoft.VisualStudio.Text.Projection.IElisionBuffer" />를 가져옵니다.</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.Text.Projection.IProjectionBuffer">
      <summary>다른 텍스트 버퍼의 프로젝션을 포함하고 이러한 버퍼의 추적 범위 목록으로 구성된 텍스트 버퍼입니다. 프로젝션 버퍼에 적용되는 버퍼를 소스 버퍼라고 하며 적용된 영역을 설명하는 추적 범위를 소스 범위라고 합니다.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.Projection.IProjectionBuffer.DeleteSpans(System.Int32,System.Int32)">
      <summary>프로젝션 버퍼에서 소스 범위 시퀀스를 삭제합니다.</summary>
      <returns>
        <see cref="T:Microsoft.VisualStudio.Text.Projection.IProjectionSnapshot" />입니다.</returns>
      <param name="position">범위 삭제를 시작할 위치입니다.</param>
      <param name="spansToDelete">삭제할 범위의 수입니다.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="position" /> is less than zero or greater than SpanCount.-or-<paramref name="spansToDelete" /> is less than zero or <paramref name="position" /> + <paramref name="spansToDelete" /> is greater than SpanCount.</exception>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.Projection.IProjectionBuffer.InsertSpan(System.Int32,Microsoft.VisualStudio.Text.ITrackingSpan)">
      <summary>소스 범위 목록에 추적 범위를 삽입합니다.</summary>
      <returns>
        <see cref="T:Microsoft.VisualStudio.Text.Projection.IProjectionSnapshot" />입니다.</returns>
      <param name="position">
        <paramref name="spanToInsert" />를 삽입할 위치입니다.</param>
      <param name="spanToInsert">삽입할 범위입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="spanToInsert" /> is null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="position" /> is less than zero or greater than SpanCount.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="spanToInsert" /> would cause any duplicated projection.-or-<paramref name="spanToInsert" /> is EdgeInclusive and does not cover its entire buffer, or is EdgePositive and does not abut the end of its buffer, or is EdgeNegative and does not abut the beginning of its buffer.  These checks are not performed if the projection buffer was created with the PermissiveEdgeInclusiveSourceSpans option.-or-Adding the TextBuffer containing <paramref name="spanToInsert" /> would create a cycle among a set of projection buffers by virtue of the SourceBuffer relationship.</exception>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.Projection.IProjectionBuffer.InsertSpan(System.Int32,System.String)">
      <summary>SourceSpans 목록에 리터럴 문자열을 삽입합니다.</summary>
      <returns>
        <see cref="T:Microsoft.VisualStudio.Text.Projection.IProjectionSnapshot" />입니다.</returns>
      <param name="position">
        <paramref name="literalSpanToInsert" />를 삽입할 위치입니다.</param>
      <param name="literalSpanToInsert">삽입할 문자열입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="literalSpanToInsert" /> is null. These checks are not performed if the projection buffer was created with the PermissiveEdgeInclusiveSourceSpans option.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="position" /> is less than zero or greater than SpanCount.</exception>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.Projection.IProjectionBuffer.InsertSpans(System.Int32,System.Collections.Generic.IList{System.Object})">
      <summary>
        <see cref="T:Microsoft.VisualStudio.Text.ITrackingSpan" /> 개체 및/또는 리터럴 문자열 목록을 목록에 표시되는 순서대로 소스 범위 목록에 삽입합니다.</summary>
      <returns>
        <see cref="T:Microsoft.VisualStudio.Text.Projection.IProjectionSnapshot" />입니다.</returns>
      <param name="position">범위를 삽입할 위치입니다.</param>
      <param name="spansToInsert">삽입할 범위 목록입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="spansToInsert" /> is null or a span in that list is null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="position" /> is less than zero or greater than SpanCount.</exception>
      <exception cref="T:System.ArgumentException">An element of  is neither an <see cref="T:Microsoft.VisualStudio.Text.ITrackingSpan" /> nor a string.-or-A span in <paramref name="spansToInsert" /> would cause a duplicated projection.-or-A tracking span in <paramref name="spansToInsert" /> is EdgeInclusive and does not cover its entire buffer, or is EdgePositive and does not abut the end of its buffer, or is EdgeNegative and does not abut the beginning of its buffer. These checks are not performed if the projection buffer was created with the PermissiveEdgeInclusiveSourceSpans option.-or-Adding one of the text buffers containing any of the <paramref name="spansToInsert" /> would create a cycle among a set of projection vuffers by virtue of the SourceBuffer relationship.</exception>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.Projection.IProjectionBuffer.ReplaceSpans(System.Int32,System.Int32,System.Collections.Generic.IList{System.Object},Microsoft.VisualStudio.Text.EditOptions,System.Object)">
      <summary>소스 범위 시퀀스를 <see cref="T:Microsoft.VisualStudio.Text.ITrackingSpan" /> 개체 및/또는 리터럴 문자열의 새 목록으로 대체합니다.</summary>
      <returns>
        <see cref="T:Microsoft.VisualStudio.Text.Projection.IProjectionSnapshot" />입니다.</returns>
      <param name="position">범위 대체를 시작할 위치입니다.</param>
      <param name="spansToReplace">대체할 범위 수입니다.</param>
      <param name="spansToInsert">삽입할 새 범위입니다.</param>
      <param name="options">범위 편집에 적용할 옵션입니다.</param>
      <param name="editTag">이 편집 트랜잭션에 연결할 임의의 개체입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="spansToInsert" /> is null or a span in the list are null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="position" /> is less than zero or greater than SpanCount.-or-<paramref name="spansToReplace" /> is less than zero or <paramref name="position" /> + <paramref name="spansToReplace" /> is greater than SpanCount.</exception>
      <exception cref="T:System.ArgumentException">An element of  is neither an <see cref="T:Microsoft.VisualStudio.Text.ITrackingSpan" /> nor a string.-or-A span in <paramref name="spansToInsert" /> would cause a duplicated projection.-or-A tracking span in <paramref name="spansToInsert" /> is EdgeInclusive and does not cover its entire buffer, or is EdgePositive and does not abut the end of its buffer, or is EdgeNegative and does not abut the beginning of its buffer. These checks are not performed if the projection buffer was created with the PermissiveEdgeInclusiveSourceSpans option.</exception>
    </member>
    <member name="E:Microsoft.VisualStudio.Text.Projection.IProjectionBuffer.SourceBuffersChanged">
      <summary>소스 범위 추가 또는 삭제를 통해 소스 버퍼를 추가하거나 삭제하는 경우에 발생합니다. 이 이벤트는 <see cref="E:Microsoft.VisualStudio.Text.Projection.IProjectionBuffer.SourceSpansChanged" /> 이벤트가 발생하기 전에 발생합니다.</summary>
    </member>
    <member name="E:Microsoft.VisualStudio.Text.Projection.IProjectionBuffer.SourceSpansChanged">
      <summary>소스 범위를 추가하거나 삭제하는 경우에 발생합니다. </summary>
    </member>
    <member name="T:Microsoft.VisualStudio.Text.Projection.IProjectionBufferBase">
      <summary>다른 텍스트 버퍼의 프로젝션을 포함하고 이러한 버퍼의 텍스트 범위 목록으로 구성된 텍스트 버퍼입니다. 프로젝션 버퍼에 적용되는 다른 버퍼를 소스 버퍼라고 하며 적용된 영역을 설명하는 텍스트 범위를 소스 범위라고 합니다.</summary>
    </member>
    <member name="P:Microsoft.VisualStudio.Text.Projection.IProjectionBufferBase.CurrentSnapshot">
      <summary>프로젝션 버퍼의 내용에 대한 현재 스냅숏입니다.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.Projection.IProjectionBufferBase.Delete(Microsoft.VisualStudio.Text.Span)">
      <summary>버퍼에서 문자 범위를 삭제합니다.</summary>
      <returns>
        <see cref="T:Microsoft.VisualStudio.Text.Projection.IProjectionSnapshot" />입니다.</returns>
      <param name="deleteSpan">삭제할 문자 범위입니다.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="deleteSpan" />.The end of the span is greater than the length of the buffer.</exception>
      <exception cref="T:System.InvalidOperationException">A TextEdit is currently active.</exception>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.Projection.IProjectionBufferBase.Insert(System.Int32,System.String)">
      <summary>
        <see cref="T:Microsoft.VisualStudio.Text.ITextBuffer" />의 지정된 <paramref name="position" />에 해당 <paramref name="text" />를 삽입합니다.</summary>
      <returns>
        <see cref="T:Microsoft.VisualStudio.Text.Projection.IProjectionSnapshot" />입니다.</returns>
      <param name="position">텍스트의 첫 문자가 표시될 버퍼 위치입니다.</param>
      <param name="text">삽입할 텍스트입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="text" /> is null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="position" /> is less than zero or greater than the length of the buffer.</exception>
      <exception cref="T:System.InvalidOperationException">A TextEdit is currently active.</exception>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.Projection.IProjectionBufferBase.Replace(Microsoft.VisualStudio.Text.Span,System.String)">
      <summary>문자 범위를 다른 텍스트로 대체합니다. 먼저 대체할 텍스트를 삭제한 다음 새 텍스트를 삽입하는 것과 같습니다.</summary>
      <returns>
        <see cref="T:Microsoft.VisualStudio.Text.Projection.IProjectionSnapshot" />입니다.</returns>
      <param name="replaceSpan">대체할 문자 범위입니다.</param>
      <param name="replaceWith">새 텍스트입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="replaceWith" />is null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="replaceSpan" />.The end of the span is greater than the length of the buffer.</exception>
      <exception cref="T:System.InvalidOperationException">A TextEdit is currently active.</exception>
    </member>
    <member name="P:Microsoft.VisualStudio.Text.Projection.IProjectionBufferBase.SourceBuffers">
      <summary>프로젝션 버퍼에 직접 적용되는 <see cref="T:Microsoft.VisualStudio.Text.ITextBuffer" /> 개체의 집합입니다.</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.Text.Projection.IProjectionBufferFactoryService">
      <summary>프로젝션 버퍼를 만드는 데 사용됩니다.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.Projection.IProjectionBufferFactoryService.CreateElisionBuffer(Microsoft.VisualStudio.Text.Projection.IProjectionEditResolver,Microsoft.VisualStudio.Text.NormalizedSnapshotSpanCollection,Microsoft.VisualStudio.Text.Projection.ElisionBufferOptions)">
      <summary>기본 프로젝션 <see cref="T:Microsoft.VisualStudio.Utilities.IContentType" />을 사용하고 단일 소스 버퍼에서 제공된 스냅숏 범위 목록으로 초기화된 생략 버퍼를 만듭니다.</summary>
      <returns>null이 아닌 생략 버퍼입니다.</returns>
      <param name="projectionEditResolver">이 <see cref="T:Microsoft.VisualStudio.Text.Projection.IProjectionBuffer" />의 충돌 해결 프로그램입니다. null일 수 있습니다.</param>
      <param name="exposedSpans">생략 버퍼에서 초기에 노출되는 단일 소스 버퍼의 범위 집합입니다.</param>
      <param name="options">이 버퍼의 옵션입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="exposedSpans" /> is null.</exception>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.Projection.IProjectionBufferFactoryService.CreateElisionBuffer(Microsoft.VisualStudio.Text.Projection.IProjectionEditResolver,Microsoft.VisualStudio.Text.NormalizedSnapshotSpanCollection,Microsoft.VisualStudio.Text.Projection.ElisionBufferOptions,Microsoft.VisualStudio.Utilities.IContentType)">
      <summary>단일 소스 버퍼에서 제공된 스냅숏 범위 목록을 노출하도록 초기화된 생략 버퍼를 만듭니다.</summary>
      <returns>null이 아닌 생략 버퍼입니다.</returns>
      <param name="projectionEditResolver">이 <see cref="T:Microsoft.VisualStudio.Text.Projection.IProjectionBuffer" />의 충돌 해결 프로그램입니다. null일 수 있습니다.</param>
      <param name="exposedSpans">생략 버퍼에서 초기에 노출되는 단일 소스 버퍼의 범위 집합입니다.</param>
      <param name="options">이 버퍼의 옵션입니다.</param>
      <param name="contentType">새 <see cref="T:Microsoft.VisualStudio.Text.Projection.IElisionBuffer" />의 <see cref="T:Microsoft.VisualStudio.Utilities.IContentType" />입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="contentType" /> is null.-or-<paramref name="exposedSpans" /> is null.</exception>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.Projection.IProjectionBufferFactoryService.CreateProjectionBuffer(Microsoft.VisualStudio.Text.Projection.IProjectionEditResolver,System.Collections.Generic.IList{System.Object},Microsoft.VisualStudio.Text.Projection.ProjectionBufferOptions)">
      <summary>기본 프로젝션 <see cref="T:Microsoft.VisualStudio.Utilities.IContentType" /> 및 지정된 소스 범위 목록을 사용하여 <see cref="T:Microsoft.VisualStudio.Text.Projection.IProjectionBuffer" /> 개체를 만듭니다.</summary>
      <returns>null이 아닌 프로젝션 버퍼입니다.</returns>
      <param name="projectionEditResolver">이 <see cref="T:Microsoft.VisualStudio.Text.Projection.IProjectionBuffer" />의 충돌 해결 프로그램입니다. null일 수 있습니다.</param>
      <param name="sourceSpans">
        <see cref="T:Microsoft.VisualStudio.Text.Projection.IProjectionBuffer" />의 초기 소스 범위 집합입니다.</param>
      <param name="options">이 버퍼의 옵션입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="sourceSpans" /> or any of its elements is null.</exception>
      <exception cref="T:System.ArgumentException">An element of <paramref name="sourceSpans" /> is neither a string nor an <see cref="T:Microsoft.VisualStudio.Text.ITrackingSpan" />.-or-A tracking spans in <paramref name="sourceSpans" /> is EdgeInclusive and does not cover its entire buffer, or is EdgePositive and does not abut the end of its buffer, or is EdgeNegative and does not abut the beginning of its buffer.-or-Any of the tracking spans in <paramref name="sourceSpans" /> overlap.</exception>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.Projection.IProjectionBufferFactoryService.CreateProjectionBuffer(Microsoft.VisualStudio.Text.Projection.IProjectionEditResolver,System.Collections.Generic.IList{System.Object},Microsoft.VisualStudio.Text.Projection.ProjectionBufferOptions,Microsoft.VisualStudio.Utilities.IContentType)">
      <summary>지정된 <see cref="T:Microsoft.VisualStudio.Utilities.IContentType" />과 지정된 <see cref="T:Microsoft.VisualStudio.Text.ITrackingSpan" /> 개체 및/또는 리터럴 문자열 목록을 사용하여 <see cref="T:Microsoft.VisualStudio.Text.Projection.IProjectionBuffer" /> 개체를 만듭니다.</summary>
      <returns>null이 아닌 프로젝션 버퍼입니다.</returns>
      <param name="projectionEditResolver">이 <see cref="T:Microsoft.VisualStudio.Text.Projection.IProjectionBuffer" />의 충돌 해결 프로그램입니다. null일 수 있습니다.</param>
      <param name="sourceSpans">
        <see cref="T:Microsoft.VisualStudio.Text.Projection.IProjectionBuffer" />의 초기 소스 범위 집합입니다.</param>
      <param name="options">이 버퍼의 옵션입니다.</param>
      <param name="contentType">새 <see cref="T:Microsoft.VisualStudio.Text.Projection.IProjectionBuffer" />의 <see cref="T:Microsoft.VisualStudio.Utilities.IContentType" />입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="sourceSpans" /> or any of its elements is null.</exception>
      <exception cref="T:System.ArgumentException">An element of <paramref name="sourceSpans" /> is neither a string nor an <see cref="T:Microsoft.VisualStudio.Text.ITrackingSpan" />.-or-A tracking span in <paramref name="sourceSpans" /> is EdgeInclusive and does not cover its entire buffer, or is EdgePositive and does not abut the end of its buffer, or is EdgeNegative and does not abut the beginning of its buffer. These checks are not performed if the projection buffer was created with the PermissiveEdgeInclusiveSourceSpans option.-or-Some of the tracking spans in <paramref name="sourceSpans" /> overlap.</exception>
    </member>
    <member name="E:Microsoft.VisualStudio.Text.Projection.IProjectionBufferFactoryService.ProjectionBufferCreated">
      <summary>
        <see cref="T:Microsoft.VisualStudio.Text.Projection.IProjectionBuffer" /> 또는 <see cref="T:Microsoft.VisualStudio.Text.Projection.IElisionBuffer" />가 만들어질 때 발생합니다.</summary>
    </member>
    <member name="P:Microsoft.VisualStudio.Text.Projection.IProjectionBufferFactoryService.ProjectionContentType">
      <summary>프로젝션 버퍼의 기본 콘텐츠 형식입니다.</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.Text.Projection.IProjectionEditResolver">
      <summary>프로젝션 버퍼의 작성자가 버퍼에 대한 특정 편집 동작을 제어할 수 있도록 합니다.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.Projection.IProjectionEditResolver.FillInInsertionSizes(Microsoft.VisualStudio.Text.SnapshotPoint,System.Collections.ObjectModel.ReadOnlyCollection{Microsoft.VisualStudio.Text.SnapshotPoint},System.String,System.Collections.Generic.IList{System.Int32})">
      <summary>
        <paramref name="projectionInsertionPoint" />에서 프로젝션 버퍼에 텍스트를 삽입할 때 각 소스 삽입 지점에서 소스 버퍼에 삽입할 <paramref name="insertionText" />의 문자 수를 확인합니다. <paramref name="sourceInsertionPoints" />의 길이가 2보다 크면 첫 번째 및 마지막 스냅숏 지점을 제외하고 모두 빈 소스 범위의 경계를 나타냅니다.</summary>
      <param name="projectionInsertionPoint">
        <see cref="T:Microsoft.VisualStudio.Text.Projection.IProjectionBuffer" />의 삽입 지점입니다.</param>
      <param name="sourceInsertionPoints">길이가 2 이상인 소스 버퍼의 삽입 지점 목록입니다.</param>
      <param name="insertionText">삽입 지점 간에 분할할 텍스트입니다.</param>
      <param name="insertionSizes">호출 수신자에 의해 채워지고 해당 소스 삽입 지점에 삽입되는 <paramref name="insertionText" />의 문자 수입니다.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.Projection.IProjectionEditResolver.FillInReplacementSizes(Microsoft.VisualStudio.Text.SnapshotSpan,System.Collections.ObjectModel.ReadOnlyCollection{Microsoft.VisualStudio.Text.SnapshotSpan},System.String,System.Collections.Generic.IList{System.Int32})">
      <summary>
        <paramref name="projectionReplacementSpan" />의 텍스트가 프로젝션 버퍼에서 대체될 때 <paramref name="sourceReplacementSpans" />의 시작점인 각 소스 삽입 지점에서 소스 버퍼에 삽입할 <paramref name="insertionText" />의 문자 수를 확인합니다.</summary>
      <param name="projectionReplacementSpan">
        <see cref="T:Microsoft.VisualStudio.Text.Projection.IProjectionBuffer" />에서 대체할 텍스트의 범위입니다.</param>
      <param name="sourceReplacementSpans">길이가 2 이상인 소스 버퍼에서 대체할 텍스트의 범위입니다.</param>
      <param name="insertionText">대체 범위 간에 분할할 텍스트입니다.</param>
      <param name="insertionSizes">호출 수신자에 의해 채워지고 해당 소스 대체 범위에 삽입되는 <paramref name="insertionText" />의 문자 수입니다.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.Projection.IProjectionEditResolver.GetTypicalInsertionPosition(Microsoft.VisualStudio.Text.SnapshotPoint,System.Collections.ObjectModel.ReadOnlyCollection{Microsoft.VisualStudio.Text.SnapshotPoint})">
      <summary>프로젝션 버퍼의 위치가 소스 버퍼 경계에 있을 경우 일반 삽입을 받을 소스 삽입 지점을 확인합니다.</summary>
      <returns>0에서 <paramref name="sourceInsertionPoints" />.Length - 1 사이의 정수입니다.</returns>
      <param name="projectionInsertionPoint">
        <see cref="T:Microsoft.VisualStudio.Text.Projection.IProjectionBuffer" />의 삽입 지점입니다.</param>
      <param name="sourceInsertionPoints">길이가 2 이상인 소스 버퍼의 삽입 지점 목록입니다.</param>
    </member>
    <member name="T:Microsoft.VisualStudio.Text.Projection.IProjectionSnapshot">
      <summary>
        <see cref="T:Microsoft.VisualStudio.Text.Projection.IProjectionBuffer" />의 상태를 나타내는 변경할 수 없는 텍스트 스냅숏입니다. 이 스냅숏은 다른 텍스트 스냅숏의 프로젝션을 포함하며 해당 버퍼의 추적 범위 목록으로 설명됩니다. 프로젝션 버퍼 또는 이러한 버퍼의 소스 버퍼 중 하나를 수정할 때마다 새 프로젝션 스냅숏이 생성됩니다.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.Projection.IProjectionSnapshot.GetMatchingSnapshot(Microsoft.VisualStudio.Text.ITextBuffer)">
      <summary>이 스냅숏에 해당하는 지정된 텍스트 버퍼의 스냅숏을 가져옵니다.</summary>
      <returns>텍스트 버퍼의 스냅숏입니다. <paramref name="textBuffer" />가 이 프로젝션 버퍼의 텍스트 버퍼가 아닐 경우 null을 반환합니다.</returns>
      <param name="textBuffer">텍스트 버퍼입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="textBuffer" /> is null.</exception>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.Projection.IProjectionSnapshot.GetSourceSpans">
      <summary>프로젝션 스냅숏의 모든 소스 범위를 가져옵니다.</summary>
      <returns>프로젝션 스냅숏의 읽기 전용 소스 범위 컬렉션으로, 프로젝션 스냅숏에 포함된 순서대로 나열됩니다. 컬렉션은 비어 있을 수 있습니다.</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.Projection.IProjectionSnapshot.GetSourceSpans(System.Int32,System.Int32)">
      <summary>지정된 범위 인덱스에서 시작하는 읽기 전용 소스 스냅숏 범위 컬렉션을 가져옵니다. <paramref name="startSpanIndex" />는 텍스트 버퍼에 있는 문자 인덱스가 아닌 소스 범위 컬렉션의 인덱스입니다.</summary>
      <returns>프로젝션 스냅숏 소스로 구성된 읽기 전용 <see cref="T:Microsoft.VisualStudio.Text.SnapshotSpan" /> 개체 컬렉션입니다.</returns>
      <param name="startSpanIndex">스냅숏 범위를 가져오기 시작할 위치입니다.</param>
      <param name="count">가져올 범위 수입니다.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="startSpanIndex" /> is less than zero or greater than SpanCount.-or-<paramref name="count" /> is less than zero or <paramref name="count" /> plus <paramref name="startSpanIndex" /> is greater than SpanCount.</exception>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.Projection.IProjectionSnapshot.MapFromSourceSnapshot(Microsoft.VisualStudio.Text.SnapshotPoint,Microsoft.VisualStudio.Text.PositionAffinity)">
      <summary>소스 스냅숏 중 하나의 스냅숏 지점에서 프로젝션 스냅숏의 해당 위치로 매핑합니다.</summary>
      <returns>프로젝션 스냅숏의 위치이거나, 소스 지점이 프로젝션 스냅숏의 멤버인 범위에 속하는 텍스트에 해당하지 않는 경우 null입니다.</returns>
      <param name="point">소스 버퍼의 스냅숏 지점입니다.</param>
      <param name="affinity">매핑이 모호한 경우, 즉 위치가 두 소스 범위 사이에 있을 경우 이 매개 변수는 다음과 같이 매핑에 영향을 줍니다. <paramref name="affinity" />가 <see cref="F:Microsoft.VisualStudio.Text.PositionAffinity.Predecessor" />이면 매핑할 때 프로젝션 버퍼의 선행 문자 바로 뒤가 대상 위치가 됩니다. <paramref name="affinity" />가 <see cref="F:Microsoft.VisualStudio.Text.PositionAffinity.Successor" />이면 매핑할 때 프로젝션 버퍼의 후행 문자 바로 앞이 대상 위치가 됩니다. 매핑이 명확한 경우 이 매개 변수는 아무런 영향을 주지 않습니다.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="point" /> does not belong to a source snapshot of this projection snapshot.</exception>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.Projection.IProjectionSnapshot.MapFromSourceSnapshot(Microsoft.VisualStudio.Text.SnapshotSpan)">
      <summary>소스 버퍼의 스냅숏 범위를 프로젝션 스냅숏의 범위 목록에 매핑합니다. 결과로 나오는 순서 있는 목록은 비어 있거나, 단일 요소를 포함하거나, 여러 요소를 포함할 수 있습니다.</summary>
      <returns>null이 아닌 범위 목록입니다. <paramref name="span" />의 위치가 프로젝션 스냅숏의 소스 범위에서 하나도 투영되지 않으면 목록이 비어 있게 됩니다.</returns>
      <param name="span">소스 버퍼에서 매핑할 스냅숏 범위입니다.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="span" /> does not belong to a source buffer of this projection buffer.</exception>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.Projection.IProjectionSnapshot.MapToSourceSnapshot(System.Int32)">
      <summary>프로젝션 스냅숏의 위치를 소스 스냅숏의 해당 위치에 매핑합니다. 매핑이 모호한 경우, 즉 위치가 소스 범위 경계에 있을 경우 <see cref="M:Microsoft.VisualStudio.Text.Projection.IProjectionEditResolver.GetTypicalInsertionPosition(Microsoft.VisualStudio.Text.SnapshotPoint,System.Collections.ObjectModel.ReadOnlyCollection{Microsoft.VisualStudio.Text.SnapshotPoint})" />를 확인하고 소스 버퍼를 선택합니다.</summary>
      <returns>
        <see cref="T:Microsoft.VisualStudio.Text.SnapshotPoint" />입니다.</returns>
      <param name="position">프로젝션 스냅숏의 위치입니다.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="position" /> is less than zero or greater than or equal to the length of the snapshot.</exception>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.Projection.IProjectionSnapshot.MapToSourceSnapshot(System.Int32,Microsoft.VisualStudio.Text.PositionAffinity)">
      <summary>프로젝션 스냅숏의 위치를 소스 스냅숏의 해당 위치에 매핑합니다.</summary>
      <returns>소스 스냅숏 중 하나에 있는 스냅숏 지점입니다.</returns>
      <param name="position">프로젝션 스냅숏의 위치입니다.</param>
      <param name="affinity">매핑이 모호한 경우, 즉 위치가 소스 범위 경계에 있을 경우 이 매개 변수는 다음과 같이 매핑에 영향을 줍니다. <paramref name="affinity" />가 <see cref="F:Microsoft.VisualStudio.Text.PositionAffinity.Predecessor" />이면 매핑할 때 프로젝션 버퍼의 선행 문자 바로 뒤가 대상 위치가 됩니다. <paramref name="affinity" />가 <see cref="F:Microsoft.VisualStudio.Text.PositionAffinity.Successor" />이면 매핑할 때 프로젝션 버퍼의 후행 문자 바로 앞이 대상 위치가 됩니다. 매핑이 명확한 경우 이 매개 변수는 아무런 영향을 주지 않습니다.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="position" /> is less than zero or greater than or equal to the length of the snapshot.</exception>
      <exception cref="T:System.InvalidOperationException">The projection snapshot has no source spans.</exception>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.Projection.IProjectionSnapshot.MapToSourceSnapshots(Microsoft.VisualStudio.Text.Span)">
      <summary>현재 프로젝션 스냅숏의 범위를 소스 스냅숏에 속하는 스냅숏 범위 목록에 매핑합니다. 결과로 얻는 범위는 해당 범위가 프로젝션에 표시되는 순서에 따라 순서가 지정됩니다.</summary>
      <returns>비어 있지 않은 스냅숏 범위의 목록입니다.</returns>
      <param name="span">프로젝션 스냅숏의 범위입니다.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="span" /> is not valid for this buffer.</exception>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.Projection.IProjectionSnapshot.MapToSourceSnapshots(System.Int32)">
      <summary>프로젝션 스냅숏의 위치를 하나 이상의 소스 스냅숏의 해당 위치에 매핑합니다.</summary>
      <returns>위치를 매핑할 읽기 전용 스냅숏 지점 컬렉션입니다. 이 컬렉션은 위치가 소스 범위 경계가 있어 두 개 이상의 지점을 포함할 수 있는 경우를 제외하고 하나의 스냅숏 지점을 포함합니다.</returns>
      <param name="position">프로젝션 스냅숏의 위치입니다.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="position" /> is less than zero or greater than or equal to the length of the snapshot.</exception>
    </member>
    <member name="P:Microsoft.VisualStudio.Text.Projection.IProjectionSnapshot.SourceSnapshots">
      <summary>소스 범위가 이 프로젝션 스냅숏에 적용되는 하나 이상의 텍스트 스냅숏 집합을 가져옵니다. </summary>
    </member>
    <member name="P:Microsoft.VisualStudio.Text.Projection.IProjectionSnapshot.SpanCount">
      <summary>프로젝션 스냅숏의 소스 범위 수를 가져옵니다.</summary>
    </member>
    <member name="P:Microsoft.VisualStudio.Text.Projection.IProjectionSnapshot.TextBuffer">
      <summary>스냅숏의 기반이 되는 <see cref="T:Microsoft.VisualStudio.Text.Projection.IProjectionBufferBase" />를 가져옵니다.</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.Text.Projection.ProjectionBufferOptions">
      <summary>
        <see cref="T:Microsoft.VisualStudio.Text.Projection.IProjectionBuffer" /> 개체에 적용할 옵션을 나타냅니다.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Text.Projection.ProjectionBufferOptions.None">
      <summary>특별하게 처리되지 않습니다.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Text.Projection.ProjectionBufferOptions.PermissiveEdgeInclusiveSourceSpans">
      <summary>가장자리를 포함하는 소스 범위에 대해 특정한 일관성 검사를 수행하지 않습니다.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Text.Projection.ProjectionBufferOptions.WritableLiteralSpans">
      <summary>문자열 리터럴로 구성된 소스 범위를 편집할 수 있도록 허용합니다.</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.Text.Projection.ProjectionSourceBuffersChangedEventArgs">
      <summary>소스 <see cref="T:Microsoft.VisualStudio.Text.ITextBuffer" /> 개체 집합이 변경된 <see cref="T:Microsoft.VisualStudio.Text.Projection.IProjectionBuffer" />의 편집 트랜잭션에 대한 정보를 제공합니다.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.Projection.ProjectionSourceBuffersChangedEventArgs.#ctor(Microsoft.VisualStudio.Text.Projection.IProjectionSnapshot,Microsoft.VisualStudio.Text.Projection.IProjectionSnapshot,System.Collections.Generic.IList{Microsoft.VisualStudio.Text.ITrackingSpan},System.Collections.Generic.IList{Microsoft.VisualStudio.Text.ITrackingSpan},System.Int32,System.Collections.Generic.IList{Microsoft.VisualStudio.Text.ITextBuffer},System.Collections.Generic.IList{Microsoft.VisualStudio.Text.ITextBuffer},Microsoft.VisualStudio.Text.EditOptions,System.Object)">
      <summary>
        <see cref="T:Microsoft.VisualStudio.Text.Projection.ProjectionSourceBuffersChangedEventArgs" /> 개체의 새 인스턴스를 초기화합니다.</summary>
      <param name="beforeSnapshot">변경이 발생하기 전 가장 최근의 <see cref="T:Microsoft.VisualStudio.Text.Projection.IProjectionSnapshot" />입니다.</param>
      <param name="afterSnapshot">변경이 발생한 직후의 <see cref="T:Microsoft.VisualStudio.Text.Projection.IProjectionSnapshot" />입니다.</param>
      <param name="insertedSpans">
        <see cref="T:Microsoft.VisualStudio.Text.Projection.IProjectionBuffer" />에 삽입된 0개 이상의 소스 범위입니다.</param>
      <param name="deletedSpans">
        <see cref="T:Microsoft.VisualStudio.Text.Projection.IProjectionBuffer" />에서 삭제된 0개 이상의 소스 범위입니다.</param>
      <param name="spanPosition">소스 범위 목록에서 버퍼 변경이 발생한 위치입니다.</param>
      <param name="addedBuffers">추가된 소스 <see cref="T:Microsoft.VisualStudio.Text.ITextBuffer" /> 개체의 목록입니다.</param>
      <param name="removedBuffers">제거된 소스 <see cref="T:Microsoft.VisualStudio.Text.ITextBuffer" /> 개체의 목록입니다.</param>
      <param name="options">이 변경에 적용된 편집 옵션입니다.</param>
      <param name="editTag">이 변경과 관련된 임의의 개체입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="insertedSpans" /> is null.-or-<paramref name="deletedSpans" /> is null.-or-<paramref name="addedBuffers" /> or <paramref name="removedBuffers" /> is null.</exception>
    </member>
    <member name="P:Microsoft.VisualStudio.Text.Projection.ProjectionSourceBuffersChangedEventArgs.AddedBuffers">
      <summary>프로젝션 버퍼에 추가된 소스 버퍼입니다.</summary>
    </member>
    <member name="P:Microsoft.VisualStudio.Text.Projection.ProjectionSourceBuffersChangedEventArgs.RemovedBuffers">
      <summary>제거되어 범위가 더 이상 프로젝션 버퍼에 적용되지 않는 소스 버퍼입니다.</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.Text.Projection.ProjectionSourceSpansChangedEventArgs">
      <summary>소스 <see cref="T:Microsoft.VisualStudio.Text.ITrackingSpan" /> 개체 집합이 변경된 <see cref="T:Microsoft.VisualStudio.Text.Projection.IProjectionBuffer" />의 편집 트랜잭션에 대한 정보를 제공합니다.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.Projection.ProjectionSourceSpansChangedEventArgs.#ctor(Microsoft.VisualStudio.Text.Projection.IProjectionSnapshot,Microsoft.VisualStudio.Text.Projection.IProjectionSnapshot,System.Collections.Generic.IList{Microsoft.VisualStudio.Text.ITrackingSpan},System.Collections.Generic.IList{Microsoft.VisualStudio.Text.ITrackingSpan},System.Int32,Microsoft.VisualStudio.Text.EditOptions,System.Object)">
      <summary>
        <see cref="T:Microsoft.VisualStudio.Text.Projection.ProjectionSourceSpansChangedEventArgs" />의 새 인스턴스를 초기화합니다.</summary>
      <param name="beforeSnapshot">변경이 발생하기 전 가장 최근의 <see cref="T:Microsoft.VisualStudio.Text.Projection.IProjectionSnapshot" />입니다.</param>
      <param name="afterSnapshot">변경이 발생한 직후의 <see cref="T:Microsoft.VisualStudio.Text.Projection.IProjectionSnapshot" />입니다.</param>
      <param name="insertedSpans">
        <see cref="T:Microsoft.VisualStudio.Text.Projection.IProjectionBuffer" />에 삽입된 0개 이상의 소스 범위입니다.</param>
      <param name="deletedSpans">
        <see cref="T:Microsoft.VisualStudio.Text.Projection.IProjectionBuffer" />에서 삭제된 0개 이상의 소스 범위입니다.</param>
      <param name="spanPosition">범위 변경이 발생한 위치입니다.</param>
      <param name="options">이 변경에 적용된 편집 옵션입니다.</param>
      <param name="editTag">이 변경과 관련된 임의의 개체입니다.</param>
      <exception cref="T:System.ArgumentNullException">One of the parameters: <paramref name="beforeSnapshot" />, <paramref name="afterSnapshot" />, <paramref name="insertedSpans" />, or <paramref name="deletedSpans" />is null.</exception>
    </member>
    <member name="P:Microsoft.VisualStudio.Text.Projection.ProjectionSourceSpansChangedEventArgs.After">
      <summary>변경이 발생한 후 <see cref="T:Microsoft.VisualStudio.Text.Projection.IProjectionBuffer" />의 상태입니다.</summary>
    </member>
    <member name="P:Microsoft.VisualStudio.Text.Projection.ProjectionSourceSpansChangedEventArgs.Before">
      <summary>변경이 발생하기 전 <see cref="T:Microsoft.VisualStudio.Text.Projection.IProjectionBuffer" />의 상태입니다.</summary>
    </member>
    <member name="P:Microsoft.VisualStudio.Text.Projection.ProjectionSourceSpansChangedEventArgs.DeletedSpans">
      <summary>이 편집 트랜잭션에 의해 <see cref="T:Microsoft.VisualStudio.Text.Projection.IProjectionBuffer" />에서 삭제된 소스 범위 집합입니다.</summary>
    </member>
    <member name="P:Microsoft.VisualStudio.Text.Projection.ProjectionSourceSpansChangedEventArgs.InsertedSpans">
      <summary>이 편집 트랜잭션에 의해 <see cref="T:Microsoft.VisualStudio.Text.Projection.IProjectionBuffer" />에 삽입된 소스 범위 집합입니다.</summary>
    </member>
    <member name="P:Microsoft.VisualStudio.Text.Projection.ProjectionSourceSpansChangedEventArgs.SpanPosition">
      <summary>소스 범위 목록에서 변경이 발생한 위치입니다.</summary>
    </member>
  </members>
</doc>