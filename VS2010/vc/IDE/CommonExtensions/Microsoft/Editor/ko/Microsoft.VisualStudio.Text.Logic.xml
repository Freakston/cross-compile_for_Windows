<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>Microsoft.VisualStudio.Text.Logic</name>
  </assembly>
  <members>
    <member name="T:Microsoft.VisualStudio.Text.ITextDataModel">
      <summary>편집기에 표시할 <see cref="T:Microsoft.VisualStudio.Text.ITextBuffer" />를 준비합니다. 일반적으로 <see cref="T:Microsoft.VisualStudio.Text.ITextDataModel" />은 <see cref="P:Microsoft.VisualStudio.Text.ITextDataModel.DocumentBuffer" /> 및 <see cref="P:Microsoft.VisualStudio.Text.ITextDataModel.DataBuffer" /> 둘 모두로 노출되는 단일 <see cref="T:Microsoft.VisualStudio.Text.ITextBuffer" />로 구성됩니다. 그러나 <see cref="T:Microsoft.VisualStudio.Text.Projection.IProjectionBuffer" />의 그래프가 단일 문서인 것처럼 표시되는 것이 유용한 경우도 있습니다. 이 경우 <see cref="P:Microsoft.VisualStudio.Text.ITextDataModel.DataBuffer" />는 <see cref="P:Microsoft.VisualStudio.Text.ITextDataModel.DocumentBuffer" />를 직접 또는 간접적으로 소스 버퍼로 사용하는 <see cref="T:Microsoft.VisualStudio.Text.Projection.IProjectionBuffer" />가 됩니다.</summary>
    </member>
    <member name="P:Microsoft.VisualStudio.Text.ITextDataModel.ContentType">
      <summary>텍스트 데이터 모델의 <see cref="T:Microsoft.VisualStudio.Utilities.IContentType" />입니다. 일반적으로 <see cref="P:Microsoft.VisualStudio.Text.ITextDataModel.DocumentBuffer" />의 <see cref="T:Microsoft.VisualStudio.Utilities.IContentType" />과 같지만 반드시 같을 필요는 없습니다.</summary>
    </member>
    <member name="E:Microsoft.VisualStudio.Text.ITextDataModel.ContentTypeChanged">
      <summary>이 텍스트 데이터 모델의 <see cref="P:Microsoft.VisualStudio.Text.ITextDataModel.ContentType" />이 변경되면 발생합니다.</summary>
    </member>
    <member name="P:Microsoft.VisualStudio.Text.ITextDataModel.DataBuffer">
      <summary>편집기에 표시되는 <see cref="T:Microsoft.VisualStudio.Text.ITextBuffer" />를 가져옵니다.</summary>
    </member>
    <member name="P:Microsoft.VisualStudio.Text.ITextDataModel.DocumentBuffer">
      <summary>파일 시스템의 문서에 해당하는 <see cref="T:Microsoft.VisualStudio.Text.ITextBuffer" />를 가져옵니다.</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.Text.TextDataModelContentTypeChangedEventArgs">
      <summary>
        <see cref="T:Microsoft.VisualStudio.Text.ITextDataModel" />의 <see cref="T:Microsoft.VisualStudio.Utilities.IContentType" />에 대한 변경 내용 관련 정보를 제공합니다.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.TextDataModelContentTypeChangedEventArgs.#ctor(Microsoft.VisualStudio.Utilities.IContentType,Microsoft.VisualStudio.Utilities.IContentType)">
      <summary>
        <see cref="T:Microsoft.VisualStudio.Text.TextDataModelContentTypeChangedEventArgs" />의 새 인스턴스를 초기화합니다.</summary>
      <param name="beforeContentType">변경 전 <see cref="T:Microsoft.VisualStudio.Text.ITextDataModel" />의 <see cref="T:Microsoft.VisualStudio.Utilities.IContentType" />입니다.</param>
      <param name="afterContentType">변경 후 <see cref="T:Microsoft.VisualStudio.Text.ITextDataModel" />의 <see cref="T:Microsoft.VisualStudio.Utilities.IContentType" />입니다.</param>
    </member>
    <member name="P:Microsoft.VisualStudio.Text.TextDataModelContentTypeChangedEventArgs.AfterContentType">
      <summary>변경 후 <see cref="T:Microsoft.VisualStudio.Text.ITextDataModel" />의 <see cref="T:Microsoft.VisualStudio.Utilities.IContentType" />입니다.</summary>
    </member>
    <member name="P:Microsoft.VisualStudio.Text.TextDataModelContentTypeChangedEventArgs.BeforeContentType">
      <summary>변경 전 <see cref="T:Microsoft.VisualStudio.Text.ITextDataModel" />의 <see cref="T:Microsoft.VisualStudio.Utilities.IContentType" />입니다.</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.Text.VirtualSnapshotPoint">
      <summary>가상 공간을 포함할 수 있는 <see cref="T:Microsoft.VisualStudio.Text.SnapshotPoint" />를 나타냅니다.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.VirtualSnapshotPoint.#ctor(Microsoft.VisualStudio.Text.ITextSnapshot,System.Int32)">
      <summary>가상 공간 없이 <paramref name="snapshot" />의 <paramref name="position" />에서 <see cref="T:Microsoft.VisualStudio.Text.VirtualSnapshotPoint" />의 새 인스턴스를 초기화합니다.</summary>
      <param name="snapshot">사용할 스냅숏입니다.</param>
      <param name="position">스냅숏 지점의 위치입니다.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.VirtualSnapshotPoint.#ctor(Microsoft.VisualStudio.Text.ITextSnapshotLine,System.Int32)">
      <summary>필요한 경우 가상 공간에 지점을 배치하여 <paramref name="line" />의 <paramref name="column" />에서 <see cref="T:Microsoft.VisualStudio.Text.VirtualSnapshotPoint" />의 새 인스턴스를 초기화합니다.</summary>
      <param name="line">지점을 배치할 줄입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="line" /> is null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="column" /> is negative, or the start position plus the column is less than the start position.</exception>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.VirtualSnapshotPoint.#ctor(Microsoft.VisualStudio.Text.SnapshotPoint)">
      <summary>가상 공간 없이 <paramref name="position" />에서 <see cref="T:Microsoft.VisualStudio.Text.VirtualSnapshotPoint" />의 새 인스턴스를 초기화합니다.</summary>
      <param name="position">스냅숏에서 지점의 위치입니다.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.VirtualSnapshotPoint.#ctor(Microsoft.VisualStudio.Text.SnapshotPoint,System.Int32)">
      <summary>지정된 수의 가상 공간을 사용하여 <paramref name="position" />에서 <see cref="T:Microsoft.VisualStudio.Text.VirtualSnapshotPoint" />의 새 인스턴스를 초기화합니다.</summary>
      <param name="position">가상 스냅숏 지점의 위치입니다.</param>
      <param name="virtualSpaces">
        <paramref name="position" /> 뒤의 가상 공간 수입니다.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="virtualSpaces" /> is not zero and the position does not correspond to the end of the line.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="virtualSpaces" /> is negative, or the position plus the number of virtual spaces is less than the position.</exception>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.VirtualSnapshotPoint.CompareTo(Microsoft.VisualStudio.Text.VirtualSnapshotPoint)">
      <summary>한 <see cref="T:Microsoft.VisualStudio.Text.VirtualSnapshotPoint" />를 다른 지점과 비교합니다.</summary>
      <returns>두 지점의 가상 공간 수와 위치를 비교합니다.</returns>
      <param name="other">두 번째 <see cref="T:Microsoft.VisualStudio.Text.VirtualSnapshotPoint" />입니다.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.VirtualSnapshotPoint.Equals(System.Object)">
      <summary>두 <see cref="T:Microsoft.VisualStudio.Text.VirtualSnapshotPoint" /> 개체가 같은지 여부를 확인합니다.</summary>
      <returns>
            두 개체가 같으면 true이고, 그렇지 않으면 false입니다.</returns>
      <param name="obj">비교할 개체입니다.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.VirtualSnapshotPoint.GetHashCode">
      <summary>개체의 해시 코드를 가져옵니다.</summary>
    </member>
    <member name="P:Microsoft.VisualStudio.Text.VirtualSnapshotPoint.IsInVirtualSpace">
      <summary>스냅숏 지점에 가상 공간이 있는지 여부를 확인합니다.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.VirtualSnapshotPoint.op_Equality(Microsoft.VisualStudio.Text.VirtualSnapshotPoint,Microsoft.VisualStudio.Text.VirtualSnapshotPoint)">
      <summary>두 <see cref="T:Microsoft.VisualStudio.Text.VirtualSnapshotPoint" /> 개체가 같은지 여부를 확인합니다.</summary>
      <returns>
            두 개체가 같으면 true이고, 그렇지 않으면 false입니다.</returns>
      <param name="left">왼쪽 지점입니다.</param>
      <param name="right">오른쪽 지점입니다.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.VirtualSnapshotPoint.op_GreaterThan(Microsoft.VisualStudio.Text.VirtualSnapshotPoint,Microsoft.VisualStudio.Text.VirtualSnapshotPoint)">
      <summary>왼쪽 지점의 위치가 오른쪽 지점의 위치보다 큰지 여부를 확인합니다.</summary>
      <returns>
            left.Position이 right.Position보다 크면 true이고, 그렇지 않으면 false입니다.</returns>
      <param name="left">왼쪽 지점입니다.</param>
      <param name="right">오른쪽 지점입니다.</param>
      <exception cref="T:System.ArgumentException">The snapshots of the two points do not match.</exception>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.VirtualSnapshotPoint.op_GreaterThanOrEqual(Microsoft.VisualStudio.Text.VirtualSnapshotPoint,Microsoft.VisualStudio.Text.VirtualSnapshotPoint)">
      <summary>왼쪽 지점의 위치가 오른쪽 지점의 위치보다 크거나 같은지 여부를 확인합니다.</summary>
      <returns>
            left.Position이 right.Position보다 크거나 같으면 true이고, 그렇지 않으면 false입니다.</returns>
      <param name="left">왼쪽 지점입니다.</param>
      <param name="right">오른쪽 지점입니다.</param>
      <exception cref="T:System.ArgumentException">The snapshots of the two points do not match.</exception>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.VirtualSnapshotPoint.op_Inequality(Microsoft.VisualStudio.Text.VirtualSnapshotPoint,Microsoft.VisualStudio.Text.VirtualSnapshotPoint)">
      <summary>두 <see cref="T:Microsoft.VisualStudio.Text.VirtualSnapshotPoint" /> 개체가 다른지 여부를 확인합니다.</summary>
      <returns>
            두 개체가 다르면 true이고, 그렇지 않으면 false입니다.</returns>
      <param name="left">왼쪽 지점입니다.</param>
      <param name="right">오른쪽 지점입니다.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.VirtualSnapshotPoint.op_LessThan(Microsoft.VisualStudio.Text.VirtualSnapshotPoint,Microsoft.VisualStudio.Text.VirtualSnapshotPoint)">
      <summary>왼쪽 지점의 위치가 오른쪽 지점의 위치보다 작은지 여부를 확인합니다.</summary>
      <returns>
            left.Position이 right.Position보다 작으면 true이고, 그렇지 않으면 false입니다.</returns>
      <param name="left">왼쪽 지점입니다.</param>
      <param name="right">오른쪽 지점입니다.</param>
      <exception cref="T:System.ArgumentException">If the snapshots of the points do not match.</exception>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.VirtualSnapshotPoint.op_LessThanOrEqual(Microsoft.VisualStudio.Text.VirtualSnapshotPoint,Microsoft.VisualStudio.Text.VirtualSnapshotPoint)">
      <summary>왼쪽 지점의 위치가 오른쪽 지점의 위치보다 작거나 같은지 여부를 확인합니다.</summary>
      <returns>
            left.Position이 right.Position보다 작거나 같으면 true이고, 그렇지 않으면 false입니다.</returns>
      <param name="left">왼쪽 지점입니다.</param>
      <param name="right">오른쪽 지점입니다.</param>
      <exception cref="T:System.ArgumentException">If the snapshots of the points do not match.</exception>
    </member>
    <member name="P:Microsoft.VisualStudio.Text.VirtualSnapshotPoint.Position">
      <summary>스냅숏 지점의 위치를 가져옵니다.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.VirtualSnapshotPoint.ToString">
      <summary>개체를 문자열로 변환합니다.</summary>
      <returns>이 개체의 문자열 형식입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.VirtualSnapshotPoint.TranslateTo(Microsoft.VisualStudio.Text.ITextSnapshot)">
      <summary>이 지점을 <paramref name="snapshot" />으로 변환합니다.</summary>
      <returns>
        <paramref name="snapshot" />의 해당 <see cref="T:Microsoft.VisualStudio.Text.VirtualSnapshotPoint" />입니다.</returns>
      <param name="snapshot">대상 스냅숏입니다.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="snapshot" /> is for an earlier snapshot.</exception>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.VirtualSnapshotPoint.TranslateTo(Microsoft.VisualStudio.Text.ITextSnapshot,Microsoft.VisualStudio.Text.PointTrackingMode)">
      <summary>지정된 추적 모드를 사용하여 이 지점을 <paramref name="snapshot" />으로 변환합니다.</summary>
      <returns>
        <paramref name="snapshot" />의 해당 <see cref="T:Microsoft.VisualStudio.Text.VirtualSnapshotPoint" />입니다.</returns>
      <param name="snapshot">대상 스냅숏입니다.</param>
      <param name="trackingMode">사용할 추적 모드입니다.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="snapshot" /> is for an earlier snapshot.</exception>
    </member>
    <member name="P:Microsoft.VisualStudio.Text.VirtualSnapshotPoint.VirtualSpaces">
      <summary>가상 공간 수를 가져옵니다.</summary>
      <returns>가상 공간 수입니다.</returns>
    </member>
    <member name="T:Microsoft.VisualStudio.Text.VirtualSnapshotSpan">
      <summary>두 <see cref="T:Microsoft.VisualStudio.Text.VirtualSnapshotPoint" /> 개체를 나타냅니다.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.VirtualSnapshotSpan.#ctor(Microsoft.VisualStudio.Text.SnapshotSpan)">
      <summary>가상 공간 없이 <paramref name="snapshotSpan" />에서 <see cref="T:Microsoft.VisualStudio.Text.VirtualSnapshotSpan" />의 새 인스턴스를 초기화합니다.</summary>
      <param name="snapshotSpan">스냅숏 범위입니다.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.VirtualSnapshotSpan.#ctor(Microsoft.VisualStudio.Text.VirtualSnapshotPoint,Microsoft.VisualStudio.Text.VirtualSnapshotPoint)">
      <summary>지정된 <see cref="T:Microsoft.VisualStudio.Text.VirtualSnapshotPoint" />에서 <see cref="T:Microsoft.VisualStudio.Text.VirtualSnapshotSpan" />의 새 인스턴스를 초기화합니다.</summary>
      <param name="start">시작점입니다.</param>
      <param name="end">시작점과 같은 <see cref="T:Microsoft.VisualStudio.Text.ITextSnapshot" />에서 가져와야 하는 끝점입니다.</param>
      <exception cref="T:System.ArgumentException">The snapshot points belong to different <see cref="T:Microsoft.VisualStudio.Text.ITextSnapshot" /> objects.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">The end point comes before the start point.</exception>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.VirtualSnapshotSpan.Contains(Microsoft.VisualStudio.Text.VirtualSnapshotPoint)">
      <summary>이 가상 범위 내에 지정된 가상 지점이 포함되었는지 여부를 확인합니다.</summary>
      <returns>
            위치가 Start보다 크거나 같고 End보다 작으면 true이고, 그렇지 않으면 false입니다.</returns>
      <param name="virtualPoint">확인할 가상 지점입니다.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.VirtualSnapshotSpan.Contains(Microsoft.VisualStudio.Text.VirtualSnapshotSpan)">
      <summary>
        <paramref name="virtualSpan" />이 이 가상 범위 내에 완전히 속하는지 여부를 확인합니다.</summary>
      <returns>
            지정된 범위가 이 범위 내에 완전히 속하면 true이고, 그렇지 않으면 false입니다.</returns>
      <param name="virtualSpan">확인할 가상 범위입니다.</param>
    </member>
    <member name="P:Microsoft.VisualStudio.Text.VirtualSnapshotSpan.End">
      <summary>끝나는 가상 지점을 가져옵니다.</summary>
      <returns>끝점입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.VirtualSnapshotSpan.Equals(System.Object)">
      <summary>두 <see cref="T:Microsoft.VisualStudio.Text.VirtualSnapshotSpan" /> 개체가 같은지 여부를 확인합니다.</summary>
      <returns>
            두 개체가 같으면 true이고, 그렇지 않으면 false입니다.</returns>
      <param name="obj">비교할 개체입니다.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.VirtualSnapshotSpan.GetHashCode">
      <summary>개체의 해시 코드를 가져옵니다.</summary>
      <returns>해시 코드입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.VirtualSnapshotSpan.GetText">
      <summary>이 가상 스냅숏 범위에 포함된 텍스트입니다.</summary>
      <returns>null이 아닌 문자열입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.VirtualSnapshotSpan.Intersection(Microsoft.VisualStudio.Text.VirtualSnapshotSpan)">
      <summary>지정된 가상 범위와의 교차 부분을 반환하거나, 교차 부분이 없을 경우에는 null을 반환합니다.</summary>
      <returns>범위의 교차 부분이거나, 교차 부분이 비어 있을 경우에는 null입니다.</returns>
      <param name="virtualSpan">확인할 가상 범위입니다.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.VirtualSnapshotSpan.IntersectsWith(Microsoft.VisualStudio.Text.VirtualSnapshotSpan)">
      <summary>
        <paramref name="virtualSpan" />이 이 범위와 교차하는지 여부를 확인합니다. 공통되는 위치가 있거나 한 범위의 끝이 다른 범위의 시작과 일치하는 경우 두 범위는 교차하는 것으로 간주됩니다.</summary>
      <returns>
            두 범위가 교차하면 true이고, 그렇지 않으면 false입니다.</returns>
      <param name="virtualSpan">확인할 가상 범위입니다.</param>
    </member>
    <member name="P:Microsoft.VisualStudio.Text.VirtualSnapshotSpan.IsEmpty">
      <summary>시작점 및 끝점이 같은 위치에 있는지 여부를 확인합니다.</summary>
      <returns>범위가 비어 있으면 true이고, 그렇지 않으면 false입니다.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.Text.VirtualSnapshotSpan.IsInVirtualSpace">
      <summary>시작점 또는 끝점이 가상 공간에 있는지 여부를 확인합니다.</summary>
      <returns>범위의 시작점 또는 끝점이 가상 공간에 있으면 true입니다.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.Text.VirtualSnapshotSpan.Length">
      <summary>가상 공간을 고려한 이 범위의 길이입니다.</summary>
      <returns>범위의 길이입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.VirtualSnapshotSpan.op_Equality(Microsoft.VisualStudio.Text.VirtualSnapshotSpan,Microsoft.VisualStudio.Text.VirtualSnapshotSpan)">
      <summary>두 <see cref="T:Microsoft.VisualStudio.Text.VirtualSnapshotSpan" /> 개체가 같은지 여부를 확인합니다.</summary>
      <returns>
            두 개체가 같으면 true이고, 그렇지 않으면 false입니다.</returns>
      <param name="left">첫 번째 개체입니다.</param>
      <param name="right">두 번째 개체입니다.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.VirtualSnapshotSpan.op_Inequality(Microsoft.VisualStudio.Text.VirtualSnapshotSpan,Microsoft.VisualStudio.Text.VirtualSnapshotSpan)">
      <summary>두 <see cref="T:Microsoft.VisualStudio.Text.VirtualSnapshotSpan" /> 개체가 다른지 여부를 확인합니다.</summary>
      <returns>
            두 개체가 다르면 true이고, 그렇지 않으면 false입니다.</returns>
      <param name="left">첫 번째 개체입니다.</param>
      <param name="right">두 번째 개체입니다.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.VirtualSnapshotSpan.Overlap(Microsoft.VisualStudio.Text.VirtualSnapshotSpan)">
      <summary>지정된 가상 범위와의 중첩 부분을 반환하거나, 중첩 부분이 없을 경우에는 null을 반환합니다.</summary>
      <returns>범위의 중첩 부분이거나, 중첩 부분이 비어 있을 경우에는 null입니다.</returns>
      <param name="virtualSpan">확인할 가상 범위입니다.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.VirtualSnapshotSpan.OverlapsWith(Microsoft.VisualStudio.Text.VirtualSnapshotSpan)">
      <summary>
        <paramref name="virtualSpan" />이 이 범위와 중첩되는지 여부를 확인합니다. 공통되는 위치가 있고 둘 다 비어 있지 않을 경우 두 범위는 중첩되는 것으로 간주됩니다. 빈 범위는 다른 어떤 범위와도 중첩되지 않습니다.</summary>
      <returns>
            두 범위가 중첩되면 true이고, 그렇지 않으면 false입니다.</returns>
      <param name="virtualSpan">확인할 가상 범위입니다.</param>
    </member>
    <member name="P:Microsoft.VisualStudio.Text.VirtualSnapshotSpan.Snapshot">
      <summary>이 스냅숏 범위에서 참조하는 <see cref="T:Microsoft.VisualStudio.Text.ITextSnapshot" />입니다.</summary>
      <returns>텍스트 스냅숏입니다.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.Text.VirtualSnapshotSpan.SnapshotSpan">
      <summary>해당하는 비가상 SnapshotSpan을 가져옵니다.</summary>
      <returns>스냅숏 범위입니다.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.Text.VirtualSnapshotSpan.Start">
      <summary>시작하는 가상 지점을 가져옵니다.</summary>
      <returns>시작점입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.VirtualSnapshotSpan.ToString">
      <summary>개체를 문자열로 변환합니다.</summary>
      <returns>이 개체의 문자열 형식입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.VirtualSnapshotSpan.TranslateTo(Microsoft.VisualStudio.Text.ITextSnapshot)">
      <summary>이 범위를 <paramref name="snapshot" />으로 변환합니다.</summary>
      <returns>
        <paramref name="snapshot" />의 해당 <see cref="T:Microsoft.VisualStudio.Text.VirtualSnapshotSpan" />입니다.</returns>
      <param name="snapshot">대상 스냅숏입니다.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="snapshot" /> is for an earlier snapshot.</exception>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.VirtualSnapshotSpan.TranslateTo(Microsoft.VisualStudio.Text.ITextSnapshot,Microsoft.VisualStudio.Text.SpanTrackingMode)">
      <summary>지정된 추적 모드를 사용하여 이 범위를 <paramref name="snapshot" />으로 변환합니다.</summary>
      <returns>
        <paramref name="snapshot" />의 해당 <see cref="T:Microsoft.VisualStudio.Text.VirtualSnapshotSpan" />입니다.</returns>
      <param name="snapshot">대상 스냅숏입니다.</param>
      <param name="trackingMode">추적 모드입니다.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="snapshot" /> is for an earlier snapshot.</exception>
    </member>
    <member name="T:Microsoft.VisualStudio.Text.Classification.ClassificationChangedEventArgs">
      <summary>
        <see cref="E:Microsoft.VisualStudio.Text.Classification.IClassifier.ClassificationChanged" /> 이벤트에 대한 정보를 제공합니다.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.Classification.ClassificationChangedEventArgs.#ctor(Microsoft.VisualStudio.Text.SnapshotSpan)">
      <summary>
        <see cref="T:Microsoft.VisualStudio.Text.Classification.ClassificationChangedEventArgs" /> 개체의 새 인스턴스를 초기화합니다.</summary>
      <param name="changeSpan">변경된 분류 범위입니다.</param>
    </member>
    <member name="P:Microsoft.VisualStudio.Text.Classification.ClassificationChangedEventArgs.ChangeSpan">
      <summary>변경된 분류 범위를 가져옵니다.</summary>
      <returns>변경 범위입니다.</returns>
    </member>
    <member name="T:Microsoft.VisualStudio.Text.Classification.ClassificationSpan">
      <summary>
        <see cref="T:Microsoft.VisualStudio.Text.Classification.IClassificationType" />에 따른 텍스트 영역을 설명합니다.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.Classification.ClassificationSpan.#ctor(Microsoft.VisualStudio.Text.SnapshotSpan,Microsoft.VisualStudio.Text.Classification.IClassificationType)">
      <summary>
        <see cref="T:Microsoft.VisualStudio.Text.Classification.ClassificationSpan" />의 새 인스턴스를 초기화합니다.</summary>
      <param name="span">분류를 적용할 텍스트 범위입니다.</param>
      <param name="classification">범위의 분류 형식입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="classification" /> is null.</exception>
    </member>
    <member name="P:Microsoft.VisualStudio.Text.Classification.ClassificationSpan.ClassificationType">
      <summary>텍스트의 분류 형식을 가져옵니다.</summary>
      <returns>분류 형식입니다.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.Text.Classification.ClassificationSpan.Span">
      <summary>분류된 텍스트의 스냅숏 범위를 가져옵니다.</summary>
      <returns>스냅숏 범위입니다.</returns>
    </member>
    <member name="T:Microsoft.VisualStudio.Text.Classification.ClassificationTypeAttribute">
      <summary>논리적 분류 형식의 이름과 해당 분류 형식이 파생된 원래 분류 형식의 이름을 선언하는 데 사용됩니다.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.Classification.ClassificationTypeAttribute.#ctor">
      <summary>
        <see cref="T:Microsoft.VisualStudio.Text.Classification.ClassificationTypeAttribute" />의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="P:Microsoft.VisualStudio.Text.Classification.ClassificationTypeAttribute.ClassificationTypeNames">
      <summary>이 분류 형식의 이름을 가져오거나 설정합니다.</summary>
      <returns>형식의 이름입니다.</returns>
      <exception cref="T:System.ArgumentNullException">The value is null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">The value is an empty string.</exception>
    </member>
    <member name="T:Microsoft.VisualStudio.Text.Classification.ClassificationTypeDefinition">
      <summary>분류 형식을 선언하기 위한 데이터 전용 내보내기를 설명합니다.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.Classification.ClassificationTypeDefinition.#ctor">
      <summary>
        <see cref="T:Microsoft.VisualStudio.Text.Classification.ClassificationTypeDefinition" />의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.Text.Classification.IClassificationType">
      <summary>텍스트 범위의 논리적인 분류 형식입니다.</summary>
    </member>
    <member name="P:Microsoft.VisualStudio.Text.Classification.IClassificationType.BaseTypes">
      <summary>현재 <see cref="T:Microsoft.VisualStudio.Text.Classification.IClassificationType" />이 파생된 원래의 분류 형식을 가져옵니다.</summary>
      <returns>이 값은 빈 집합일 수는 있어도 null일 수는 없습니다.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.Text.Classification.IClassificationType.Classification">
      <summary>분류 형식의 이름을 가져옵니다.</summary>
      <returns>이 이름은 null일 수 없습니다.</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.Classification.IClassificationType.IsOfType(System.String)">
      <summary>현재 <see cref="T:Microsoft.VisualStudio.Text.Classification.IClassificationType" />이 이름이 <paramref name="type" />인 분류 형식에서 파생되는지 여부를 확인합니다.</summary>
      <returns>
            현재 분류 형식이 <paramref name="type" />으로 식별되는 분류 형식에서 파생되면 true이고, 그렇지 않으면 false입니다.</returns>
      <param name="type">기본 분류 형식의 이름입니다.</param>
    </member>
    <member name="T:Microsoft.VisualStudio.Text.Classification.IClassificationTypeRegistryService">
      <summary>알려진 모든 분류 형식의 컬렉션을 유지 관리하는 서비스입니다.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.Classification.IClassificationTypeRegistryService.CreateClassificationType(System.String,System.Collections.Generic.IEnumerable{Microsoft.VisualStudio.Text.Classification.IClassificationType})">
      <summary>
        <see cref="T:Microsoft.VisualStudio.Text.Classification.IClassificationType" />의 새 인스턴스를 초기화하고 이를 레지스트리에 추가합니다.</summary>
      <returns>새 <see cref="T:Microsoft.VisualStudio.Text.Classification.IClassificationType" />입니다.</returns>
      <param name="type">만들 분류 형식의 이름입니다.</param>
      <param name="baseTypes">분류의 기본 형식입니다.</param>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="type" /> is already in the registry.</exception>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.Classification.IClassificationTypeRegistryService.CreateTransientClassificationType(Microsoft.VisualStudio.Text.Classification.IClassificationType[])">
      <summary>이 세션 동안만 지속되는 <see cref="T:Microsoft.VisualStudio.Text.Classification.IClassificationType" />을 만듭니다. 이 <see cref="T:Microsoft.VisualStudio.Text.Classification.IClassificationType" />은 적어도 하나 이상의 <see cref="T:Microsoft.VisualStudio.Text.Classification.IClassificationType" />에서 상속되어야 합니다.</summary>
      <returns>모든 <paramref name="baseTypes" />에서 상속되는 새 <see cref="T:Microsoft.VisualStudio.Text.Classification.IClassificationType" />입니다.</returns>
      <param name="baseTypes">이 <see cref="T:Microsoft.VisualStudio.Text.Classification.IClassificationType" />의 기본 형식입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="baseTypes" /> is null.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="baseTypes" /> has zero items.</exception>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.Classification.IClassificationTypeRegistryService.CreateTransientClassificationType(System.Collections.Generic.IEnumerable{Microsoft.VisualStudio.Text.Classification.IClassificationType})">
      <summary>이 세션 동안만 지속되는 <see cref="T:Microsoft.VisualStudio.Text.Classification.IClassificationType" />을 만듭니다. 이 <see cref="T:Microsoft.VisualStudio.Text.Classification.IClassificationType" />은 적어도 하나 이상의 <see cref="T:Microsoft.VisualStudio.Text.Classification.IClassificationType" />에서 상속되어야 합니다.</summary>
      <returns>모든 <paramref name="baseTypes" />에서 상속되는 새 <see cref="T:Microsoft.VisualStudio.Text.Classification.IClassificationType" />입니다.</returns>
      <param name="baseTypes">이 <see cref="T:Microsoft.VisualStudio.Text.Classification.IClassificationType" />의 기본 형식입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="baseTypes" /> is null.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="baseTypes" /> has zero items.</exception>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.Classification.IClassificationTypeRegistryService.GetClassificationType(System.String)">
      <summary>지정된 <paramref name="type" />으로 식별되는 <see cref="T:Microsoft.VisualStudio.Text.Classification.IClassificationType" /> 개체를 가져옵니다.</summary>
      <returns>분류 형식이거나, 해당 이름의 분류 형식이 없는 경우 null입니다.</returns>
      <param name="type">분류 형식의 이름입니다.</param>
    </member>
    <member name="T:Microsoft.VisualStudio.Text.Classification.IClassifier">
      <summary>
        <see cref="T:Microsoft.VisualStudio.Text.Classification.IClassificationType" /> 개체를 <see cref="T:Microsoft.VisualStudio.Text.ITextBuffer" />의 텍스트에 할당합니다.</summary>
    </member>
    <member name="E:Microsoft.VisualStudio.Text.Classification.IClassifier.ClassificationChanged">
      <summary>텍스트 범위의 분류가 변경될 경우 발생합니다.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.Classification.IClassifier.GetClassificationSpans(Microsoft.VisualStudio.Text.SnapshotSpan)">
      <summary>지정된 텍스트 범위에서 겹쳐지는 모든 <see cref="T:Microsoft.VisualStudio.Text.Classification.ClassificationSpan" /> 개체를 가져옵니다.</summary>
      <returns>지정된 범위와 교차하는 <see cref="T:Microsoft.VisualStudio.Text.Classification.ClassificationSpan" /> 개체의 목록입니다.</returns>
      <param name="span">스냅숏 범위입니다.</param>
    </member>
    <member name="T:Microsoft.VisualStudio.Text.Classification.IClassifierAggregatorService">
      <summary>
        <see cref="T:Microsoft.VisualStudio.Text.ITextBuffer" />에 대한 모든 <see cref="T:Microsoft.VisualStudio.Text.Classification.IClassifier" /> 정보를 집계하고 정규화하는 <see cref="T:Microsoft.VisualStudio.Text.Classification.IClassifier" />를 반환하는 서비스입니다.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.Classification.IClassifierAggregatorService.GetClassifier(Microsoft.VisualStudio.Text.ITextBuffer)">
      <summary>지정된 <see cref="T:Microsoft.VisualStudio.Text.ITextBuffer" />에 대한 캐시된 <see cref="T:Microsoft.VisualStudio.Text.Classification.IClassifier" />를 가져옵니다. 해당 항목이 없을 경우 지정된 <see cref="T:Microsoft.VisualStudio.Text.ITextBuffer" />를 사용하여 <see cref="T:Microsoft.VisualStudio.Text.Classification.IClassifier" />가 만들어지고 캐시됩니다.</summary>
      <returns>캐시된 <see cref="T:Microsoft.VisualStudio.Text.Classification.IClassifier" />입니다.</returns>
      <param name="textBuffer">
        <see cref="T:Microsoft.VisualStudio.Text.Classification.IClassifier" />를 검색하거나 만들 <see cref="T:Microsoft.VisualStudio.Text.ITextBuffer" />입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="textBuffer" /> is null.</exception>
    </member>
    <member name="T:Microsoft.VisualStudio.Text.Classification.IClassifierProvider">
      <summary>지정된 환경에서 지정된 <see cref="T:Microsoft.VisualStudio.Text.ITextBuffer" />에 대한 분류자를 만듭니다.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.Classification.IClassifierProvider.GetClassifier(Microsoft.VisualStudio.Text.ITextBuffer)">
      <summary>지정된 텍스트 버퍼에 대한 분류자를 가져옵니다.</summary>
      <returns>텍스트 버퍼에 대한 분류자이거나, 공급자가 현재 상태에서 이를 수행할 수 없는 경우 null입니다.</returns>
      <param name="textBuffer">분류할 <see cref="T:Microsoft.VisualStudio.Text.ITextBuffer" />입니다.</param>
    </member>
    <member name="T:Microsoft.VisualStudio.Text.Document.ChangeTag">
      <summary>수정된 텍스트의 범위와 연결된 태그입니다.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.Document.ChangeTag.#ctor(Microsoft.VisualStudio.Text.Document.ChangeTypes)">
      <summary>지정된 변경 형식을 사용하여 <see cref="T:Microsoft.VisualStudio.Text.Document.ChangeTag" />의 새 인스턴스를 초기화합니다.</summary>
      <param name="type">태그에 대한 변경 형식입니다.</param>
    </member>
    <member name="P:Microsoft.VisualStudio.Text.Document.ChangeTag.ChangeTypes">
      <summary>태그에 대한 변경 형식을 가져옵니다.</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.Text.Document.ChangeTypes">
      <summary>수정된 텍스트의 변경 형식을 지정합니다.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Text.Document.ChangeTypes.None">
      <summary>변경 형식이 설정되지 않습니다.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Text.Document.ChangeTypes.ChangedSinceOpened">
      <summary>문서가 열린 후 발생한 변경 내용입니다.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Text.Document.ChangeTypes.ChangedSinceSaved">
      <summary>문서가 저장된 후 발생한 변경 내용입니다.</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.Text.Editor.ConvertTabsToSpaces">
      <summary>탭을 공백으로 변환할 수 있는지 여부를 결정하는 옵션 정의입니다.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.Editor.ConvertTabsToSpaces.#ctor">
      <summary>
        <see cref="T:Microsoft.VisualStudio.Text.Editor.ConvertTabsToSpaces" />의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="P:Microsoft.VisualStudio.Text.Editor.ConvertTabsToSpaces.Default">
      <summary>기본값(true)을 가져옵니다.</summary>
      <returns>true입니다.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.Text.Editor.ConvertTabsToSpaces.Key">
      <summary>편집기 옵션 키를 가져옵니다.</summary>
      <returns>키입니다.</returns>
    </member>
    <member name="T:Microsoft.VisualStudio.Text.Editor.DefaultOptions">
      <summary>공통적인 일반 옵션입니다.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Text.Editor.DefaultOptions.ConvertTabsToSpacesOptionId">
      <summary>탭을 공백으로 변환할지 여부를 결정하는 기본 옵션입니다.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Text.Editor.DefaultOptions.NewLineCharacterOptionId">
      <summary>하나 또는 여러 줄 바꿈 문자를 결정하는 기본 옵션입니다.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Text.Editor.DefaultOptions.ReplicateNewLineCharacterOptionId">
      <summary>새 줄을 삽입할 때 이미 있는 줄 바꿈 문자를 중복할지 여부를 결정하는 기본 옵션입니다.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Text.Editor.DefaultOptions.TabSizeOptionId">
      <summary>탭 크기를 결정하는 기본 옵션입니다.</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.Text.Editor.EditorOptionChangedEventArgs">
      <summary>
        <see cref="E:Microsoft.VisualStudio.Text.Editor.IEditorOptions.OptionChanged" /> 이벤트에 대한 정보를 제공합니다.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.Editor.EditorOptionChangedEventArgs.#ctor(System.String)">
      <summary>
        <see cref="T:Microsoft.VisualStudio.Text.Editor.EditorOptionChangedEventArgs" />의 새 인스턴스를 초기화합니다.</summary>
      <param name="optionId">옵션의 ID입니다.</param>
    </member>
    <member name="P:Microsoft.VisualStudio.Text.Editor.EditorOptionChangedEventArgs.OptionId">
      <summary>변경된 옵션의 ID를 가져옵니다.</summary>
      <returns>옵션 ID입니다.</returns>
    </member>
    <member name="T:Microsoft.VisualStudio.Text.Editor.EditorOptionDefinition">
      <summary>편집기 옵션에 대한 정의입니다.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.Editor.EditorOptionDefinition.#ctor">
      <summary>
        <see cref="T:Microsoft.VisualStudio.Text.Editor.EditorOptionDefinition" />의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="P:Microsoft.VisualStudio.Text.Editor.EditorOptionDefinition.DefaultValue">
      <summary>옵션의 기본값을 가져옵니다.</summary>
      <returns>기본값입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.Editor.EditorOptionDefinition.Equals(System.Object)">
      <summary>두 <see cref="T:Microsoft.VisualStudio.Text.Editor.EditorOptionDefinition" /> 개체가 같은지 여부를 확인합니다.</summary>
      <returns>
            두 개체가 같으면 true이고, 그렇지 않으면 false입니다.</returns>
      <param name="obj">비교할 개체입니다.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.Editor.EditorOptionDefinition.GetHashCode">
      <summary>이 형식의 해시 코드를 가져옵니다.</summary>
      <returns>해시 코드입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.Editor.EditorOptionDefinition.IsApplicableToScope(Microsoft.VisualStudio.Utilities.IPropertyOwner)">
      <summary>지정된 범위(예: 텍스트 버퍼)에 이 옵션을 적용할 수 있는지 여부를 확인합니다. 기본 구현은 true를 반환합니다. 기본적으로 옵션은 모든 범위에 적용할 수 있습니다.</summary>
      <returns>옵션을 범위에 적용할 수 있으면 true이고, 그렇지 않으면 false입니다.</returns>
      <param name="scope">
        <see cref="T:Microsoft.VisualStudio.Utilities.IPropertyOwner" />입니다.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.Editor.EditorOptionDefinition.IsValid(System.Object@)">
      <summary>제안된 값이 유효한지 여부를 확인합니다.</summary>
      <returns>
            값이 유효하면 true이고, 그렇지 않으면 false입니다.</returns>
      <param name="proposedValue">이 옵션에 대해 제안된 값입니다.</param>
    </member>
    <member name="P:Microsoft.VisualStudio.Text.Editor.EditorOptionDefinition.Name">
      <summary>옵션 레지스트리에서 옵션의 이름을 가져옵니다.</summary>
      <returns>옵션의 이름입니다.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.Text.Editor.EditorOptionDefinition.ValueType">
      <summary>옵션의 실제 형식을 가져옵니다. 편집기 옵션 레지스트리를 사용하여 옵션을 설정할 때 형식 안전성을 유지하기 위해 사용됩니다.</summary>
      <returns>옵션의 형식입니다.</returns>
    </member>
    <member name="T:Microsoft.VisualStudio.Text.Editor.EditorOptionDefinition`1">
      <summary>편집기 옵션에 대한 정의를 나타냅니다.</summary>
      <typeparam name="T"></typeparam>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.Editor.EditorOptionDefinition`1.#ctor">
      <summary>
        <see cref="T:Microsoft.VisualStudio.Text.Editor.EditorOptionDefinition`1" />의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="P:Microsoft.VisualStudio.Text.Editor.EditorOptionDefinition`1.Default">
      <summary>이 옵션의 기본값을 가져옵니다.</summary>
    </member>
    <member name="P:Microsoft.VisualStudio.Text.Editor.EditorOptionDefinition`1.DefaultValue">
      <summary>옵션의 기본값을 가져옵니다.</summary>
      <returns>기본값입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.Editor.EditorOptionDefinition`1.IsValid(System.Object@)">
      <summary>제안된 값이 유효한지 여부를 확인합니다.</summary>
      <returns>
            값이 유효하면 true이고, 그렇지 않으면 false입니다.</returns>
      <param name="proposedValue">이 옵션에 대해 제안된 값입니다.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.Editor.EditorOptionDefinition`1.IsValid(`0@)">
      <summary>제안된 값이 유효한지 여부를 확인합니다.</summary>
      <returns>
            값이 유효하면 true이고, 그렇지 않으면 false입니다.</returns>
      <param name="proposedValue">이 옵션에 대해 제안된 값입니다.</param>
    </member>
    <member name="P:Microsoft.VisualStudio.Text.Editor.EditorOptionDefinition`1.Key">
      <summary>이 옵션의 키를 가져옵니다.</summary>
      <returns>키입니다.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.Text.Editor.EditorOptionDefinition`1.Name">
      <summary>옵션의 이름을 가져옵니다.</summary>
      <returns>옵션의 이름입니다.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.Text.Editor.EditorOptionDefinition`1.ValueType">
      <summary>옵션의 실제 형식을 가져옵니다.</summary>
      <returns>옵션의 형식입니다.</returns>
    </member>
    <member name="T:Microsoft.VisualStudio.Text.Editor.EditorOptionKey`1">
      <summary>편집기 옵션에 대한 형식이 안전한 키를 나타냅니다.</summary>
      <typeparam name="T">옵션 값의 형식입니다.</typeparam>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.Editor.EditorOptionKey`1.#ctor(System.String)">
      <summary>
        <see cref="T:Microsoft.VisualStudio.Text.Editor.EditorOptionKey`1" />의 새 인스턴스를 초기화합니다.</summary>
      <param name="name">옵션 키의 이름입니다.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.Editor.EditorOptionKey`1.Equals(System.Object)">
      <summary>두 <see cref="T:Microsoft.VisualStudio.Text.Editor.EditorOptionKey`1" /> 개체가 같은지 여부를 확인합니다.</summary>
      <returns>
            두 개체가 같으면 true이고, 그렇지 않으면 false입니다.</returns>
      <param name="obj">비교할 개체입니다.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.Editor.EditorOptionKey`1.GetHashCode">
      <summary>해당 개체의 해시 코드를 가져옵니다.</summary>
      <returns>해시 코드입니다.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.Text.Editor.EditorOptionKey`1.Name">
      <summary>이 키의 이름을 가져옵니다.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.Editor.EditorOptionKey`1.op_Equality(Microsoft.VisualStudio.Text.Editor.EditorOptionKey{`0},Microsoft.VisualStudio.Text.Editor.EditorOptionKey{`0})">
      <summary>이 형식의 두 인스턴스가 같은지 여부를 확인합니다.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.Editor.EditorOptionKey`1.op_Inequality(Microsoft.VisualStudio.Text.Editor.EditorOptionKey{`0},Microsoft.VisualStudio.Text.Editor.EditorOptionKey{`0})">
      <summary>이 형식의 두 인스턴스가 다른지 여부를 확인합니다.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.Editor.EditorOptionKey`1.ToString">
      <summary>이 개체를 문자열로 변환합니다.</summary>
      <returns>옵션의 이름입니다.</returns>
    </member>
    <member name="T:Microsoft.VisualStudio.Text.Editor.IEditorOptions">
      <summary>값을 수정하고 새 옵션을 추가하기 위한 일반 편집기 옵션 및 확장 가능 메커니즘을 나타냅니다.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.Editor.IEditorOptions.ClearOptionValue``1(Microsoft.VisualStudio.Text.Editor.EditorOptionKey{``0})">
      <summary>지정된 옵션의 로컬 정의 값을 지웁니다.</summary>
      <returns>
            옵션이 로컬로 정의되었고 지워졌으면 true입니다.</returns>
      <param name="key">옵션 키입니다.</param>
      <typeparam name="T">값의 형식입니다.</typeparam>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.Editor.IEditorOptions.ClearOptionValue(System.String)">
      <summary>지정된 옵션의 로컬 정의 값을 지웁니다.</summary>
      <returns>
            옵션이 로컬로 정의되었고 지워졌으면 true입니다.</returns>
      <param name="optionId">옵션의 ID입니다.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.Editor.IEditorOptions.GetOptionValue``1(Microsoft.VisualStudio.Text.Editor.EditorOptionKey{``0})">
      <summary>지정된 키로 식별되는 옵션의 값을 가져옵니다.</summary>
      <returns>옵션의 현재 값입니다.</returns>
      <param name="key">옵션 키입니다.</param>
      <typeparam name="T">값의 형식입니다.</typeparam>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.Editor.IEditorOptions.GetOptionValue``1(System.String)">
      <summary>지정된 옵션 ID로 식별되는 옵션의 값을 가져옵니다.</summary>
      <returns>옵션의 현재 값입니다.</returns>
      <param name="optionId">옵션의 ID입니다.</param>
      <typeparam name="T">값의 형식입니다.</typeparam>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.Editor.IEditorOptions.GetOptionValue(System.String)">
      <summary>옵션 ID에서 지정하는 옵션의 값을 가져옵니다.</summary>
      <returns>개체인 옵션의 현재 값입니다. 호출자가 개체를 올바른 형식으로 캐스팅하는 일을 담당합니다.</returns>
      <param name="optionId">옵션의 ID입니다.</param>
    </member>
    <member name="P:Microsoft.VisualStudio.Text.Editor.IEditorOptions.GlobalOptions">
      <summary>전역 옵션을 가져옵니다.</summary>
      <returns>전역 옵션입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.Editor.IEditorOptions.IsOptionDefined``1(Microsoft.VisualStudio.Text.Editor.EditorOptionKey{``0},System.Boolean)">
      <summary>지정된 편집기 옵션이 정의되어 있는지 여부를 확인합니다.</summary>
      <returns>
            옵션이 정의되어 있으면 true이고, 그렇지 않으면 false입니다.</returns>
      <param name="key">옵션 키입니다.</param>
      <param name="localScopeOnly">
                이 범위에서만 검색하려면 true이고, 부모 범위도 검색하려면 false입니다. 현재 범위가 전역이면 이 설정은 아무런 영향을 주지 않습니다.</param>
      <typeparam name="T">키의 형식입니다.</typeparam>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.Editor.IEditorOptions.IsOptionDefined(System.String,System.Boolean)">
      <summary>지정된 옵션이 정의되어 있는지 여부를 확인합니다.</summary>
      <returns>
            옵션이 정의되어 있으면 true이고, 그렇지 않으면 false입니다.</returns>
      <param name="optionId">옵션의 ID입니다.</param>
      <param name="localScopeOnly">
                이 범위에서만 검색하려면 true이고, 부모 범위도 검색하려면 false입니다. 현재 범위가 전역이면 이 설정은 아무런 영향을 주지 않습니다.</param>
    </member>
    <member name="E:Microsoft.VisualStudio.Text.Editor.IEditorOptions.OptionChanged">
      <summary>옵션이 변경될 경우 발생합니다. 전역 범위에서의 옵션 변경이 이 범위에도 적용 가능한 경우 이 이벤트가 발생합니다.</summary>
    </member>
    <member name="P:Microsoft.VisualStudio.Text.Editor.IEditorOptions.Parent">
      <summary>이 옵션 집합의 바로 위 부모를 가져옵니다. 이 옵션 집합에 부모 범위가 없는 경우(전역 범위이기 때문에) 이 속성은 null이며 설정할 수 없습니다.</summary>
      <returns>부모 범위입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.Editor.IEditorOptions.SetOptionValue``1(Microsoft.VisualStudio.Text.Editor.EditorOptionKey{``0},``0)">
      <summary>현재 범위에 지정된 옵션의 값을 설정합니다. 지정된 옵션을 현재 범위에 적용할 수 없는 경우 전역 범위에 옵션을 설정하려고 시도합니다.</summary>
      <param name="key">옵션 키입니다.</param>
      <param name="value">옵션의 새 값입니다.</param>
      <typeparam name="T">키의 형식입니다.</typeparam>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.Editor.IEditorOptions.SetOptionValue(System.String,System.Object)">
      <summary>현재 범위에 지정된 옵션의 값을 설정합니다. 지정된 옵션을 현재 범위에 적용할 수 없는 경우 전역 범위에 옵션을 설정하려고 시도합니다.</summary>
      <param name="optionId">옵션의 ID입니다.</param>
      <param name="value">옵션의 새 값입니다.</param>
    </member>
    <member name="P:Microsoft.VisualStudio.Text.Editor.IEditorOptions.SupportedOptions">
      <summary>지원되는 옵션을 가져옵니다.</summary>
      <returns>지원되는 옵션입니다.</returns>
    </member>
    <member name="T:Microsoft.VisualStudio.Text.Editor.IEditorOptionsFactoryService">
      <summary>지정된 범위 또는 전역 범위에 대한 <see cref="T:Microsoft.VisualStudio.Text.Editor.IEditorOptions" />를 가져오는 서비스를 나타냅니다.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.Editor.IEditorOptionsFactoryService.CreateOptions">
      <summary>특정 범위에 바인딩되지 않은 <see cref="T:Microsoft.VisualStudio.Text.Editor.IEditorOptions" />의 새 인스턴스를 만듭니다.</summary>
      <returns>
        <see cref="P:Microsoft.VisualStudio.Text.Editor.IEditorOptionsFactoryService.GlobalOptions" />에 부모가 있는 <see cref="T:Microsoft.VisualStudio.Text.Editor.IEditorOptions" />의 새 인스턴스입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.Editor.IEditorOptionsFactoryService.GetOptions(Microsoft.VisualStudio.Utilities.IPropertyOwner)">
      <summary>
        <see cref="T:Microsoft.VisualStudio.Utilities.IPropertyOwner" />의 <see cref="T:Microsoft.VisualStudio.Text.Editor.IEditorOptions" />를 가져옵니다. 버퍼 및 뷰는 속성 소유자입니다. 범위에 대한 새 옵션이 이전에 만들어지지 않은 경우 새 옵션을 만듭니다.</summary>
      <returns>지정된 <see cref="T:Microsoft.VisualStudio.Utilities.IPropertyOwner" />의 <see cref="T:Microsoft.VisualStudio.Text.Editor.IEditorOptions" />입니다.</returns>
      <param name="scope">
        <see cref="T:Microsoft.VisualStudio.Utilities.IPropertyOwner" />입니다.</param>
    </member>
    <member name="P:Microsoft.VisualStudio.Text.Editor.IEditorOptionsFactoryService.GlobalOptions">
      <summary>전역 <see cref="T:Microsoft.VisualStudio.Text.Editor.IEditorOptions" />를 가져옵니다.</summary>
      <returns>전역 옵션입니다.</returns>
    </member>
    <member name="T:Microsoft.VisualStudio.Text.Editor.NewLineCharacter">
      <summary>하나 또는 여러 개의 줄 바꿈 문자를 지정하는 옵션 정의입니다.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.Editor.NewLineCharacter.#ctor">
      <summary>
        <see cref="T:Microsoft.VisualStudio.Text.Editor.NewLineCharacter" />의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="P:Microsoft.VisualStudio.Text.Editor.NewLineCharacter.Default">
      <summary>기본값("\r\n")을 가져옵니다.</summary>
    </member>
    <member name="P:Microsoft.VisualStudio.Text.Editor.NewLineCharacter.Key">
      <summary>편집기 옵션 키를 가져옵니다.</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.Text.Editor.ReplicateNewLineCharacter">
      <summary>줄을 삽입할 때 줄 바꿈 문자를 중복할 수 있는지 여부를 결정하는 옵션 정의입니다.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.Editor.ReplicateNewLineCharacter.#ctor">
      <summary>
        <see cref="T:Microsoft.VisualStudio.Text.Editor.ReplicateNewLineCharacter" />의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="P:Microsoft.VisualStudio.Text.Editor.ReplicateNewLineCharacter.Default">
      <summary>기본값(true)을 가져옵니다.</summary>
    </member>
    <member name="P:Microsoft.VisualStudio.Text.Editor.ReplicateNewLineCharacter.Key">
      <summary>편집기 옵션 키를 가져옵니다.</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.Text.Editor.TabSize">
      <summary>탭 크기(공백 개수로 나타냄)를 결정하는 옵션 정의입니다.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.Editor.TabSize.#ctor">
      <summary>
        <see cref="T:Microsoft.VisualStudio.Text.Editor.TabSize" />의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="P:Microsoft.VisualStudio.Text.Editor.TabSize.Default">
      <summary>기본값(4)을 가져옵니다.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.Editor.TabSize.IsValid(System.Int32@)">
      <summary>지정된 탭 크기가 유효한지 여부를 확인합니다.</summary>
      <returns>
        <paramref name="proposedValue" />가 유효한 크기이면 true이고, 그렇지 않으면 false입니다.</returns>
      <param name="proposedValue">공백 개수로 나타낸 탭 크기입니다.</param>
    </member>
    <member name="P:Microsoft.VisualStudio.Text.Editor.TabSize.Key">
      <summary>편집기 옵션 키를 가져옵니다.</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.Text.Editor.OptionsExtensionMethods.DefaultOptionExtensions">
      <summary>공통적인 일반 옵션에 대한 확장 메서드입니다.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.Editor.OptionsExtensionMethods.DefaultOptionExtensions.GetNewLineCharacter(Microsoft.VisualStudio.Text.Editor.IEditorOptions)">
      <summary>지정된 편집기 옵션의 줄 바꿈 문자를 가져옵니다.</summary>
      <returns>하나 또는 여러 개의 줄 바꿈 문자를 포함하는 문자열입니다.</returns>
      <param name="options">
        <see cref="T:Microsoft.VisualStudio.Text.Editor.IEditorOptions" />입니다.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.Editor.OptionsExtensionMethods.DefaultOptionExtensions.GetReplicateNewLineCharacter(Microsoft.VisualStudio.Text.Editor.IEditorOptions)">
      <summary>새 줄을 삽입할 때 줄 바꿈 문자가 이미 있을 경우 줄 바꿈 문자를 중복하는지 여부를 확인합니다.</summary>
      <returns>
            줄 바꿈 문자를 중복하면 true이고, 그렇지 않으면 false입니다.</returns>
      <param name="options">
        <see cref="T:Microsoft.VisualStudio.Text.Editor.IEditorOptions" />입니다.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.Editor.OptionsExtensionMethods.DefaultOptionExtensions.GetTabSize(Microsoft.VisualStudio.Text.Editor.IEditorOptions)">
      <summary>지정된 <see cref="T:Microsoft.VisualStudio.Text.Editor.IEditorOptions" />의 탭 크기를 가져옵니다.</summary>
      <returns>공백 개수로 나타낸 탭 크기입니다.</returns>
      <param name="options">
        <see cref="T:Microsoft.VisualStudio.Text.Editor.IEditorOptions" />입니다.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.Editor.OptionsExtensionMethods.DefaultOptionExtensions.IsConvertTabsToSpacesEnabled(Microsoft.VisualStudio.Text.Editor.IEditorOptions)">
      <summary>탭을 공백으로 변환하는 옵션을 지정된 <see cref="T:Microsoft.VisualStudio.Text.Editor.IEditorOptions" />에서 사용할 수 있는지 여부를 확인합니다.</summary>
      <returns>
            옵션을 사용할 수 있으면 true이고, 그렇지 않으면 false입니다.</returns>
      <param name="options">
        <see cref="T:Microsoft.VisualStudio.Text.Editor.IEditorOptions" />입니다.</param>
    </member>
    <member name="T:Microsoft.VisualStudio.Text.Operations.FindData">
      <summary>
        <see cref="T:Microsoft.VisualStudio.Text.Operations.ITextSearchService" />의 검색에 사용되는 데이터 집합을 나타냅니다.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.Operations.FindData.#ctor(System.String,Microsoft.VisualStudio.Text.ITextSnapshot)">
      <summary>
        <see cref="T:Microsoft.VisualStudio.Text.Operations.FindData" />의 새 인스턴스를 초기화합니다. </summary>
      <param name="searchPattern">검색 문자열입니다.</param>
      <param name="textSnapshot">검색할 텍스트 스냅숏입니다.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.Operations.FindData.#ctor(System.String,Microsoft.VisualStudio.Text.ITextSnapshot,Microsoft.VisualStudio.Text.Operations.FindOptions,Microsoft.VisualStudio.Text.Operations.ITextStructureNavigator)">
      <summary>지정된 검색 패턴, 텍스트 스냅숏, 찾기 옵션 및 텍스트 구조 탐색기를 사용하여 <see cref="T:Microsoft.VisualStudio.Text.Operations.FindData" />의 새 인스턴스를 초기화합니다.</summary>
      <param name="searchPattern">검색 패턴입니다.</param>
      <param name="textSnapshot">검색할 <see cref="T:Microsoft.VisualStudio.Text.ITextSnapshot" />입니다.</param>
      <param name="findOptions">검색 동안 사용할 <see cref="P:Microsoft.VisualStudio.Text.Operations.FindData.FindOptions" />입니다.</param>
      <param name="textStructureNavigator">검색 동안 사용할 <see cref="T:Microsoft.VisualStudio.Text.Operations.ITextStructureNavigator" />입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="searchPattern" /> or <paramref name="textSnapshot" /> is null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="searchPattern" /> is an empty string.</exception>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.Operations.FindData.Equals(System.Object)">
      <summary>두 <see cref="T:Microsoft.VisualStudio.Text.Operations.FindData" /> 개체가 같은지 여부를 확인합니다.</summary>
      <returns>
            두 개체가 같으면 true이고, 그렇지 않으면 false입니다.</returns>
      <param name="obj">비교할 개체입니다.</param>
    </member>
    <member name="P:Microsoft.VisualStudio.Text.Operations.FindData.FindOptions">
      <summary>검색에 사용할 옵션을 가져오거나 설정합니다.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.Operations.FindData.GetHashCode">
      <summary>개체의 해시 코드를 가져옵니다.</summary>
      <returns>해시 코드입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.Operations.FindData.op_Equality(Microsoft.VisualStudio.Text.Operations.FindData,Microsoft.VisualStudio.Text.Operations.FindData)">
      <summary>두 <see cref="T:Microsoft.VisualStudio.Text.Operations.FindData" /> 개체가 같은지 여부를 확인합니다.</summary>
      <returns>
            두 개체가 같으면 true이고, 그렇지 않으면 false입니다.</returns>
      <param name="data1">첫 번째 개체입니다.</param>
      <param name="data2">두 번째 개체입니다.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.Operations.FindData.op_Inequality(Microsoft.VisualStudio.Text.Operations.FindData,Microsoft.VisualStudio.Text.Operations.FindData)">
      <summary>두 <see cref="T:Microsoft.VisualStudio.Text.Operations.FindData" /> 개체가 다른지 여부를 확인합니다.</summary>
      <returns>
            두 개체가 다르면 true이고, 그렇지 않으면 false입니다.</returns>
      <param name="data1">첫 번째 개체입니다.</param>
      <param name="data2">두 번째 개체입니다.</param>
    </member>
    <member name="P:Microsoft.VisualStudio.Text.Operations.FindData.SearchString">
      <summary>검색에 사용할 문자열을 가져오거나 설정합니다.</summary>
      <exception cref="T:System.ArgumentNullException">The value is null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">The value is an empty string.</exception>
    </member>
    <member name="P:Microsoft.VisualStudio.Text.Operations.FindData.TextSnapshotToSearch">
      <summary>검색을 수행할 <see cref="T:Microsoft.VisualStudio.Text.ITextSnapshot" />을 가져오거나 설정합니다.</summary>
      <exception cref="T:System.ArgumentNullException">The value is null.</exception>
    </member>
    <member name="P:Microsoft.VisualStudio.Text.Operations.FindData.TextStructureNavigator">
      <summary>단어 경계를 확인하는 데 사용할 <see cref="T:Microsoft.VisualStudio.Text.Operations.ITextStructureNavigator" />를 가져오거나 설정합니다.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.Operations.FindData.ToString">
      <summary>
        <see cref="T:Microsoft.VisualStudio.Text.Operations.FindData" /> 개체를 문자열로 변환합니다.</summary>
      <returns>
        <see cref="T:Microsoft.VisualStudio.Text.Operations.FindData" /> 개체의 문자열 표현입니다.</returns>
    </member>
    <member name="T:Microsoft.VisualStudio.Text.Operations.FindOptions">
      <summary>검색에 사용할 옵션을 나타냅니다.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Text.Operations.FindOptions.None">
      <summary>옵션이 설정되지 않았습니다.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Text.Operations.FindOptions.MatchCase">
      <summary>검색은 대/소문자를 구분합니다.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Text.Operations.FindOptions.UseRegularExpressions">
      <summary>검색에 .Net 정규식을 사용합니다.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Text.Operations.FindOptions.WholeWord">
      <summary>단어 단위로만 검색합니다.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Text.Operations.FindOptions.SearchReverse">
      <summary>문자열의 끝에서 검색이 시작됩니다.</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.Text.Operations.IMergeTextUndoTransactionPolicy">
      <summary>실행 취소 트랜잭션에 병합 정책을 제공합니다.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.Operations.IMergeTextUndoTransactionPolicy.CanMerge(Microsoft.VisualStudio.Text.Operations.ITextUndoTransaction,Microsoft.VisualStudio.Text.Operations.ITextUndoTransaction)">
      <summary>이 메서드가 true를 반환하면 해당 트랜잭션에 대한 특정한 지식을 기반으로 병합을 진행할 수 있습니다. CanMerge는 TestCompatiblePolicy가 성공하는 경우에만 호출됩니다.</summary>
      <param name="newerTransaction">새 트랜잭션입니다.</param>
      <param name="olderTransaction">이전 트랜잭션입니다.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.Operations.IMergeTextUndoTransactionPolicy.PerformTransactionMerge(Microsoft.VisualStudio.Text.Operations.ITextUndoTransaction,Microsoft.VisualStudio.Text.Operations.ITextUndoTransaction)"></member>
    <member name="M:Microsoft.VisualStudio.Text.Operations.IMergeTextUndoTransactionPolicy.TestCompatiblePolicy(Microsoft.VisualStudio.Text.Operations.IMergeTextUndoTransactionPolicy)">
      <summary>
        <see cref="T:Microsoft.VisualStudio.Text.Operations.IMergeTextUndoTransactionPolicy" />가 서로 호환되는지 여부를 확인합니다.</summary>
      <param name="other">테스트할 <see cref="T:Microsoft.VisualStudio.Text.Operations.IMergeTextUndoTransactionPolicy" />입니다.</param>
    </member>
    <member name="T:Microsoft.VisualStudio.Text.Operations.ITextBufferUndoManager">
      <summary>
        <see cref="P:Microsoft.VisualStudio.Text.Operations.ITextBufferUndoManager.TextBuffer" />의 <see cref="T:Microsoft.VisualStudio.Text.Operations.ITextUndoHistory" />를 등록하고 <see cref="P:Microsoft.VisualStudio.Text.Operations.ITextBufferUndoManager.TextBuffer" />에서 변경 이벤트를 수신하며 <see cref="T:Microsoft.VisualStudio.Text.Operations.IUndoPrimitive" /> 개체를 <see cref="T:Microsoft.VisualStudio.Text.Operations.ITextUndoHistory" />에 추가합니다.</summary>
    </member>
    <member name="P:Microsoft.VisualStudio.Text.Operations.ITextBufferUndoManager.TextBuffer">
      <summary>이 <see cref="T:Microsoft.VisualStudio.Text.Operations.ITextBufferUndoManager" />에서 실행 취소 작업을 관리하는 <see cref="T:Microsoft.VisualStudio.Text.ITextBuffer" />를 가져옵니다.</summary>
    </member>
    <member name="P:Microsoft.VisualStudio.Text.Operations.ITextBufferUndoManager.TextBufferUndoHistory">
      <summary>기본 <see cref="T:Microsoft.VisualStudio.Text.ITextBuffer" />의 <see cref="T:Microsoft.VisualStudio.UI.Undo.UndoHistory" />를 가져옵니다.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.Operations.ITextBufferUndoManager.UnregisterUndoHistory">
      <summary>
        <see cref="T:Microsoft.VisualStudio.Text.Operations.ITextUndoHistoryRegistry" />에서 기본 <see cref="T:Microsoft.VisualStudio.Text.ITextBuffer" />의 <see cref="T:Microsoft.VisualStudio.Text.Operations.ITextUndoHistory" />를 등록 취소합니다.</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.Text.Operations.ITextBufferUndoManagerProvider">
      <summary>지정된 <see cref="T:Microsoft.VisualStudio.Text.ITextBuffer" />에 <see cref="T:Microsoft.VisualStudio.Text.Operations.ITextBufferUndoManager" />를 제공합니다. 캐시된 팩터리이며 지정된 <see cref="T:Microsoft.VisualStudio.Text.ITextBuffer" />에 대해 하나의 <see cref="T:Microsoft.VisualStudio.Text.Operations.ITextBufferUndoManager" />만 만들어집니다.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.Operations.ITextBufferUndoManagerProvider.GetTextBufferUndoManager(Microsoft.VisualStudio.Text.ITextBuffer)">
      <summary>지정된 <see cref="T:Microsoft.VisualStudio.Text.ITextBuffer" />의 캐시된 <see cref="T:Microsoft.VisualStudio.Text.Operations.ITextBufferUndoManager" />를 가져옵니다. 실행 취소 관리자가 캐시되지 않은 경우 새 <see cref="T:Microsoft.VisualStudio.Text.Operations.ITextBufferUndoManager" />를 만들고 지정된 <see cref="T:Microsoft.VisualStudio.Text.ITextBuffer" />에 캐시합니다.</summary>
      <returns>
        <paramref name="textBuffer" />의 캐시된 <see cref="T:Microsoft.VisualStudio.Text.Operations.ITextBufferUndoManager" />입니다.</returns>
      <param name="textBuffer">
        <see cref="T:Microsoft.VisualStudio.Text.Operations.ITextBufferUndoManager" />를 가져올 <see cref="T:Microsoft.VisualStudio.Text.ITextBuffer" />입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="textBuffer" /> is null.</exception>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.Operations.ITextBufferUndoManagerProvider.RemoveTextBufferUndoManager(Microsoft.VisualStudio.Text.ITextBuffer)">
      <summary>지정된 <paramref name="textBuffer" />에 이미 하나 있을 경우 <see cref="T:Microsoft.VisualStudio.Text.Operations.ITextBufferUndoManager" />를 제거합니다.</summary>
      <param name="textBuffer">확인할 <see cref="T:Microsoft.VisualStudio.Text.ITextBuffer" />입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="textBuffer" /> is null.</exception>
    </member>
    <member name="T:Microsoft.VisualStudio.Text.Operations.ITextSearchService">
      <summary>여러 검색 옵션으로 <see cref="T:Microsoft.VisualStudio.Text.ITextSnapshot" />을 검색합니다.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.Operations.ITextSearchService.FindAll(Microsoft.VisualStudio.Text.Operations.FindData)">
      <summary>검색 문자열의 모든 일치 항목을 검색합니다.</summary>
      <returns>모든 일치 항목의 목록이거나 일치 항목이 없는 경우 null입니다.</returns>
      <param name="findData">이 검색에 사용할 데이터입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="findData" /> is null.</exception>
      <exception cref="T:System.ArgumentException">The UseRegularExpressions flag of the find options is set and the search string is an invalid regular expression.</exception>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.Operations.ITextSearchService.FindNext(System.Int32,System.Boolean,Microsoft.VisualStudio.Text.Operations.FindData)">
      <summary>검색 문자열의 다음 일치 항목을 검색합니다.</summary>
      <returns>일치 항목이 있는 경우 해당 항목이 들어 있는 <see cref="T:Microsoft.VisualStudio.Text.SnapshotSpan" />이거나 일치 항목이 없는 경우 null입니다.</returns>
      <param name="startIndex">검색을 시작할 인덱스입니다.</param>
      <param name="wraparound">검색할 때 버퍼 끝에 도달하면 버퍼 처음으로 래핑할지 여부를 확인합니다.</param>
      <param name="findData">이 검색에 사용할 데이터입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="findData" /> is null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="startIndex" /> is less than zero or greater than the length of the data.</exception>
      <exception cref="T:System.ArgumentException">The UseRegularExpressions flag is set and the search string is an invalid regular expression.</exception>
    </member>
    <member name="T:Microsoft.VisualStudio.Text.Operations.ITextStructureNavigator">
      <summary>단어 범위를 가져오는 등 텍스트를 탐색하는 메서드를 제공합니다.</summary>
    </member>
    <member name="P:Microsoft.VisualStudio.Text.Operations.ITextStructureNavigator.ContentType">
      <summary>이 탐색기에서 지원하는 콘텐츠 형식을 가져옵니다.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.Operations.ITextStructureNavigator.GetExtentOfWord(Microsoft.VisualStudio.Text.SnapshotPoint)">
      <summary>지정된 위치에서 단어 범위를 가져옵니다.</summary>
      <returns>단어를 나타내는 <see cref="T:Microsoft.VisualStudio.Text.Operations.TextExtent" />입니다. 공백 또는 탐색 중에 무시할 중요하지 않은 다른 문자의 경우 <see cref="P:Microsoft.VisualStudio.Text.Operations.TextExtent.IsSignificant" /> 필드를 false로 설정합니다.</returns>
      <param name="currentPosition">단어에서 <see cref="T:Microsoft.VisualStudio.Text.Operations.TextExtent" />가 필요한 텍스트의 위치입니다.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.Operations.ITextStructureNavigator.GetSpanOfEnclosing(Microsoft.VisualStudio.Text.SnapshotSpan)">
      <summary>지정된 스냅숏 범위의 바깥쪽 구문 요소 범위를 가져옵니다.</summary>
      <returns>바깥쪽 구문 요소를 나타내는 <see cref="T:Microsoft.VisualStudio.Text.SnapshotSpan" />입니다. 지정된 스냅숏 범위가 여러 구문 요소를 포함하는 경우 이 메서드는 요소의 최소 공통 상위 요소 범위를 반환합니다. 스냅숏 범위가 루트 요소, 즉 전체 문서를 포함하는 경우 이 메서드는 전체 문서의 <see cref="T:Microsoft.VisualStudio.Text.SnapshotSpan" />을 반환합니다.</returns>
      <param name="activeSpan">바깥쪽 구문 요소를 가져올 <see cref="T:Microsoft.VisualStudio.Text.SnapshotSpan" />입니다.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.Operations.ITextStructureNavigator.GetSpanOfFirstChild(Microsoft.VisualStudio.Text.SnapshotSpan)">
      <summary>지정된 스냅숏 범위의 첫 번째 자식 구문 요소 범위를 가져옵니다. 스냅숏 범위의 길이가 0인 경우에는 동작이 <see cref="M:Microsoft.VisualStudio.Text.Operations.ITextStructureNavigator.GetSpanOfEnclosing(Microsoft.VisualStudio.Text.SnapshotSpan)" />의 동작과 같습니다.</summary>
      <returns>첫 번째 자식 구문 요소를 나타내는 <see cref="T:Microsoft.VisualStudio.Text.SnapshotSpan" />입니다. 지정된 스냅숏 범위가 여러 구문 요소를 포함하는 경우 이 메서드는 요소의 최소 공통 상위 요소 범위를 반환합니다. 지정된 스냅숏 범위가 자식 요소를 포함하는 경우에는 동작이 <see cref="M:Microsoft.VisualStudio.Text.Operations.ITextStructureNavigator.GetSpanOfEnclosing(Microsoft.VisualStudio.Text.SnapshotSpan)" />의 동작과 같습니다.</returns>
      <param name="activeSpan">첫 번째 자식 구문 요소 범위를 가져올 <see cref="T:Microsoft.VisualStudio.Text.SnapshotSpan" />입니다.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.Operations.ITextStructureNavigator.GetSpanOfNextSibling(Microsoft.VisualStudio.Text.SnapshotSpan)">
      <summary>지정된 스냅숏 범위의 다음 형제 구문 요소 범위를 가져옵니다. 스냅숏 범위의 길이가 0인 경우에는 동작이 <see cref="M:Microsoft.VisualStudio.Text.Operations.ITextStructureNavigator.GetSpanOfEnclosing(Microsoft.VisualStudio.Text.SnapshotSpan)" />의 동작과 같습니다.</summary>
      <returns>다음 형제 구문 요소를 나타내는 <see cref="T:Microsoft.VisualStudio.Text.SnapshotSpan" />입니다. 지정된 활성 범위가 여러 구문 요소를 포함하는 경우 이 메서드는 다음 형제 요소 범위를 반환합니다. 지정된 스냅숏 범위가 형제 요소가 없는 구문 요소를 포함하는 경우에는 동작이 <see cref="M:Microsoft.VisualStudio.Text.Operations.ITextStructureNavigator.GetSpanOfEnclosing(Microsoft.VisualStudio.Text.SnapshotSpan)" />의 동작과 같습니다.</returns>
      <param name="activeSpan">다음 형제 구문 요소 범위를 가져올 <see cref="T:Microsoft.VisualStudio.Text.SnapshotSpan" />입니다.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.Operations.ITextStructureNavigator.GetSpanOfPreviousSibling(Microsoft.VisualStudio.Text.SnapshotSpan)">
      <summary>지정된 스냅숏 범위의 이전 형제 구문 요소 범위를 가져옵니다. 지정된 범위의 길이가 0인 경우에는 동작이 <see cref="M:Microsoft.VisualStudio.Text.Operations.ITextStructureNavigator.GetSpanOfEnclosing(Microsoft.VisualStudio.Text.SnapshotSpan)" />의 동작과 같습니다.</summary>
      <returns>이전 형제 구문 요소를 나타내는 <see cref="T:Microsoft.VisualStudio.Text.SnapshotSpan" />입니다. 지정된 스냅숏 범위가 여러 구문 요소를 포함하는 경우 이 메서드는 이전 요소 범위를 반환합니다.  지정된 스냅숏 범위가 형제 요소가 없는 구문 요소를 포함하는 경우에는 동작이 <see cref="M:Microsoft.VisualStudio.Text.Operations.ITextStructureNavigator.GetSpanOfEnclosing(Microsoft.VisualStudio.Text.SnapshotSpan)" />의 동작과 같습니다.</returns>
      <param name="activeSpan">이전 형제 구문 요소 범위를 가져올 <see cref="T:Microsoft.VisualStudio.Text.SnapshotSpan" />입니다.</param>
    </member>
    <member name="T:Microsoft.VisualStudio.Text.Operations.ITextStructureNavigatorProvider">
      <summary>지정된 <see cref="T:Microsoft.VisualStudio.Text.ITextBuffer" />의 <see cref="T:Microsoft.VisualStudio.Text.Operations.ITextStructureNavigator" />를 가져옵니다. </summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.Operations.ITextStructureNavigatorProvider.CreateTextStructureNavigator(Microsoft.VisualStudio.Text.ITextBuffer)">
      <summary>지정된 <see cref="T:Microsoft.VisualStudio.Text.ITextBuffer" />의 새 <see cref="T:Microsoft.VisualStudio.Text.Operations.ITextStructureNavigator" />를 만듭니다.</summary>
      <returns>
        <paramref name="textBuffer" />의 <see cref="T:Microsoft.VisualStudio.Text.Operations.ITextStructureNavigator" />이거나 null입니다.</returns>
      <param name="textBuffer">
        <see cref="T:Microsoft.VisualStudio.Text.Operations.ITextStructureNavigator" />를 가져올 <see cref="T:Microsoft.VisualStudio.Text.ITextBuffer" />입니다.</param>
    </member>
    <member name="T:Microsoft.VisualStudio.Text.Operations.ITextStructureNavigatorSelectorService">
      <summary>콘텐츠 형식에 따라 <see cref="T:Microsoft.VisualStudio.Text.Operations.ITextStructureNavigator" /> 개체를 선택하고 캐시합니다.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.Operations.ITextStructureNavigatorSelectorService.CreateTextStructureNavigator(Microsoft.VisualStudio.Text.ITextBuffer,Microsoft.VisualStudio.Utilities.IContentType)">
      <summary>지정된 <see cref="T:Microsoft.VisualStudio.Utilities.IContentType" />에 따라 탐색기를 선택하여 지정된 <see cref="T:Microsoft.VisualStudio.Text.ITextBuffer" />의 새 <see cref="T:Microsoft.VisualStudio.Text.Operations.ITextStructureNavigator" />를 만듭니다.</summary>
      <returns>유효한 <see cref="T:Microsoft.VisualStudio.Text.Operations.ITextStructureNavigator" />입니다. 이 값은 null이 될 수 없습니다.</returns>
      <param name="textBuffer">
        <see cref="T:Microsoft.VisualStudio.Text.Operations.ITextStructureNavigator" />에서 탐색할 <see cref="T:Microsoft.VisualStudio.Text.ITextBuffer" />입니다.</param>
      <param name="contentType">사용할 콘텐츠 형식입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="textBuffer" /> is null.</exception>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.Operations.ITextStructureNavigatorSelectorService.GetTextStructureNavigator(Microsoft.VisualStudio.Text.ITextBuffer)">
      <summary>새로 만들거나 캐시된 값을 사용하여 지정된 <see cref="T:Microsoft.VisualStudio.Text.ITextBuffer" />의 <see cref="T:Microsoft.VisualStudio.Text.Operations.ITextStructureNavigator" />를 가져옵니다.</summary>
      <returns>유효한 <see cref="T:Microsoft.VisualStudio.Text.Operations.ITextStructureNavigator" />입니다. 이 값은 null이 될 수 없습니다.</returns>
      <param name="textBuffer">
        <see cref="T:Microsoft.VisualStudio.Text.Operations.ITextStructureNavigator" />에서 탐색할 <see cref="T:Microsoft.VisualStudio.Text.ITextBuffer" />입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="textBuffer" /> is null.</exception>
    </member>
    <member name="T:Microsoft.VisualStudio.Text.Operations.ITextUndoHistory">
      <summary>실행 취소 트랜잭션을 포함합니다.</summary>
    </member>
    <member name="P:Microsoft.VisualStudio.Text.Operations.ITextUndoHistory.CanRedo">
      <summary>한 번의 다시 실행이 가능한지 여부를 확인합니다.</summary>
    </member>
    <member name="P:Microsoft.VisualStudio.Text.Operations.ITextUndoHistory.CanUndo">
      <summary>한 번의 실행 취소가 가능한지 여부를 확인합니다.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.Operations.ITextUndoHistory.CreateTransaction(System.String)">
      <summary>새 트랜잭션을 만들어 현재 트랜잭션 안에 중첩하고 새 트랜잭션을 현재 트랜잭션으로 표시합니다.</summary>
      <param name="description">트랜잭션에 대한 설명입니다.</param>
    </member>
    <member name="P:Microsoft.VisualStudio.Text.Operations.ITextUndoHistory.CurrentTransaction">
      <summary>진행 중인 현재 UndoTransaction을 가져옵니다.</summary>
    </member>
    <member name="P:Microsoft.VisualStudio.Text.Operations.ITextUndoHistory.LastRedoTransaction">
      <summary>
        <see cref="P:Microsoft.VisualStudio.Text.Operations.ITextUndoHistory.RedoStack" />의 최신 항목, 즉 맨 위 항목을 가져오거나 스택이 비어 있을 경우 null을 가져옵니다.</summary>
    </member>
    <member name="P:Microsoft.VisualStudio.Text.Operations.ITextUndoHistory.LastUndoTransaction">
      <summary>
        <see cref="P:Microsoft.VisualStudio.Text.Operations.ITextUndoHistory.UndoStack" />의 최신 항목, 즉 맨 위 항목을 가져오거나 스택이 비어 있을 경우 null을 가져옵니다.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.Operations.ITextUndoHistory.Redo(System.Int32)">
      <summary>지정된 수의 다시 실행 작업을 수행하고 실행 취소 스택에 트랜잭션을 배치합니다.</summary>
      <param name="count">수행할 다시 실행 작업의 수입니다. 작업이 끝날 때 지정된 수의 표시된 트랜잭션이 다시 실행됩니다. 따라서 표시된 트랜잭션 위 또는 아래에 숨겨진 트랜잭션이 있을 경우 다시 실행된 트랜잭션의 실제 수는 이 숫자보다 클 수 있습니다.</param>
    </member>
    <member name="P:Microsoft.VisualStudio.Text.Operations.ITextUndoHistory.RedoDescription">
      <summary>표시된 최신 다시 실행 <see cref="T:Microsoft.VisualStudio.Text.Operations.ITextUndoTransaction" />에 대한 설명을 가져옵니다.</summary>
    </member>
    <member name="P:Microsoft.VisualStudio.Text.Operations.ITextUndoHistory.RedoStack">
      <summary>이 기록의 다시 실행 스택입니다. 현재 열려 있는 트랜잭션이나 실행 취소 트랜잭션은 포함하지 않습니다.</summary>
    </member>
    <member name="P:Microsoft.VisualStudio.Text.Operations.ITextUndoHistory.State">
      <summary>UndoHistory의 현재 상태를 가져옵니다.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.Operations.ITextUndoHistory.Undo(System.Int32)">
      <summary>지정된 수의 다시 실행 작업을 수행하고 실행 취소 스택에 트랜잭션을 배치합니다.</summary>
      <param name="count">수행할 실행 취소 작업의 수입니다.</param>
    </member>
    <member name="P:Microsoft.VisualStudio.Text.Operations.ITextUndoHistory.UndoDescription">
      <summary>표시된 최신 실행 취소 <see cref="T:Microsoft.VisualStudio.Text.Operations.ITextUndoTransaction" />에 대한 설명을 가져옵니다.</summary>
    </member>
    <member name="E:Microsoft.VisualStudio.Text.Operations.ITextUndoHistory.UndoRedoHappened">
      <summary>이 기록에서 실행 취소 또는 다시 실행이 발생했을 경우 소비자에게 알립니다.</summary>
    </member>
    <member name="P:Microsoft.VisualStudio.Text.Operations.ITextUndoHistory.UndoStack">
      <summary>이 기록의 실행 취소 스택입니다. 현재 열려 있는 트랜잭션이나 다시 실행 트랜잭션은 포함하지 않습니다.</summary>
    </member>
    <member name="E:Microsoft.VisualStudio.Text.Operations.ITextUndoHistory.UndoTransactionCompleted">
      <summary>
        <see cref="T:Microsoft.VisualStudio.Text.Operations.ITextUndoTransaction" />이 완료되어 <see cref="P:Microsoft.VisualStudio.Text.Operations.ITextUndoHistory.UndoStack" />에 추가되었을 경우 소비자에게 알립니다.</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.Text.Operations.ITextUndoHistoryRegistry">
      <summary>컨텍스트 개체를 <see cref="T:Microsoft.VisualStudio.Text.Operations.ITextUndoHistory" /> 개체에 매핑하고 구성 요소 부분에서 노출됩니다.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.Operations.ITextUndoHistoryRegistry.AttachHistory(System.Object,Microsoft.VisualStudio.Text.Operations.ITextUndoHistory)"></member>
    <member name="M:Microsoft.VisualStudio.Text.Operations.ITextUndoHistoryRegistry.GetHistory(System.Object)">
      <summary>컨텍스트와 관련된 기록을 가져오지만 새로 만들지는 않습니다.</summary>
      <param name="context">임의의 컨텍스트 개체입니다.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.Operations.ITextUndoHistoryRegistry.RegisterHistory(System.Object)">
      <summary>컨텍스트와 관련된 기록을 가져오거나 필요한 경우 새로 만듭니다.</summary>
      <param name="context">임의의 컨텍스트 개체입니다.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.Operations.ITextUndoHistoryRegistry.RemoveHistory(Microsoft.VisualStudio.Text.Operations.ITextUndoHistory)">
      <summary>레지스트리에서 지정된 <see cref="T:Microsoft.VisualStudio.Text.Operations.ITextUndoHistory" />에 대한 매핑이 있을 경우 모두 제거합니다.</summary>
      <param name="history">레지스트리에서 제거할 <see cref="T:Microsoft.VisualStudio.Text.Operations.ITextUndoHistory" />입니다.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.Operations.ITextUndoHistoryRegistry.TryGetHistory(System.Object,Microsoft.VisualStudio.Text.Operations.ITextUndoHistory@)">
      <summary>컨텍스트와 관련된 기록을 가져오지만 새로 만들지는 않습니다.</summary>
      <param name="context">임의의 컨텍스트 개체입니다.</param>
      <param name="history">컨텍스트 개체와 관련된 <see cref="T:Microsoft.VisualStudio.Text.Operations.ITextUndoHistory" />입니다.</param>
    </member>
    <member name="T:Microsoft.VisualStudio.Text.Operations.ITextUndoPrimitive">
      <summary>자체적으로 실행/실행 취소/다시 실행 방법을 알고 있는 원자 단위 작업을 나타냅니다.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.Operations.ITextUndoPrimitive.CanMerge(Microsoft.VisualStudio.Text.Operations.ITextUndoPrimitive)">
      <summary>이 실행 취소 원시 데이터를 지정된 실행 취소 원시 데이터와 병합할 수 있는지 여부를 확인합니다.</summary>
      <param name="older">이전 원시 데이터입니다.</param>
    </member>
    <member name="P:Microsoft.VisualStudio.Text.Operations.ITextUndoPrimitive.CanRedo">
      <summary>현재 Do()를 호출할 수 있는지 여부를 확인합니다.</summary>
    </member>
    <member name="P:Microsoft.VisualStudio.Text.Operations.ITextUndoPrimitive.CanUndo">
      <summary>현재 Undo()를 호출할 수 있는지 여부를 확인합니다.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.Operations.ITextUndoPrimitive.Do">
      <summary>작업을 수행 또는 다시 실행합니다.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.Operations.ITextUndoPrimitive.Merge(Microsoft.VisualStudio.Text.Operations.ITextUndoPrimitive)">
      <summary>실제 병합을 수행합니다.</summary>
      <param name="older">병합할 이전 원시 데이터입니다.</param>
    </member>
    <member name="P:Microsoft.VisualStudio.Text.Operations.ITextUndoPrimitive.Parent">
      <summary>원시 데이터가 들어 있는 <see cref="T:Microsoft.VisualStudio.Text.Operations.ITextUndoTransaction" />을 가져오거나 설정합니다.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.Operations.ITextUndoPrimitive.Undo">
      <summary>작업에 대해 롤백 또는 실행 취소를 수행합니다.</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.Text.Operations.ITextUndoTransaction">
      <summary>
        <see cref="T:Microsoft.VisualStudio.Text.Operations.ITextUndoPrimitive" /> 개체의 컨테이너를 나타냅니다. UndoTransaction은 UndoHistory에서 추적됩니다.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.Operations.ITextUndoTransaction.AddUndo(Microsoft.VisualStudio.Text.Operations.ITextUndoPrimitive)">
      <summary>트랜잭션을 열 때 목록의 끝에 새 원시 데이터를 추가합니다.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.Operations.ITextUndoTransaction.Cancel">
      <summary>열려 있는 트랜잭션을 취소된 것으로 표시하고 추가된 모든 원시 데이터를 실행 취소하고 지웁니다.</summary>
    </member>
    <member name="P:Microsoft.VisualStudio.Text.Operations.ITextUndoTransaction.CanRedo">
      <summary>현재 Do()를 호출할 수 있는지 여부를 확인합니다.</summary>
    </member>
    <member name="P:Microsoft.VisualStudio.Text.Operations.ITextUndoTransaction.CanUndo">
      <summary>현재 Undo()를 호출할 수 있는지 여부를 확인합니다.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.Operations.ITextUndoTransaction.Complete">
      <summary>트랜잭션을 완료되어 실행 취소 가능한 것으로 표시합니다.</summary>
    </member>
    <member name="P:Microsoft.VisualStudio.Text.Operations.ITextUndoTransaction.Description">
      <summary>설명을 가져오거나 설정합니다.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.Operations.ITextUndoTransaction.Do">
      <summary>실행 또는 다시 실행을 수행합니다.</summary>
    </member>
    <member name="P:Microsoft.VisualStudio.Text.Operations.ITextUndoTransaction.History">
      <summary>이 트랜잭션이 들어 있는 <see cref="T:Microsoft.VisualStudio.Text.Operations.ITextUndoHistory" />를 가져옵니다.</summary>
    </member>
    <member name="P:Microsoft.VisualStudio.Text.Operations.ITextUndoTransaction.MergePolicy">
      <summary>이 트랜잭션과 관련된 <see cref="T:Microsoft.VisualStudio.Text.Operations.IMergeTextUndoTransactionPolicy" />를 가져옵니다.</summary>
    </member>
    <member name="P:Microsoft.VisualStudio.Text.Operations.ITextUndoTransaction.Parent">
      <summary>이 트랜잭션이 들어 있는 <see cref="T:Microsoft.VisualStudio.Text.Operations.ITextUndoTransaction" />을 가져옵니다.</summary>
    </member>
    <member name="P:Microsoft.VisualStudio.Text.Operations.ITextUndoTransaction.State">
      <summary>
        <see cref="T:Microsoft.VisualStudio.Text.Operations.ITextUndoTransaction" />의 <see cref="T:Microsoft.VisualStudio.Text.Operations.UndoTransactionState" />를 가져옵니다.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.Operations.ITextUndoTransaction.Undo">
      <summary>롤백 또는 실행 취소를 수행합니다.</summary>
    </member>
    <member name="P:Microsoft.VisualStudio.Text.Operations.ITextUndoTransaction.UndoPrimitives">
      <summary>이 컨테이너에 있는 <see cref="T:Microsoft.VisualStudio.Text.Operations.ITextUndoPrimitive" /> 개체의 컬렉션을 가져옵니다.</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.Text.Operations.TextExtent">
      <summary>단어의 범위를 나타냅니다.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.Operations.TextExtent.#ctor(Microsoft.VisualStudio.Text.Operations.TextExtent)">
      <summary>지정된 <see cref="T:Microsoft.VisualStudio.Text.Operations.TextExtent" />에서 <see cref="T:Microsoft.VisualStudio.Text.Operations.TextExtent" />의 새 인스턴스를 초기화합니다.</summary>
      <param name="textExtent">복사할 원본 <see cref="T:Microsoft.VisualStudio.Text.Operations.TextExtent" />입니다.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.Operations.TextExtent.#ctor(Microsoft.VisualStudio.Text.SnapshotSpan,System.Boolean)">
      <summary>
        <see cref="T:Microsoft.VisualStudio.Text.Operations.TextExtent" />의 새 인스턴스를 초기화합니다.</summary>
      <param name="span">범위를 포함하는 <see cref="T:Microsoft.VisualStudio.Text.SnapshotSpan" />입니다.</param>
      <param name="isSignificant">
                공백을 다른 문자처럼 취급하지 않는 경우 범위에 공백이 있으면 false입니다.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.Operations.TextExtent.Equals(System.Object)">
      <summary>두 <see cref="T:Microsoft.VisualStudio.Text.Operations.TextExtent" /> 개체가 같은지 여부를 확인합니다.</summary>
      <returns>
            두 개체가 같으면 true이고, 그렇지 않으면 false입니다.</returns>
      <param name="obj">비교할 <see cref="T:Microsoft.VisualStudio.Text.Operations.TextExtent" />입니다.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.Operations.TextExtent.GetHashCode">
      <summary>개체의 해시 코드를 가져옵니다.</summary>
      <returns>해시 코드입니다.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.Text.Operations.TextExtent.IsSignificant">
      <summary>범위가 중요한지 여부를 확인합니다. 공백 또는 탐색 중에 무시할 중요하지 않은 다른 문자의 경우 false입니다.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.Operations.TextExtent.op_Equality(Microsoft.VisualStudio.Text.Operations.TextExtent,Microsoft.VisualStudio.Text.Operations.TextExtent)">
      <summary>두 <see cref="T:Microsoft.VisualStudio.Text.Operations.TextExtent" /> 개체가 같은지 여부를 확인합니다.</summary>
      <returns>
            두 개체가 같으면 true이고, 그렇지 않으면 false입니다.</returns>
      <param name="extent1">첫 번째 개체입니다.</param>
      <param name="extent2">두 번째 개체입니다.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.Operations.TextExtent.op_Inequality(Microsoft.VisualStudio.Text.Operations.TextExtent,Microsoft.VisualStudio.Text.Operations.TextExtent)">
      <summary>두 <see cref="T:Microsoft.VisualStudio.Text.Operations.TextExtent" /> 개체가 다른지 여부를 확인합니다.</summary>
      <returns>
            두 개체가 다르면 true이고, 그렇지 않으면 false입니다.</returns>
      <param name="extent1">첫 번째 개체입니다.</param>
      <param name="extent2">두 번째 개체입니다.</param>
    </member>
    <member name="P:Microsoft.VisualStudio.Text.Operations.TextExtent.Span">
      <summary>
        <see cref="T:Microsoft.VisualStudio.Text.SnapshotSpan" />을 가져옵니다.</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.Text.Operations.TextUndoHistoryState">
      <summary>
        <see cref="T:Microsoft.VisualStudio.Text.Operations.ITextUndoHistory" />에 대한 정보를 제공합니다.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Text.Operations.TextUndoHistoryState.Idle">
      <summary>
        <see cref="T:Microsoft.VisualStudio.Text.Operations.ITextUndoHistory" />가 실행 취소 또는 다시 실행을 수행 중이지 않습니다.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Text.Operations.TextUndoHistoryState.Undoing">
      <summary>
        <see cref="T:Microsoft.VisualStudio.Text.Operations.ITextUndoHistory" />가 Undo 메서드를 실행 중입니다.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Text.Operations.TextUndoHistoryState.Redoing">
      <summary>
        <see cref="T:Microsoft.VisualStudio.Text.Operations.ITextUndoHistory" />가 Redo 메서드를 실행 중입니다.</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.Text.Operations.TextUndoRedoEventArgs">
      <summary>실행 취소 또는 다시 실행 작업의 효과와 관련하여 <see cref="T:Microsoft.VisualStudio.Text.Operations.ITextUndoHistory" />에 의해 발생하는 UndoRedoHappened 이벤트에 대한 정보를 제공합니다.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.Operations.TextUndoRedoEventArgs.#ctor(Microsoft.VisualStudio.Text.Operations.TextUndoHistoryState,Microsoft.VisualStudio.Text.Operations.ITextUndoTransaction)">
      <summary>
        <see cref="T:Microsoft.VisualStudio.Text.Operations.TextUndoRedoEventArgs" />의 새 인스턴스를 초기화합니다.</summary>
      <param name="state">
        <see cref="T:Microsoft.VisualStudio.Text.Operations.TextUndoHistoryState" />입니다.</param>
      <param name="transaction">
        <see cref="T:Microsoft.VisualStudio.Text.Operations.ITextUndoTransaction" />입니다.</param>
    </member>
    <member name="P:Microsoft.VisualStudio.Text.Operations.TextUndoRedoEventArgs.State">
      <summary>트랜잭션 상태를 가져옵니다.</summary>
    </member>
    <member name="P:Microsoft.VisualStudio.Text.Operations.TextUndoRedoEventArgs.Transaction">
      <summary>이 실행 취소 또는 다시 실행에서 처리된 트랜잭션을 가져옵니다.</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.Text.Operations.TextUndoTransactionCompletedEventArgs">
      <summary>
        <see cref="T:Microsoft.VisualStudio.Text.Operations.ITextUndoHistory" />에 의해 발생하는 <see cref="E:Microsoft.VisualStudio.Text.Operations.ITextUndoHistory.UndoTransactionCompleted" /> 이벤트에 대한 정보를 제공합니다.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.Operations.TextUndoTransactionCompletedEventArgs.#ctor(Microsoft.VisualStudio.Text.Operations.ITextUndoTransaction,Microsoft.VisualStudio.Text.Operations.TextUndoTransactionCompletionResult)"></member>
    <member name="P:Microsoft.VisualStudio.Text.Operations.TextUndoTransactionCompletedEventArgs.Result">
      <summary>완료된 트랜잭션의 결과를 가져옵니다.</summary>
    </member>
    <member name="P:Microsoft.VisualStudio.Text.Operations.TextUndoTransactionCompletedEventArgs.Transaction">
      <summary>
        <see cref="T:Microsoft.VisualStudio.Text.Operations.ITextUndoHistory" />에 추가된 트랜잭션을 가져옵니다.</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.Text.Operations.TextUndoTransactionCompletionResult">
      <summary>
        <see cref="T:Microsoft.VisualStudio.Text.Operations.ITextUndoHistory" />에 대한 트랜잭션을 완료할 경우의 가능한 결과를 설명합니다.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Text.Operations.TextUndoTransactionCompletionResult.TransactionAdded">
      <summary>최신 트랜잭션을 <see cref="T:Microsoft.VisualStudio.Text.Operations.ITextUndoHistory" />의 <see cref="P:Microsoft.VisualStudio.Text.Operations.ITextUndoHistory.UndoStack" />에 추가합니다.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Text.Operations.TextUndoTransactionCompletionResult.TransactionMerged">
      <summary>최신 트랜잭션을 관련된 <see cref="T:Microsoft.VisualStudio.Text.Operations.ITextUndoHistory" />의 <see cref="P:Microsoft.VisualStudio.Text.Operations.ITextUndoHistory.UndoStack" /> 맨 위에 있는 트랜잭션과 병합합니다.</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.Text.Operations.UndoTransactionState">
      <summary>트랜잭션 상태를 보유합니다.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Text.Operations.UndoTransactionState.Open">
      <summary>트랜잭션이 만들어진 후 취소 또는 완료되기 전 트랜잭션의 초기 상태를 나타냅니다.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Text.Operations.UndoTransactionState.Completed">
      <summary>트랜잭션이 더 이상 정의되어 있지 않고 실행 취소 가능함을 나타냅니다.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Text.Operations.UndoTransactionState.Canceled">
      <summary>트랜잭션이 더 이상 정의되어 있지 않고 중단되었거나 지워졌음을 나타냅니다.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Text.Operations.UndoTransactionState.Redoing">
      <summary>Do()에 의해 설정된 실행 취소된 상태와 완료된 상태 사이의 임시 상태를 나타냅니다.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Text.Operations.UndoTransactionState.Undoing">
      <summary>Undo()에 의해 설정된 완료된 상태와 실행 취소된 상태 사이의 임시 상태를 나타냅니다.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Text.Operations.UndoTransactionState.Undone">
      <summary>완료 후 Undo()가 호출되었음을 나타냅니다.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Text.Operations.UndoTransactionState.Invalid">
      <summary>트랜잭션이 실행 취소 기록 스택에서 제거되었음을 나타냅니다. 예를 들어 새 작업에서 다시 실행 스택을 지웠을 때 트랜잭션이 다시 실행 스택에 있었을 수 있습니다. 트랜잭션이 무효화되면 사용되지 않아야 합니다.</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.Text.Tagging.BatchedTagsChangedEventArgs"></member>
    <member name="M:Microsoft.VisualStudio.Text.Tagging.BatchedTagsChangedEventArgs.#ctor(System.Collections.Generic.IList{Microsoft.VisualStudio.Text.IMappingSpan})"></member>
    <member name="P:Microsoft.VisualStudio.Text.Tagging.BatchedTagsChangedEventArgs.Spans"></member>
    <member name="T:Microsoft.VisualStudio.Text.Tagging.ClassificationTag">
      <summary>분류 형식을 나타내는 태그입니다.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.Tagging.ClassificationTag.#ctor(Microsoft.VisualStudio.Text.Classification.IClassificationType)">
      <summary>지정된 분류 형식과 연결되는 새 태그를 만듭니다.</summary>
      <param name="type">분류의 형식입니다.</param>
      <exception cref="T:System.ArgumentNullException">If the type is passed in as null</exception>
    </member>
    <member name="P:Microsoft.VisualStudio.Text.Tagging.ClassificationTag.ClassificationType">
      <summary>이 태그와 연결된 분류 형식입니다.</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.Text.Tagging.IBufferTagAggregatorFactoryService">
      <summary>
        <see cref="T:Microsoft.VisualStudio.Text.ITextBuffer" />의 <see cref="T:Microsoft.VisualStudio.Text.Tagging.ITagAggregator`1" />를 만드는 팩터리입니다.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.Tagging.IBufferTagAggregatorFactoryService.CreateTagAggregator``1(Microsoft.VisualStudio.Text.ITextBuffer)">
      <summary>
        <paramref name="textBuffer" />의 태그 집계를 만듭니다.</summary>
      <returns>
        <paramref name="textBuffer" />의 태그 집계입니다.</returns>
      <param name="textBuffer">버퍼가 프로젝션 버퍼인 경우 모든 소스 버퍼를 비롯하여 집계에서 태그를 집계할 <see cref="T:Microsoft.VisualStudio.Text.ITextBuffer" />입니다.</param>
      <typeparam name="T">집계할 태그 형식입니다.</typeparam>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.Tagging.IBufferTagAggregatorFactoryService.CreateTagAggregator``1(Microsoft.VisualStudio.Text.ITextBuffer,Microsoft.VisualStudio.Text.Tagging.TagAggregatorOptions)">
      <summary>지정된 옵션을 사용하여 <paramref name="textBuffer" />의 태그 집계를 만듭니다.</summary>
      <returns>
        <paramref name="textBuffer" />의 태그 집계입니다.</returns>
      <param name="textBuffer">버퍼가 프로젝션 버퍼인 경우 모든 소스 버퍼를 비롯하여 집계에서 태그를 집계할 <see cref="T:Microsoft.VisualStudio.Text.ITextBuffer" />입니다.</param>
      <param name="options">새로 만드는 집계에 사용할 옵션입니다.</param>
      <typeparam name="T">집계할 태그 형식입니다.</typeparam>
    </member>
    <member name="T:Microsoft.VisualStudio.Text.Tagging.IMappingTagSpan`1">
      <summary>
        <see cref="T:Microsoft.VisualStudio.Text.Tagging.ITag" />를 지정된 <see cref="T:Microsoft.VisualStudio.Text.IMappingSpan" />과 연결합니다.</summary>
      <typeparam name="T">
        <see cref="T:Microsoft.VisualStudio.Text.Tagging.ITag" />의 하위 형식이 되어야 하는 형식입니다.</typeparam>
    </member>
    <member name="P:Microsoft.VisualStudio.Text.Tagging.IMappingTagSpan`1.Span">
      <summary>이 태그의 매핑 범위를 가져옵니다.</summary>
    </member>
    <member name="P:Microsoft.VisualStudio.Text.Tagging.IMappingTagSpan`1.Tag">
      <summary>이 범위에 있는 태그를 가져옵니다.</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.Text.Tagging.ITag">
      <summary>모든 태그의 기본 인터페이스입니다.</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.Text.Tagging.ITagAggregator`1">
      <summary>버퍼 그래프에서 지정된 태그 형식의 모든 태그 공급자를 집계합니다.</summary>
      <typeparam name="T">집계에서 반환하는 태그의 형식입니다.</typeparam>
    </member>
    <member name="E:Microsoft.VisualStudio.Text.Tagging.ITagAggregator`1.BatchedTagsChanged"></member>
    <member name="P:Microsoft.VisualStudio.Text.Tagging.ITagAggregator`1.BufferGraph">
      <summary>이 집계가 작동하는 버퍼 그래프입니다.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.Tagging.ITagAggregator`1.GetTags(Microsoft.VisualStudio.Text.IMappingSpan)">
      <summary>집계 형식의 지정된 <paramref name="span" />에 중첩되거나 포함되는 태그를 모두 가져옵니다.</summary>
      <returns>영역과 중첩되는 모든 태그입니다.</returns>
      <param name="span">검색할 범위입니다.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.Tagging.ITagAggregator`1.GetTags(Microsoft.VisualStudio.Text.NormalizedSnapshotSpanCollection)">
      <summary>집계 형식의 지정된 <paramref name="snapshotSpans" />에 중첩되거나 포함되는 태그를 모두 가져옵니다.</summary>
      <returns>영역과 중첩되는 모든 태그입니다.</returns>
      <param name="snapshotSpans">검색할 범위입니다.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.Tagging.ITagAggregator`1.GetTags(Microsoft.VisualStudio.Text.SnapshotSpan)">
      <summary>집계와 동일한 형식의 지정된 <paramref name="span" />에 중첩되거나 포함되는 태그를 모두 가져옵니다.</summary>
      <returns>영역과 중첩되는 모든 태그입니다.</returns>
      <param name="span">검색할 범위입니다.</param>
    </member>
    <member name="E:Microsoft.VisualStudio.Text.Tagging.ITagAggregator`1.TagsChanged">
      <summary>공급자에서 태그가 추가되거나 제거될 때 발생합니다.</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.Text.Tagging.ITagger`1">
      <summary>버퍼에 대한 태그 공급자입니다.</summary>
      <typeparam name="T">생성할 태그 형식입니다.</typeparam>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.Tagging.ITagger`1.GetTags(Microsoft.VisualStudio.Text.NormalizedSnapshotSpanCollection)">
      <summary>
        <paramref name="spans" />와 중첩되는 태그를 모두 가져옵니다.</summary>
      <returns>각 태그의 <see cref="T:Microsoft.VisualStudio.Text.Tagging.TagSpan`1" />입니다.</returns>
      <param name="spans">방문할 범위입니다.</param>
    </member>
    <member name="E:Microsoft.VisualStudio.Text.Tagging.ITagger`1.TagsChanged">
      <summary>공급자에서 태그가 추가되거나 제거될 때 발생합니다.</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.Text.Tagging.ITaggerProvider">
      <summary>지정된 버퍼의 <see cref="T:Microsoft.VisualStudio.Text.Tagging.ITagger`1" />를 만듭니다.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.Tagging.ITaggerProvider.CreateTagger``1(Microsoft.VisualStudio.Text.ITextBuffer)">
      <summary>지정된 버퍼의 태그 공급자를 만듭니다.</summary>
      <returns>
        <see cref="T:Microsoft.VisualStudio.Text.Tagging.ITagger`1" />입니다.</returns>
      <param name="buffer">
        <see cref="T:Microsoft.VisualStudio.Text.ITextBuffer" />입니다.</param>
      <typeparam name="T">태그의 형식입니다.</typeparam>
    </member>
    <member name="T:Microsoft.VisualStudio.Text.Tagging.ITagSpan`1">
      <summary>
        <see cref="T:Microsoft.VisualStudio.Text.Tagging.ITag" />를 지정된 <see cref="T:Microsoft.VisualStudio.Text.SnapshotSpan" />과 연결합니다.</summary>
      <typeparam name="T">
        <see cref="T:Microsoft.VisualStudio.Text.Tagging.ITag" />의 서브클래스가 되어야 하는 형식입니다.</typeparam>
    </member>
    <member name="P:Microsoft.VisualStudio.Text.Tagging.ITagSpan`1.Span">
      <summary>이 태그의 스냅숏 범위를 가져옵니다.</summary>
    </member>
    <member name="P:Microsoft.VisualStudio.Text.Tagging.ITagSpan`1.Tag">
      <summary>이 범위에 있는 태그를 가져옵니다.</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.Text.Tagging.IUrlTag">
      <summary>URL을 나타내는 태그입니다.</summary>
    </member>
    <member name="P:Microsoft.VisualStudio.Text.Tagging.IUrlTag.Url">
      <summary>URL입니다.</summary>
      <returns>URL입니다.</returns>
    </member>
    <member name="T:Microsoft.VisualStudio.Text.Tagging.MappingTagSpan`1">
      <summary>
        <see cref="T:Microsoft.VisualStudio.Text.Tagging.ITag" />를 지정된 <see cref="T:Microsoft.VisualStudio.Text.IMappingSpan" />과 연결합니다. </summary>
      <typeparam name="T">
        <see cref="T:Microsoft.VisualStudio.Text.Tagging.ITag" />의 하위 형식이 되어야 하는 형식입니다.</typeparam>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.Tagging.MappingTagSpan`1.#ctor(Microsoft.VisualStudio.Text.IMappingSpan,`0)">
      <summary>매핑 태그 범위를 만듭니다.</summary>
      <param name="span">태그와 연결할 매핑 범위입니다.</param>
      <param name="tag">범위와 연결되는 태그입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="span" /> or <paramref name="tag" /> is null.</exception>
    </member>
    <member name="P:Microsoft.VisualStudio.Text.Tagging.MappingTagSpan`1.Span">
      <summary>이 태그의 매핑 범위를 가져옵니다.</summary>
    </member>
    <member name="P:Microsoft.VisualStudio.Text.Tagging.MappingTagSpan`1.Tag">
      <summary>이 범위에 있는 태그를 가져옵니다.</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.Text.Tagging.SimpleTagger`1">
      <summary>지정된 형식의 태그에 대한 스레드로부터 안전한 간단한 저장소 및 이러한 태그와의 상호 작용을 제공합니다.</summary>
      <typeparam name="T">
        <see cref="T:Microsoft.VisualStudio.Text.Tagging.ITag" />의 하위 형식이 되어야 하는 형식입니다.</typeparam>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.Tagging.SimpleTagger`1.#ctor(Microsoft.VisualStudio.Text.ITextBuffer)">
      <summary>지정된 버퍼에 대해 <see cref="T:Microsoft.VisualStudio.Text.Tagging.SimpleTagger`1" />의 새 인스턴스를 초기화합니다.</summary>
      <param name="buffer">태그가 지정될 제목 버퍼입니다.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.Tagging.SimpleTagger`1.CreateTagSpan(Microsoft.VisualStudio.Text.ITrackingSpan,`0)">
      <summary>지정된 범위에 대해 태그를 추가합니다.</summary>
      <returns>추가된 <see cref="T:Microsoft.VisualStudio.Text.Tagging.TrackingTagSpan`1" />입니다. 이 값은 나중에 태그를 제거하는 데 사용할 수 있습니다.</returns>
      <param name="span">텍스트 버전 전체에서 태그를 추적하는 <see cref="T:Microsoft.VisualStudio.Text.ITrackingSpan" />입니다.</param>
      <param name="tag">지정된 범위와 연결할 태그입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="span" /> or <paramref name="tag" /> is null.</exception>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.Tagging.SimpleTagger`1.GetTaggedSpans(Microsoft.VisualStudio.Text.SnapshotSpan)">
      <summary>지정된 <see cref="T:Microsoft.VisualStudio.Text.SnapshotSpan" />과 교차하는 태그가 지정된 범위를 가져옵니다.</summary>
      <returns>순서대로 지정된 범위와 교차하는 <see cref="T:Microsoft.VisualStudio.Text.Tagging.TrackingTagSpan`1" /> 개체의 집합입니다.</returns>
      <param name="span">사용할 <see cref="T:Microsoft.VisualStudio.Text.SnapshotSpan" />입니다.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.Tagging.SimpleTagger`1.GetTags(Microsoft.VisualStudio.Text.NormalizedSnapshotSpanCollection)">
      <summary>해당 형식의 지정된 스냅숏에서 범위와 중첩되는 태그를 모두 가져옵니다.</summary>
      <returns>각 태그의 <see cref="T:Microsoft.VisualStudio.Text.Tagging.ITagSpan`1" />입니다.</returns>
      <param name="spans">방문할 범위입니다.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.Tagging.SimpleTagger`1.RemoveTagSpan(Microsoft.VisualStudio.Text.Tagging.TrackingTagSpan{`0})">
      <summary>
        <see cref="M:Microsoft.VisualStudio.Text.Tagging.SimpleTagger`1.CreateTagSpan(Microsoft.VisualStudio.Text.ITrackingSpan,`0)" />을 호출하여 만들어진 태그 범위를 제거합니다.</summary>
      <returns>
            성공적으로 제거되면 true이고, 그렇지 않으면 false입니다.</returns>
      <param name="tagSpan">이전 <see cref="M:Microsoft.VisualStudio.Text.Tagging.SimpleTagger`1.CreateTagSpan(Microsoft.VisualStudio.Text.ITrackingSpan,`0)" /> 호출에서 반환된 <see cref="T:Microsoft.VisualStudio.Text.Tagging.TrackingTagSpan`1" />입니다.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.Tagging.SimpleTagger`1.RemoveTagSpans(System.Predicate{Microsoft.VisualStudio.Text.Tagging.TrackingTagSpan{`0}})">
      <summary>조건자에 지정된 조건과 일치하는 태그 범위를 모두 제거합니다.</summary>
      <returns>제거된 태그 범위의 수입니다.</returns>
      <param name="match">일치 조건을 정의하는 <see cref="T:System.Predicate`1" />입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="match" /> is null.</exception>
    </member>
    <member name="E:Microsoft.VisualStudio.Text.Tagging.SimpleTagger`1.TagsChanged">
      <summary>하나 이상의 태그가 추가 또는 제거된 경우 발생합니다.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.Tagging.SimpleTagger`1.Update">
      <summary>업데이트 배치를 나타내는 IDisposible 개체를 가져옵니다.</summary>
      <returns>업데이트 배치를 나타내는 IDisposible 개체입니다.</returns>
    </member>
    <member name="T:Microsoft.VisualStudio.Text.Tagging.TagAggregatorOptions">
      <summary>태그 집계를 위한 옵션 집합을 나타냅니다.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Text.Tagging.TagAggregatorOptions.None">
      <summary>모든 프로젝션 버퍼를 매핑합니다.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Text.Tagging.TagAggregatorOptions.MapByContentType">
      <summary>콘텐츠 형식이 "프로젝션"인 프로젝션 버퍼만 매핑합니다. 분류에 콘텐츠 형식이 사용되므로 분류자 집계에서 사용됩니다.</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.Text.Tagging.TagsChangedEventArgs">
      <summary>
        <see cref="T:Microsoft.VisualStudio.Text.Tagging.ITagAggregator`1" />.TagsChanged 이벤트에 대한 정보를 제공합니다.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.Tagging.TagsChangedEventArgs.#ctor(Microsoft.VisualStudio.Text.IMappingSpan)">
      <summary>지정된 <see cref="T:Microsoft.VisualStudio.Text.IMappingSpan" />을 사용하여 <see cref="T:Microsoft.VisualStudio.Text.Tagging.TagsChangedEventArgs" />의 새 인스턴스를 초기화합니다.</summary>
      <param name="span">
        <see cref="T:Microsoft.VisualStudio.Text.IMappingSpan" />입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="span" /> is null.</exception>
    </member>
    <member name="P:Microsoft.VisualStudio.Text.Tagging.TagsChangedEventArgs.Span">
      <summary>태그가 변경된 범위를 가져옵니다.</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.Text.Tagging.TagSpan`1">
      <summary>
        <see cref="T:Microsoft.VisualStudio.Text.Tagging.ITag" />를 지정된 <see cref="T:Microsoft.VisualStudio.Text.SnapshotSpan" />과 연결합니다.</summary>
      <typeparam name="T">
        <see cref="T:Microsoft.VisualStudio.Text.Tagging.ITag" />의 서브클래스가 되어야 하는 형식입니다.</typeparam>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.Tagging.TagSpan`1.#ctor(Microsoft.VisualStudio.Text.SnapshotSpan,`0)">
      <summary>지정된 스냅숏 범위 및 태그를 사용하여 <see cref="T:Microsoft.VisualStudio.Text.Tagging.TagSpan`1" />의 새 인스턴스를 초기화합니다.</summary>
      <param name="span">태그와 연결할 <see cref="T:Microsoft.VisualStudio.Text.SnapshotSpan" />입니다.</param>
      <param name="tag">범위와 연결되는 태그입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="tag" /> is null.</exception>
    </member>
    <member name="P:Microsoft.VisualStudio.Text.Tagging.TagSpan`1.Span">
      <summary>이 태그의 스냅숏 범위를 가져옵니다.</summary>
    </member>
    <member name="P:Microsoft.VisualStudio.Text.Tagging.TagSpan`1.Tag">
      <summary>이 범위에 있는 태그를 가져옵니다.</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.Text.Tagging.TagTypeAttribute">
      <summary>
        <see cref="T:Microsoft.VisualStudio.Text.Tagging.ITagger`1" />가 생성하는 태그의 형식을 선언합니다. 이 특성은 태거의 공급자에 배치됩니다.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.Tagging.TagTypeAttribute.#ctor(System.Type)">
      <summary>
        <see cref="T:Microsoft.VisualStudio.Text.Tagging.TagTypeAttribute" />의 새 인스턴스를 초기화합니다.</summary>
      <param name="tagType">
        <see cref="T:Microsoft.VisualStudio.Text.Tagging.ITag" />에서 파생되어야 하는 태그 형식입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="tagType" /> is null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="tagType" /> does not derive from <see cref="T:Microsoft.VisualStudio.Text.Tagging.ITag" />.</exception>
    </member>
    <member name="P:Microsoft.VisualStudio.Text.Tagging.TagTypeAttribute.TagTypes">
      <summary>태그의 형식을 가져옵니다.</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.Text.Tagging.TrackingTagSpan`1">
      <summary>
        <see cref="T:Microsoft.VisualStudio.Text.Tagging.ITag" />를 지정된 <see cref="T:Microsoft.VisualStudio.Text.ITrackingSpan" />과 연결합니다. 태그 범위에 대한 버퍼 수준 추적 및 캐싱을 제공하기 위해 SimpleTagger에서 사용됩니다.</summary>
      <typeparam name="T">
        <see cref="T:Microsoft.VisualStudio.Text.Tagging.ITag" />의 서브클래스가 되어야 하는 형식입니다.</typeparam>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.Tagging.TrackingTagSpan`1.#ctor(Microsoft.VisualStudio.Text.ITrackingSpan,`0)">
      <summary>
        <see cref="T:Microsoft.VisualStudio.Text.Tagging.TrackingTagSpan`1" />의 새 인스턴스를 초기화합니다.</summary>
      <param name="span">태그와 연결할 추적 범위입니다.</param>
      <param name="tag">범위와 연결되는 태그입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="span" /> or <paramref name="tag" /> is null.</exception>
    </member>
    <member name="P:Microsoft.VisualStudio.Text.Tagging.TrackingTagSpan`1.Span">
      <summary>이 태그의 추적 범위입니다.</summary>
    </member>
    <member name="P:Microsoft.VisualStudio.Text.Tagging.TrackingTagSpan`1.Tag">
      <summary>이 범위에 있는 태그입니다.</summary>
    </member>
  </members>
</doc>