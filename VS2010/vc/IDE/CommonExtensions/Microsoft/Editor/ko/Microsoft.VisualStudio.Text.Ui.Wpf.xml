<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>Microsoft.VisualStudio.Text.UI.Wpf</name>
  </assembly>
  <members>
    <member name="T:Microsoft.VisualStudio.Text.Classification.ClassificationFormatDefinition">
      <summary>특정 분류 형식에 대한 분류 서식 정보를 제공합니다.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.Classification.ClassificationFormatDefinition.#ctor">
      <summary>
        <see cref="T:Microsoft.VisualStudio.Text.Classification.ClassificationFormatDefinition" />의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="P:Microsoft.VisualStudio.Text.Classification.ClassificationFormatDefinition.BackgroundOpacity">
      <summary>배경의 불투명도를 가져오거나 설정합니다.</summary>
      <returns>불투명도입니다.</returns>
    </member>
    <member name="F:Microsoft.VisualStudio.Text.Classification.ClassificationFormatDefinition.BackgroundOpacityId">
      <summary>
        <see cref="T:System.Windows.ResourceDictionary" />에서 배경 불투명도 값을 찾는 데 사용되는 문자열을 정의합니다.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.Classification.ClassificationFormatDefinition.CreateResourceDictionaryFromDefinition">
      <summary>이 정의를 사용하여 <see cref="T:System.Windows.ResourceDictionary" />를 만듭니다.</summary>
      <returns>이 정의에 있는 값을 가진 <see cref="T:System.Windows.ResourceDictionary" />입니다.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.Text.Classification.ClassificationFormatDefinition.CultureInfo">
      <summary>이 분류 서식에 대한 <see cref="P:Microsoft.VisualStudio.Text.Classification.ClassificationFormatDefinition.CultureInfo" />를 가져오거나 설정합니다.</summary>
      <returns>
        <see cref="P:Microsoft.VisualStudio.Text.Classification.ClassificationFormatDefinition.CultureInfo" />입니다.</returns>
    </member>
    <member name="F:Microsoft.VisualStudio.Text.Classification.ClassificationFormatDefinition.CultureInfoId"></member>
    <member name="P:Microsoft.VisualStudio.Text.Classification.ClassificationFormatDefinition.FontHintingSize">
      <summary>이 분류 서식에 대한 글꼴 힌트 크기를 가져오거나 설정합니다.</summary>
      <returns>글꼴입니다.</returns>
    </member>
    <member name="F:Microsoft.VisualStudio.Text.Classification.ClassificationFormatDefinition.FontHintingSizeId">
      <summary>
        <see cref="T:System.Windows.ResourceDictionary" />에서 글꼴 힌트 크기 값을 찾는 데 사용되는 문자열을 정의합니다.</summary>
    </member>
    <member name="P:Microsoft.VisualStudio.Text.Classification.ClassificationFormatDefinition.FontRenderingSize">
      <summary>이 분류 서식의 글꼴 렌더링 크기를 가져오거나 설정합니다.</summary>
      <returns>렌더링 크기입니다.</returns>
    </member>
    <member name="F:Microsoft.VisualStudio.Text.Classification.ClassificationFormatDefinition.FontRenderingSizeId">
      <summary>
        <see cref="T:System.Windows.ResourceDictionary" />에서 글꼴 렌더링 크기 값을 찾는 데 사용되는 문자열을 정의합니다.</summary>
    </member>
    <member name="P:Microsoft.VisualStudio.Text.Classification.ClassificationFormatDefinition.FontTypeface">
      <summary>이 분류 서식에 대한 <see cref="T:System.Windows.Media.Typeface" />를 가져오거나 설정합니다.</summary>
      <returns>서체입니다.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.Text.Classification.ClassificationFormatDefinition.ForegroundOpacity">
      <summary>전경의 불투명도를 가져오거나 설정합니다.</summary>
      <returns>전경 불투명도입니다.</returns>
    </member>
    <member name="F:Microsoft.VisualStudio.Text.Classification.ClassificationFormatDefinition.ForegroundOpacityId">
      <summary>
        <see cref="T:System.Windows.ResourceDictionary" />에서 전경 불투명도 값을 찾는 데 사용되는 문자열을 정의합니다.</summary>
    </member>
    <member name="P:Microsoft.VisualStudio.Text.Classification.ClassificationFormatDefinition.IsBold">
      <summary>텍스트가 굵게 표시되는지 여부를 확인합니다.</summary>
      <returns>텍스트가 굵게 표시되면 true이고, 그렇지 않으면 false입니다.</returns>
    </member>
    <member name="F:Microsoft.VisualStudio.Text.Classification.ClassificationFormatDefinition.IsBoldId">
      <summary>
        <see cref="T:System.Windows.ResourceDictionary" />에서 굵기 값을 찾는 데 사용되는 문자열을 정의합니다.</summary>
    </member>
    <member name="P:Microsoft.VisualStudio.Text.Classification.ClassificationFormatDefinition.IsItalic">
      <summary>텍스트가 기울임꼴로 표시되는지 여부를 확인합니다.</summary>
      <returns>텍스트가 기울임꼴로 표시되면 true이고, 그렇지 않으면 false입니다.</returns>
    </member>
    <member name="F:Microsoft.VisualStudio.Text.Classification.ClassificationFormatDefinition.IsItalicId">
      <summary>
        <see cref="T:System.Windows.ResourceDictionary" />에서 기울임꼴 값을 찾는 데 사용되는 문자열을 정의합니다.</summary>
    </member>
    <member name="P:Microsoft.VisualStudio.Text.Classification.ClassificationFormatDefinition.TextDecorations">
      <summary>이 분류 서식에 대한 <see cref="T:System.Windows.TextDecorationCollection" />을 가져오거나 설정합니다.</summary>
      <returns>텍스트 장식입니다.</returns>
    </member>
    <member name="F:Microsoft.VisualStudio.Text.Classification.ClassificationFormatDefinition.TextDecorationsId">
      <summary>
        <see cref="T:System.Windows.ResourceDictionary" />에서 텍스트 장식 값을 찾는 데 사용되는 문자열을 정의합니다.</summary>
    </member>
    <member name="P:Microsoft.VisualStudio.Text.Classification.ClassificationFormatDefinition.TextEffects">
      <summary>이 분류 서식에 대한 <see cref="T:System.Windows.Media.TextEffectCollection" />을 가져오거나 설정합니다.</summary>
      <returns>텍스트 효과입니다.</returns>
    </member>
    <member name="F:Microsoft.VisualStudio.Text.Classification.ClassificationFormatDefinition.TextEffectsId">
      <summary>
        <see cref="T:System.Windows.ResourceDictionary" />에서 텍스트 효과 값을 찾는 데 사용되는 문자열을 정의합니다.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Text.Classification.ClassificationFormatDefinition.TypefaceId">
      <summary>
        <see cref="T:System.Windows.ResourceDictionary" />에서 서체 값을 찾는 데 사용되는 문자열을 정의합니다.</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.Text.Classification.EditorFormatDefinition">
      <summary>특정 항목에 대한 서식 정보를 제공합니다.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.Classification.EditorFormatDefinition.#ctor">
      <summary>
        <see cref="T:Microsoft.VisualStudio.Text.Classification.EditorFormatDefinition" />의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="P:Microsoft.VisualStudio.Text.Classification.EditorFormatDefinition.BackgroundBrush">
      <summary>이 항목에 대한 배경 브러시를 가져오거나 설정합니다.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Text.Classification.EditorFormatDefinition.BackgroundBrushId">
      <summary>
        <see cref="T:System.Windows.ResourceDictionary" />에서 배경 브러시 값을 찾는 데 사용되는 문자열을 정의합니다.</summary>
    </member>
    <member name="P:Microsoft.VisualStudio.Text.Classification.EditorFormatDefinition.BackgroundColor">
      <summary>이 항목에 대한 배경색을 가져오거나 설정합니다.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Text.Classification.EditorFormatDefinition.BackgroundColorId">
      <summary>
        <see cref="T:System.Windows.ResourceDictionary" />에서 배경색 값을 찾는 데 사용되는 문자열을 정의합니다.</summary>
    </member>
    <member name="P:Microsoft.VisualStudio.Text.Classification.EditorFormatDefinition.BackgroundCustomizable">
      <summary>이 서식의 배경을 사용자 지정할 수 있는지 여부를 확인합니다.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.Classification.EditorFormatDefinition.CreateResourceDictionary">
      <summary>이 정의로부터 <see cref="T:System.Windows.ResourceDictionary" />를 만듭니다.</summary>
      <returns>이 정의에 있는 값을 가진 <see cref="T:System.Windows.ResourceDictionary" />입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.Classification.EditorFormatDefinition.CreateResourceDictionaryFromDefinition">
      <summary>이 정의로부터 <see cref="T:System.Windows.ResourceDictionary" />를 만듭니다.</summary>
      <returns>이 정의에 있는 값을 가진 <see cref="T:System.Windows.ResourceDictionary" />입니다.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.Text.Classification.EditorFormatDefinition.DisplayName">
      <summary>이 서식 정의를 사용자에게 표시할 때 사용되는 문자열을 정의합니다. 이 속성은 이 개체의 내보내기에서 <see cref="T:Microsoft.VisualStudio.Text.Classification.UserVisibleAttribute" />가 true로 설정된 경우에만 사용됩니다.</summary>
      <returns>표시 문자열입니다.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.Text.Classification.EditorFormatDefinition.ForegroundBrush">
      <summary>이 항목에 대한 전경 브러시를 가져오거나 설정합니다.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Text.Classification.EditorFormatDefinition.ForegroundBrushId">
      <summary>
        <see cref="T:System.Windows.ResourceDictionary" />에서 전경 브러시 값을 찾는 데 사용되는 문자열을 정의합니다.</summary>
    </member>
    <member name="P:Microsoft.VisualStudio.Text.Classification.EditorFormatDefinition.ForegroundColor">
      <summary>이 항목에 대한 전경색을 가져오거나 설정합니다.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Text.Classification.EditorFormatDefinition.ForegroundColorId">
      <summary>
        <see cref="T:System.Windows.ResourceDictionary" />에서 전경색 값을 찾는 데 사용되는 문자열을 정의합니다.</summary>
    </member>
    <member name="P:Microsoft.VisualStudio.Text.Classification.EditorFormatDefinition.ForegroundCustomizable">
      <summary>이 서식의 전경을 사용자 지정할 수 있는지 여부를 확인합니다.</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.Text.Classification.FormatItemsEventArgs">
      <summary>TagsChanged 이벤트에 대한 정보를 제공합니다. 변경된 태그 범위를 매핑 범위로 반환합니다.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.Classification.FormatItemsEventArgs.#ctor(System.Collections.ObjectModel.ReadOnlyCollection{System.String})">
      <summary>
        <see cref="T:Microsoft.VisualStudio.Text.Classification.FormatItemsEventArgs" />의 새 인스턴스를 초기화합니다.</summary>
      <param name="items">변경된 항목의 컬렉션입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="items" /> is null.</exception>
    </member>
    <member name="P:Microsoft.VisualStudio.Text.Classification.FormatItemsEventArgs.ChangedItems">
      <summary>변경된 서식 지정 항목을 가져옵니다.</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.Text.Classification.IClassificationFormatMap">
      <summary>
        <see cref="T:Microsoft.VisualStudio.Text.Classification.IClassificationType" />에서 <see cref="T:Microsoft.VisualStudio.Text.Formatting.TextFormattingRunProperties" /> 개체로 매핑합니다.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.Classification.IClassificationFormatMap.AddExplicitTextProperties(Microsoft.VisualStudio.Text.Classification.IClassificationType,Microsoft.VisualStudio.Text.Formatting.TextFormattingRunProperties)"></member>
    <member name="M:Microsoft.VisualStudio.Text.Classification.IClassificationFormatMap.AddExplicitTextProperties(Microsoft.VisualStudio.Text.Classification.IClassificationType,Microsoft.VisualStudio.Text.Formatting.TextFormattingRunProperties,Microsoft.VisualStudio.Text.Classification.IClassificationType)"></member>
    <member name="M:Microsoft.VisualStudio.Text.Classification.IClassificationFormatMap.BeginBatchUpdate">
      <summary>이 <see cref="T:Microsoft.VisualStudio.Text.Classification.IClassificationFormatMap" />에 대한 일괄 업데이트를 시작합니다. <see cref="M:Microsoft.VisualStudio.Text.Classification.IClassificationFormatMap.EndBatchUpdate" />가 호출될 때까지 이벤트가 발생되지 않습니다.</summary>
      <exception cref="T:System.InvalidOperationException">
        <see cref="M:Microsoft.VisualStudio.Text.Classification.IClassificationFormatMap.BeginBatchUpdate" /> was called for a second time without calling <see cref="M:Microsoft.VisualStudio.Text.Classification.IClassificationFormatMap.EndBatchUpdate" />.</exception>
    </member>
    <member name="E:Microsoft.VisualStudio.Text.Classification.IClassificationFormatMap.ClassificationFormatMappingChanged">
      <summary>이 <see cref="T:Microsoft.VisualStudio.Text.Classification.IClassificationFormatMap" />이 변경될 경우 발생합니다.</summary>
    </member>
    <member name="P:Microsoft.VisualStudio.Text.Classification.IClassificationFormatMap.CurrentPriorityOrder">
      <summary>이 서식 맵에서 지원하는 <see cref="T:Microsoft.VisualStudio.Text.Classification.IClassificationType" /> 개체의 읽기 전용 목록을 우선 순위별로 정렬하여 가져옵니다.</summary>
    </member>
    <member name="P:Microsoft.VisualStudio.Text.Classification.IClassificationFormatMap.DefaultTextProperties"></member>
    <member name="M:Microsoft.VisualStudio.Text.Classification.IClassificationFormatMap.EndBatchUpdate">
      <summary>이 <see cref="T:Microsoft.VisualStudio.Text.Classification.IClassificationFormatMap" />에 대한 일괄 업데이트를 종료하고 일괄 업데이트 동안 변경이 이루어진 경우 이벤트를 발생시킵니다.</summary>
      <exception cref="T:System.InvalidOperationException">
        <see cref="M:Microsoft.VisualStudio.Text.Classification.IClassificationFormatMap.EndBatchUpdate" /> was called without calling <see cref="M:Microsoft.VisualStudio.Text.Classification.IClassificationFormatMap.BeginBatchUpdate" />.</exception>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.Classification.IClassificationFormatMap.GetExplicitTextProperties(Microsoft.VisualStudio.Text.Classification.IClassificationType)"></member>
    <member name="M:Microsoft.VisualStudio.Text.Classification.IClassificationFormatMap.GetTextProperties(Microsoft.VisualStudio.Text.Classification.IClassificationType)">
      <summary>지정된 텍스트 분류 형식에 대한 <see cref="T:Microsoft.VisualStudio.Text.Formatting.TextFormattingRunProperties" />를 가져옵니다.</summary>
      <returns>지정된 분류 형식의 병합된 텍스트 속성 집합을 나타내는 <see cref="T:Microsoft.VisualStudio.Text.Formatting.TextFormattingRunProperties" /> 개체입니다.</returns>
      <param name="classificationType">텍스트 속성을 병합할 <see cref="T:Microsoft.VisualStudio.Text.Classification.IClassificationType" />입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="classificationType" /> is null.</exception>
    </member>
    <member name="P:Microsoft.VisualStudio.Text.Classification.IClassificationFormatMap.IsInBatchUpdate">
      <summary>이 <see cref="T:Microsoft.VisualStudio.Text.Classification.IClassificationFormatMap" />이 일괄 업데이트를 수행하는 중인지 여부를 확인합니다.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.Classification.IClassificationFormatMap.SetExplicitTextProperties(Microsoft.VisualStudio.Text.Classification.IClassificationType,Microsoft.VisualStudio.Text.Formatting.TextFormattingRunProperties)"></member>
    <member name="M:Microsoft.VisualStudio.Text.Classification.IClassificationFormatMap.SetTextProperties(Microsoft.VisualStudio.Text.Classification.IClassificationType,Microsoft.VisualStudio.Text.Formatting.TextFormattingRunProperties)">
      <summary>
        <see cref="T:Microsoft.VisualStudio.Text.Classification.IClassificationType" />의 <see cref="T:Microsoft.VisualStudio.Text.Formatting.TextFormattingRunProperties" />를 설정합니다.</summary>
      <param name="classificationType">
        <see cref="T:Microsoft.VisualStudio.Text.Classification.IClassificationType" />입니다.</param>
      <param name="properties">새 속성입니다.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.Classification.IClassificationFormatMap.SwapPriorities(Microsoft.VisualStudio.Text.Classification.IClassificationType,Microsoft.VisualStudio.Text.Classification.IClassificationType)">
      <summary>두 <see cref="T:Microsoft.VisualStudio.Text.Classification.IClassificationType" /> 개체의 우선 순위를 서로 바꿉니다.</summary>
      <param name="firstType">첫 번째 형식입니다.</param>
      <param name="secondType">두 번째 형식입니다.</param>
    </member>
    <member name="T:Microsoft.VisualStudio.Text.Classification.IClassificationFormatMapService">
      <summary>지정된 뷰의 분류 서식 맵을 찾습니다.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.Classification.IClassificationFormatMapService.GetClassificationFormatMap(Microsoft.VisualStudio.Text.Editor.ITextView)">
      <summary>지정된 텍스트 뷰에 적합한 <see cref="T:Microsoft.VisualStudio.Text.Classification.IClassificationFormatMap" />을 가져옵니다. 이 개체는 여러 텍스트 뷰에서 공유될 수 있습니다.</summary>
      <returns>뷰의 <see cref="T:Microsoft.VisualStudio.Text.Classification.IClassificationFormatMap" />입니다.</returns>
      <param name="textView">뷰입니다.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.Classification.IClassificationFormatMapService.GetClassificationFormatMap(System.String)">
      <summary>지정된 모양 범주의 <see cref="T:Microsoft.VisualStudio.Text.Classification.IClassificationFormatMap" />을 가져옵니다.</summary>
      <returns>범주의 <see cref="T:Microsoft.VisualStudio.Text.Classification.IClassificationFormatMap" />입니다.</returns>
      <param name="category">모양 범주입니다.</param>
    </member>
    <member name="T:Microsoft.VisualStudio.Text.Classification.IEditorFormatMap">
      <summary>임의의 키에서 <see cref="T:System.Windows.ResourceDictionary" />로 매핑합니다.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.Classification.IEditorFormatMap.AddProperties(System.String,System.Windows.ResourceDictionary)">
      <summary>새 키에 대한 <see cref="T:System.Windows.ResourceDictionary" />를 추가합니다.</summary>
      <param name="key">키입니다.</param>
      <param name="properties">새 속성입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="key" /> is null or empty.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="key" /> already exists in the map.</exception>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.Classification.IEditorFormatMap.BeginBatchUpdate">
      <summary>이 <see cref="T:Microsoft.VisualStudio.Text.Classification.IEditorFormatMap" />에 대한 일괄 업데이트를 시작합니다. <see cref="M:Microsoft.VisualStudio.Text.Classification.IEditorFormatMap.EndBatchUpdate" />가 호출될 때까지 이벤트가 발생되지 않습니다.</summary>
      <exception cref="T:System.InvalidOperationException">
        <see cref="M:Microsoft.VisualStudio.Text.Classification.IEditorFormatMap.BeginBatchUpdate" /> was called for a second time without calling <see cref="M:Microsoft.VisualStudio.Text.Classification.IEditorFormatMap.EndBatchUpdate" />.</exception>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.Classification.IEditorFormatMap.EndBatchUpdate">
      <summary>이 <see cref="T:Microsoft.VisualStudio.Text.Classification.IEditorFormatMap" />에 대한 일괄 업데이트를 종료하고 일괄 업데이트 동안 변경이 이루어진 경우 이벤트를 발생시킵니다.</summary>
      <exception cref="T:System.InvalidOperationException">
        <see cref="M:Microsoft.VisualStudio.Text.Classification.IEditorFormatMap.EndBatchUpdate" /> was called without calling <see cref="M:Microsoft.VisualStudio.Text.Classification.IEditorFormatMap.BeginBatchUpdate" /> first.</exception>
    </member>
    <member name="E:Microsoft.VisualStudio.Text.Classification.IEditorFormatMap.FormatMappingChanged">
      <summary>이 <see cref="T:Microsoft.VisualStudio.Text.Classification.IEditorFormatMap" />이 변경될 경우 발생합니다.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.Classification.IEditorFormatMap.GetProperties(System.String)">
      <summary>지정된 키에 대한 <see cref="T:System.Windows.ResourceDictionary" />를 가져옵니다.</summary>
      <returns>제공된 <see cref="T:Microsoft.VisualStudio.Text.Classification.EditorFormatDefinition" />의 속성 정보 집합을 나타내는 <see cref="T:System.Windows.ResourceDictionary" /> 개체입니다.</returns>
      <param name="key">키입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="key" /> is empty or null.</exception>
    </member>
    <member name="P:Microsoft.VisualStudio.Text.Classification.IEditorFormatMap.IsInBatchUpdate">
      <summary>이 <see cref="T:Microsoft.VisualStudio.Text.Classification.IEditorFormatMap" />이 일괄 업데이트를 수행하는 중인지 여부를 확인합니다.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.Classification.IEditorFormatMap.SetProperties(System.String,System.Windows.ResourceDictionary)">
      <summary>키의 <see cref="T:System.Windows.ResourceDictionary" />를 설정합니다.</summary>
      <param name="key">키입니다.</param>
      <param name="properties">속성의 새 <see cref="T:System.Windows.ResourceDictionary" />입니다.</param>
    </member>
    <member name="T:Microsoft.VisualStudio.Text.Classification.IEditorFormatMapService">
      <summary>지정된 뷰 역할에 대한 서식 맵을 찾습니다.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.Classification.IEditorFormatMapService.GetEditorFormatMap(Microsoft.VisualStudio.Text.Editor.ITextView)">
      <summary>지정된 텍스트 뷰에 적합한 <see cref="T:Microsoft.VisualStudio.Text.Classification.IEditorFormatMap" />을 가져옵니다. 이 개체는 여러 텍스트 뷰에서 공유될 수 있습니다.</summary>
      <returns>텍스트 뷰에 대한 <see cref="T:Microsoft.VisualStudio.Text.Classification.IEditorFormatMap" />입니다.</returns>
      <param name="view">뷰입니다.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.Classification.IEditorFormatMapService.GetEditorFormatMap(System.String)">
      <summary>지정된 모양 범주에 대한 <see cref="T:Microsoft.VisualStudio.Text.Classification.IEditorFormatMap" />을 가져옵니다.</summary>
      <returns>범주에 대한 <see cref="T:Microsoft.VisualStudio.Text.Classification.IEditorFormatMap" />입니다.</returns>
      <param name="category">모양 범주입니다.</param>
    </member>
    <member name="T:Microsoft.VisualStudio.Text.Classification.MarkerFormatDefinition">
      <summary>텍스트 표식에 대한 색 지정 정보를 제공합니다.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.Classification.MarkerFormatDefinition.#ctor">
      <summary>
        <see cref="T:Microsoft.VisualStudio.Text.Classification.MarkerFormatDefinition" />의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="P:Microsoft.VisualStudio.Text.Classification.MarkerFormatDefinition.Border">
      <summary>펜은 텍스트 표식의 테두리를 그리는 데 사용됩니다.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Text.Classification.MarkerFormatDefinition.BorderId">
      <summary>
        <see cref="T:System.Windows.ResourceDictionary" />에서 테두리 펜 값을 찾는 데 사용되는 문자열을 정의합니다.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.Classification.MarkerFormatDefinition.CreateResourceDictionaryFromDefinition">
      <summary>이 정의를 사용하여 <see cref="T:System.Windows.ResourceDictionary" />를 만듭니다.</summary>
      <returns>이 정의에 있는 값을 가진 <see cref="T:System.Windows.ResourceDictionary" />입니다.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.Text.Classification.MarkerFormatDefinition.Fill">
      <summary>브러시는 텍스트 표식의 내부 본문을 칠하는 데 사용됩니다.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Text.Classification.MarkerFormatDefinition.FillId">
      <summary>
        <see cref="T:System.Windows.ResourceDictionary" />에서 채우기 브러시 값을 찾는 데 사용되는 문자열을 정의합니다.</summary>
    </member>
    <member name="P:Microsoft.VisualStudio.Text.Classification.MarkerFormatDefinition.ZOrder">
      <summary>Z 순서는 표식이 텍스트 표식 장식 레이어에 그려질 때 표식의 Z 순서로 사용됩니다. 이 속성은 여러 표식이 같은 텍스트 범위에 겹쳐질 경우 이들 표식이 그려지는 순서를 지정하는 데 사용됩니다.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Text.Classification.MarkerFormatDefinition.ZOrderId">
      <summary>
        <see cref="T:System.Windows.ResourceDictionary" />에서 Z 순서 값을 찾는 데 사용되는 문자열을 정의합니다.</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.Text.Classification.Priority">
      <summary>분류 서식에 대한 기본 제공 우선 순위를 나타냅니다.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Text.Classification.Priority.Default">
      <summary>기본 우선 순위입니다.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Text.Classification.Priority.High">
      <summary>높은 우선 순위입니다.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Text.Classification.Priority.Low">
      <summary>낮은 우선 순위입니다.</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.Text.Classification.UserVisibleAttribute">
      <summary>내보내기가 사용자에게 표시되는지 여부를 확인합니다.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.Classification.UserVisibleAttribute.#ctor(System.Boolean)">
      <summary>
        <see cref="T:Microsoft.VisualStudio.Text.Classification.UserVisibleAttribute" />의 새 인스턴스를 초기화합니다.</summary>
      <param name="userVisible">
                확장이 사용자에게 표시되면 true이고, 그렇지 않으면 false입니다.</param>
    </member>
    <member name="P:Microsoft.VisualStudio.Text.Classification.UserVisibleAttribute.UserVisible">
      <summary>확장이 사용자에게 표시되는지 여부를 확인합니다.</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.Text.Editor.AdornmentLayerDefinition">
      <summary>IAdornmentLayer 내보내기에 대한 정보를 제공합니다.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.Editor.AdornmentLayerDefinition.#ctor">
      <summary>
        <see cref="T:Microsoft.VisualStudio.Text.Editor.AdornmentLayerDefinition" />의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.Text.Editor.AdornmentPositioningBehavior">
      <summary>장식의 위치 지정을 정의합니다.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Text.Editor.AdornmentPositioningBehavior.OwnerControlled">
      <summary>장식이 자동으로 이동되지 않습니다.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Text.Editor.AdornmentPositioningBehavior.ViewportRelative">
      <summary>장식의 위치가 뷰의 왼쪽 위 모퉁이를 기준으로 지정됩니다.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Text.Editor.AdornmentPositioningBehavior.TextRelative">
      <summary>장식의 위치가 뷰의 텍스트를 기준으로 지정됩니다.</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.Text.Editor.AdornmentRemovedCallback">
      <summary>
        <see cref="T:System.Windows.UIElement" />가 <see cref="T:Microsoft.VisualStudio.Text.Editor.IAdornmentLayer" />에서 제거될 경우의 동작을 정의합니다.</summary>
      <param name="tag">
        <paramref name="element" />와 연결되는 태그입니다. </param>
      <param name="element">뷰에서 제거되는 <see cref="T:System.Windows.UIElement" />입니다.</param>
    </member>
    <member name="T:Microsoft.VisualStudio.Text.Editor.AppearanceCategoryOption">
      <summary>모양 범주 옵션을 나타냅니다.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.Editor.AppearanceCategoryOption.#ctor">
      <summary>
        <see cref="T:Microsoft.VisualStudio.Text.Editor.AppearanceCategoryOption" />의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="P:Microsoft.VisualStudio.Text.Editor.AppearanceCategoryOption.Default">
      <summary>기본값을 가져옵니다.</summary>
      <returns>기본값인 "text"입니다.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.Text.Editor.AppearanceCategoryOption.Key">
      <summary>현재 줄 강조 표시 옵션에 대한 키를 가져옵니다.</summary>
      <returns>키입니다.</returns>
    </member>
    <member name="T:Microsoft.VisualStudio.Text.Editor.BackgroundBrushChangedEventArgs">
      <summary>
        <see cref="T:Microsoft.VisualStudio.Text.Editor.IWpfTextView" />의 BackgroundBrushChanged 이벤트에 대한 정보를 제공합니다.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.Editor.BackgroundBrushChangedEventArgs.#ctor(System.Windows.Media.Brush)">
      <summary>
        <see cref="T:Microsoft.VisualStudio.Text.Editor.BackgroundBrushChangedEventArgs" />의 새 인스턴스를 초기화합니다.</summary>
      <param name="newBackgroundBrush">
        <see cref="T:Microsoft.VisualStudio.Text.Editor.IWpfTextView" />의 새 <see cref="T:System.Windows.Media.Brush" />입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="newBackgroundBrush" /> is null.</exception>
    </member>
    <member name="P:Microsoft.VisualStudio.Text.Editor.BackgroundBrushChangedEventArgs.NewBackgroundBrush">
      <summary>
        <see cref="T:Microsoft.VisualStudio.Text.Editor.IWpfTextView" />의 새 <see cref="T:System.Windows.Media.Brush" />를 가져옵니다.</summary>
      <returns>새 배경 브러시입니다.</returns>
    </member>
    <member name="T:Microsoft.VisualStudio.Text.Editor.CollapseHintAdornmentControl">
      <summary>마우스가 개요 여백의 이 영역 위로 이동할 경우 텍스트 뷰의 개요 영역을 강조 표시합니다.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.Editor.CollapseHintAdornmentControl.#ctor">
      <summary>
        <see cref="T:Microsoft.VisualStudio.Text.Editor.CollapseHintAdornmentControl" />의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.Editor.CollapseHintAdornmentControl.GetIsHighlighted(Microsoft.VisualStudio.Text.Editor.CollapseHintAdornmentControl)">
      <summary>
        <see cref="F:Microsoft.VisualStudio.Text.Editor.CollapseHintAdornmentControl.IsHighlightedProperty" />를 가져옵니다.</summary>
      <param name="control">
        <see cref="T:Microsoft.VisualStudio.Text.Editor.CollapseHintAdornmentControl" />입니다.</param>
    </member>
    <member name="P:Microsoft.VisualStudio.Text.Editor.CollapseHintAdornmentControl.IsHighlighted">
      <summary>
        <see cref="F:Microsoft.VisualStudio.Text.Editor.CollapseHintAdornmentControl.IsHighlightedProperty" />를 가져오거나 설정합니다.</summary>
      <returns>컨트롤이 강조 표시되면 true이고, 그렇지 않으면 false입니다.</returns>
    </member>
    <member name="F:Microsoft.VisualStudio.Text.Editor.CollapseHintAdornmentControl.IsHighlightedProperty">
      <summary>이 컨트롤에서 현재 마우스가 가리키는 위치를 강조 표시할 것인지 여부를 결정하는 <see cref="T:System.Windows.DependencyProperty" />입니다.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.Editor.CollapseHintAdornmentControl.SetIsHighlighted(Microsoft.VisualStudio.Text.Editor.CollapseHintAdornmentControl,System.Boolean)">
      <summary>
        <see cref="F:Microsoft.VisualStudio.Text.Editor.CollapseHintAdornmentControl.IsHighlightedProperty" />를 설정합니다.</summary>
      <param name="control">
        <see cref="T:Microsoft.VisualStudio.Text.Editor.CollapseHintAdornmentControl" />입니다.</param>
      <param name="isExpanded">컨트롤이 강조 표시되면 true이고, 그렇지 않으면 false입니다.</param>
    </member>
    <member name="T:Microsoft.VisualStudio.Text.Editor.ConnectionReason">
      <summary>텍스트 버퍼 및 텍스트 뷰에 연결하는 이유 또는 연결을 끊는 이유를 정의합니다.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Text.Editor.ConnectionReason.TextViewLifetime">
      <summary>
        <see cref="T:Microsoft.VisualStudio.Text.Editor.IWpfTextView" />가 열렸거나 닫혔습니다.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Text.Editor.ConnectionReason.ContentTypeChange">
      <summary>제목 버퍼의 <see cref="T:Microsoft.VisualStudio.Utilities.IContentType" />이 변경되었습니다.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Text.Editor.ConnectionReason.BufferGraphChange">
      <summary>
        <see cref="T:Microsoft.VisualStudio.Text.Projection.IBufferGraph" />에 버퍼가 추가되었거나 제거되었습니다.</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.Text.Editor.DefaultWpfViewOptions">
      <summary>공통되는 <see cref="T:Microsoft.VisualStudio.Text.Editor.IWpfTextView" /> 옵션을 나타냅니다.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Text.Editor.DefaultWpfViewOptions.AppearanceCategory">
      <summary>ClassificationFormatMap과 EditorFormatMap을 선택하는 뷰의 모양 범주를 확인합니다.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Text.Editor.DefaultWpfViewOptions.EnableHighlightCurrentLineId">
      <summary>현재 줄 강조 표시 장식을 사용할 수 있는지 여부를 확인합니다.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Text.Editor.DefaultWpfViewOptions.EnableMouseWheelZoomId">
      <summary>마우스 휠을 사용한 확대/축소를 사용할 수 있는지 여부를 확인합니다.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Text.Editor.DefaultWpfViewOptions.EnableSimpleGraphicsId">
      <summary>현재 줄 강조 표시 장식을 사용할 수 있는지 여부를 확인합니다.</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.Text.Editor.GlyphTag">
      <summary>문자 모양 여백에서 문자 모양 표시를 배치하는 데 사용되는 문자 모양 태그를 나타냅니다.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.Editor.GlyphTag.#ctor">
      <summary>
        <see cref="T:Microsoft.VisualStudio.Text.Editor.GlyphTag" />의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.Text.Editor.GridCellLengthAttribute">
      <summary>이 클래스는 표 형태 창의 셀 크기를 MEF 내보내기와 연결합니다.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.Editor.GridCellLengthAttribute.#ctor(System.Double)">
      <summary>T:Microsoft.VisualStudio.Text.Editor.GridCellLengthAttribute의 새 인스턴스를 초기화합니다.</summary>
      <param name="cellLength">셀의 길이입니다.</param>
    </member>
    <member name="P:Microsoft.VisualStudio.Text.Editor.GridCellLengthAttribute.GridCellLength">
      <summary>셀의 길이입니다.</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.Text.Editor.GridUnitTypeAttribute">
      <summary>이 클래스는 <see cref="P:Microsoft.VisualStudio.Text.Editor.GridUnitTypeAttribute.GridUnitType" /> 값을 MEF 내보내기와 연결합니다.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.Editor.GridUnitTypeAttribute.#ctor(System.Windows.GridUnitType)">
      <summary>
        <see cref="T:Microsoft.VisualStudio.Text.Editor.GridUnitTypeAttribute" />의 새 인스턴스를 초기화합니다.</summary>
      <param name="gridUnitType">
        <see cref="T:System.Windows.GridUnitType" />입니다.</param>
    </member>
    <member name="P:Microsoft.VisualStudio.Text.Editor.GridUnitTypeAttribute.GridUnitType">
      <summary>눈금 단위 형식을 가져옵니다.</summary>
      <returns>
        <see cref="T:System.Windows.GridUnitType" />입니다.</returns>
    </member>
    <member name="T:Microsoft.VisualStudio.Text.Editor.HighlightCurrentLineOption">
      <summary>현재 줄을 강조 표시하는 옵션을 나타냅니다.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.Editor.HighlightCurrentLineOption.#ctor">
      <summary>새 인스턴스 <see cref="T:Microsoft.VisualStudio.Text.Editor.HighlightCurrentLineOption" />을 초기화합니다.</summary>
    </member>
    <member name="P:Microsoft.VisualStudio.Text.Editor.HighlightCurrentLineOption.Default">
      <summary>기본값을 가져옵니다.</summary>
      <returns>기본값입니다.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.Text.Editor.HighlightCurrentLineOption.Key">
      <summary>현재 줄 강조 표시 옵션에 대한 키를 가져옵니다.</summary>
      <returns>키입니다.</returns>
    </member>
    <member name="T:Microsoft.VisualStudio.Text.Editor.IAdornmentLayer">
      <summary>장식 레이어를 나타냅니다.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.Editor.IAdornmentLayer.AddAdornment(Microsoft.VisualStudio.Text.Editor.AdornmentPositioningBehavior,System.Nullable{Microsoft.VisualStudio.Text.SnapshotSpan},System.Object,System.Windows.UIElement,Microsoft.VisualStudio.Text.Editor.AdornmentRemovedCallback)">
      <summary>레이어에 <see cref="T:System.Windows.UIElement" />를 추가합니다.</summary>
      <returns>
        <paramref name="adornment" />가 레이어에 추가되었으면 true이고, 그렇지 않으면 false입니다. <paramref name="visualSpan" />은 뷰에 표시되는 텍스트와 교차되지 않습니다.</returns>
      <param name="behavior">
        <paramref name="adornment" />의 위치 지정 동작입니다.</param>
      <param name="visualSpan">
        <paramref name="adornment" />와 연결된 범위입니다.</param>
      <param name="tag">
        <paramref name="adornment" />와 연결된 태그입니다.</param>
      <param name="adornment">뷰에 추가할 <see cref="T:System.Windows.UIElement" />입니다.</param>
      <param name="removedCallback">
        <paramref name="adornment" />가 뷰에서 제거될 때 호출되는 대리자입니다.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.Editor.IAdornmentLayer.AddAdornment(Microsoft.VisualStudio.Text.SnapshotSpan,System.Object,System.Windows.UIElement)">
      <summary>레이어에 AdornmentPositioningBehavior.TextRelative <see cref="T:System.Windows.UIElement" />를 추가합니다.</summary>
      <returns>
            레이어에 <paramref name="adornment" />가 추가되었으면 true이고, 그렇지 않으면 false입니다. <paramref name="visualSpan" />은 뷰에 표시되는 텍스트와 교차하지 않습니다.</returns>
      <param name="visualSpan">
        <paramref name="adornment" />와 연결된 범위입니다.</param>
      <param name="tag">
        <paramref name="adornment" />와 연결된 태그입니다.</param>
      <param name="adornment">뷰에 추가할 <see cref="T:System.Windows.UIElement" />입니다.</param>
    </member>
    <member name="P:Microsoft.VisualStudio.Text.Editor.IAdornmentLayer.Elements">
      <summary>레이어에 있는 장식 컬렉션 및 이와 연결된 데이터를 가져옵니다.</summary>
      <returns>장식 및 해당 데이터입니다.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.Text.Editor.IAdornmentLayer.IsEmpty">
      <summary>이 레이어가 비어 있는지 즉, 장식이 포함되어 있지 않은지 여부를 확인합니다.</summary>
      <returns>레이어가 비어 있으면 true이고, 그렇지 않으면 false입니다.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.Text.Editor.IAdornmentLayer.Opacity">
      <summary>사용자 인터페이스에서 렌더링될 때 전체 장식 레이어에 적용되는 불투명도 비율을 가져오거나 설정합니다.</summary>
      <returns>불투명도 인수입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.Editor.IAdornmentLayer.RemoveAdornment(System.Windows.UIElement)">
      <summary>특정 <see cref="T:System.Windows.UIElement" />를 제거합니다.</summary>
      <param name="adornment">
                제거할 <see cref="T:System.Windows.UIElement" />입니다.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.Editor.IAdornmentLayer.RemoveAdornmentsByTag(System.Object)">
      <summary>특정 태그와 연결된 <see cref="T:System.Windows.UIElement" /> 개체를 모두 제거합니다.</summary>
      <param name="tag">
        <see cref="T:System.Windows.UIElement" />를 제거하는 데 사용할 태그입니다.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.Editor.IAdornmentLayer.RemoveAdornmentsByVisualSpan(Microsoft.VisualStudio.Text.SnapshotSpan)">
      <summary>지정된 표시 범위와 겹치는 표시 범위를 가진 모든 장식을 제거합니다. 지정된 표시 범위를 가지고 있지 않은 모든 장식은 무시됩니다.</summary>
      <param name="visualSpan">장식과 겹치는지 확인할 표시 범위입니다.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.Editor.IAdornmentLayer.RemoveAllAdornments">
      <summary>레이어에서 <see cref="T:System.Windows.UIElement" /> 개체를 모두 제거합니다.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.Editor.IAdornmentLayer.RemoveMatchingAdornments(Microsoft.VisualStudio.Text.SnapshotSpan,System.Predicate{Microsoft.VisualStudio.Text.Editor.IAdornmentLayerElement})"></member>
    <member name="M:Microsoft.VisualStudio.Text.Editor.IAdornmentLayer.RemoveMatchingAdornments(System.Predicate{Microsoft.VisualStudio.Text.Editor.IAdornmentLayerElement})"></member>
    <member name="P:Microsoft.VisualStudio.Text.Editor.IAdornmentLayer.TextView">
      <summary>이 레이어가 연결된 <see cref="T:Microsoft.VisualStudio.Text.Editor.IWpfTextView" />를 가져옵니다.</summary>
      <returns>텍스트 뷰입니다.</returns>
    </member>
    <member name="T:Microsoft.VisualStudio.Text.Editor.IAdornmentLayerElement">
      <summary>장식 레이어의 요소를 정의합니다.</summary>
    </member>
    <member name="P:Microsoft.VisualStudio.Text.Editor.IAdornmentLayerElement.Adornment">
      <summary>장식을 가져옵니다.</summary>
    </member>
    <member name="P:Microsoft.VisualStudio.Text.Editor.IAdornmentLayerElement.Behavior">
      <summary>장식의 위치 지정 동작을 가져옵니다.</summary>
      <returns>위치 지정 동작입니다.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.Text.Editor.IAdornmentLayerElement.RemovedCallback">
      <summary>장식이 제거된 경우의 동작을 정의합니다.</summary>
      <returns>제거 콜백입니다.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.Text.Editor.IAdornmentLayerElement.Tag">
      <summary>장식과 연결된 태그를 가져옵니다.</summary>
      <returns>태그입니다.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.Text.Editor.IAdornmentLayerElement.VisualSpan">
      <summary>장식과 연결된 스냅숏 범위를 가져옵니다.</summary>
      <returns>스냅숏 범위입니다.</returns>
    </member>
    <member name="T:Microsoft.VisualStudio.Text.Editor.IGlyphFactory">
      <summary>특정 문자 모양 형식에 대한 비주얼을 제공합니다.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.Editor.IGlyphFactory.GenerateGlyph(Microsoft.VisualStudio.Text.Formatting.IWpfTextViewLine,Microsoft.VisualStudio.Text.Editor.GlyphTag)">
      <summary>지정된 줄의 새 문자 모양 비주얼을 생성합니다.</summary>
      <returns>지정된 태그의 비주얼 요소입니다.</returns>
      <param name="line">이 문자 모양이 놓여질 줄입니다.</param>
      <param name="tag">비주얼을 생성할 문자 모양에 대한 정보입니다.</param>
    </member>
    <member name="T:Microsoft.VisualStudio.Text.Editor.IGlyphFactoryProvider">
      <summary>
        <see cref="T:Microsoft.VisualStudio.Text.Editor.IGlyphFactory" />를 제공합니다.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.Editor.IGlyphFactoryProvider.GetGlyphFactory(Microsoft.VisualStudio.Text.Editor.IWpfTextView,Microsoft.VisualStudio.Text.Editor.IWpfTextViewMargin)">
      <summary>지정된 텍스트 뷰 및 여백에 대한 <see cref="T:Microsoft.VisualStudio.Text.Editor.IGlyphFactory" />를 가져옵니다.</summary>
      <returns>지정된 뷰 및 여백에 대한 <see cref="T:Microsoft.VisualStudio.Text.Editor.IGlyphFactory" />입니다.</returns>
      <param name="view">팩터리를 만들 뷰입니다.</param>
      <param name="margin">팩터리에서 문자 모양을 만들 여백입니다.</param>
    </member>
    <member name="T:Microsoft.VisualStudio.Text.Editor.IGlyphMouseProcessorProvider">
      <summary>문자 모양 여백에 대한 마우스 바인딩을 제공합니다.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.Editor.IGlyphMouseProcessorProvider.GetAssociatedMouseProcessor(Microsoft.VisualStudio.Text.Editor.IWpfTextViewHost,Microsoft.VisualStudio.Text.Editor.IWpfTextViewMargin)">
      <summary>
        <see cref="T:Microsoft.VisualStudio.Text.Editor.IWpfTextViewHost" /> 및 <see cref="T:Microsoft.VisualStudio.Text.ITextBuffer" />가 지정된 경우 문자 모양 여백에 대한 <see cref="T:Microsoft.VisualStudio.Text.Editor.IMouseProcessor" />를 만듭니다.</summary>
      <returns>문자 모양 여백에 대한 <see cref="T:Microsoft.VisualStudio.Text.Editor.IMouseProcessor" />입니다.  이 <see cref="T:Microsoft.VisualStudio.Text.Editor.IGlyphMouseProcessorProvider" />가 참여하지 않는 경우 값이 null일 수 있습니다.</returns>
      <param name="wpfTextViewHost">문자 모양 여백과 연결된 <see cref="T:Microsoft.VisualStudio.Text.Editor.IWpfTextViewHost" />입니다.</param>
      <param name="margin">
        <see cref="T:Microsoft.VisualStudio.Text.Editor.IWpfTextViewMargin" />입니다.</param>
    </member>
    <member name="T:Microsoft.VisualStudio.Text.Editor.IKeyProcessorProvider">
      <summary>지정된 <see cref="T:Microsoft.VisualStudio.Text.Editor.IWpfTextViewHost" />의 <see cref="T:Microsoft.VisualStudio.Text.Editor.KeyProcessor" />를 만듭니다.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.Editor.IKeyProcessorProvider.GetAssociatedProcessor(Microsoft.VisualStudio.Text.Editor.IWpfTextView)">
      <summary>지정된 <see cref="T:Microsoft.VisualStudio.Text.Editor.IWpfTextView" />의 <see cref="T:Microsoft.VisualStudio.Text.Editor.KeyProcessor" />를 만듭니다.</summary>
      <returns>만들어진 <see cref="T:Microsoft.VisualStudio.Text.Editor.KeyProcessor" />입니다. 이 <see cref="T:Microsoft.VisualStudio.Text.Editor.IKeyProcessorProvider" />에서 현재 컨텍스트에 참여하지 않으려는 경우 값이 null일 수 있습니다.</returns>
      <param name="wpfTextView">
        <see cref="T:Microsoft.VisualStudio.Text.Editor.KeyProcessor" />를 만들 <see cref="T:Microsoft.VisualStudio.Text.Editor.IWpfTextView" />입니다.</param>
    </member>
    <member name="T:Microsoft.VisualStudio.Text.Editor.ImeTextComposition">
      <summary>
        <see cref="T:Microsoft.VisualStudio.Text.Editor.ITextView" />의 IME 처리를 통해 생성된 텍스트 컴퍼지션을 나타냅니다.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.Editor.ImeTextComposition.#ctor(System.Windows.Input.InputManager,System.Windows.IInputElement,System.String)">
      <summary>
        <see cref="T:Microsoft.VisualStudio.Text.Editor.ImeTextComposition" />의 새 인스턴스를 초기화합니다.</summary>
      <param name="inputManager">
        <see cref="T:System.Windows.Input.InputManager" />입니다.</param>
      <param name="source">입력 요소입니다.</param>
      <param name="resultText">텍스트입니다.</param>
    </member>
    <member name="T:Microsoft.VisualStudio.Text.Editor.IMouseProcessor">
      <summary>마우스 바인딩에 대한 확장을 제공합니다.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.Editor.IMouseProcessor.PostprocessDragEnter(System.Windows.DragEventArgs)">
      <summary>기본 처리기 이후에 범위 안으로 끌기 이벤트를 처리합니다.</summary>
      <param name="e">끌기 작업을 설명하는 <see cref="T:System.Windows.DragEventArgs" />입니다.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.Editor.IMouseProcessor.PostprocessDragLeave(System.Windows.DragEventArgs)">
      <summary>기본 처리기 이후에 범위 밖으로 끌기 이벤트를 처리합니다.</summary>
      <param name="e">끌기 작업을 설명하는 <see cref="T:System.Windows.DragEventArgs" />입니다.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.Editor.IMouseProcessor.PostprocessDragOver(System.Windows.DragEventArgs)">
      <summary>기본 처리기 이후에 범위 위로 끌기 이벤트를 처리합니다.</summary>
      <param name="e">끌기 작업을 설명하는 <see cref="T:System.Windows.DragEventArgs" />입니다.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.Editor.IMouseProcessor.PostprocessDrop(System.Windows.DragEventArgs)">
      <summary>기본 처리기 이후에 놓기 이벤트를 처리합니다.</summary>
      <param name="e">끌기 작업을 설명하는 <see cref="T:System.Windows.DragEventArgs" />입니다.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.Editor.IMouseProcessor.PostprocessGiveFeedback(System.Windows.GiveFeedbackEventArgs)">
      <summary>기본 처리기 이후에 GiveFeedback 이벤트를 처리합니다.</summary>
      <param name="e">끌기 작업을 설명하는 <see cref="T:System.Windows.DragEventArgs" />입니다.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.Editor.IMouseProcessor.PostprocessMouseEnter(System.Windows.Input.MouseEventArgs)">
      <summary>기본 처리기 이후에 범위 안으로 마우스 이동 이벤트를 처리합니다.</summary>
      <param name="e">이벤트를 설명하는 이벤트 인수입니다.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.Editor.IMouseProcessor.PostprocessMouseLeave(System.Windows.Input.MouseEventArgs)">
      <summary>기본 처리기 이후에 범위 밖으로 마우스 이동 이벤트를 처리합니다.</summary>
      <param name="e">이벤트를 설명하는 이벤트 인수입니다.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.Editor.IMouseProcessor.PostprocessMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)">
      <summary>기본 처리기 이후에 마우스 왼쪽 단추 누르기 이벤트를 처리합니다.</summary>
      <param name="e">이벤트를 설명하는 이벤트 인수입니다.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.Editor.IMouseProcessor.PostprocessMouseLeftButtonUp(System.Windows.Input.MouseButtonEventArgs)">
      <summary>기본 처리기 이후에 마우스 왼쪽 단추 놓기 이벤트를 처리합니다.</summary>
      <param name="e">이벤트를 설명하는 이벤트 인수입니다.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.Editor.IMouseProcessor.PostprocessMouseMove(System.Windows.Input.MouseEventArgs)">
      <summary>기본 처리기 이후에 마우스 이동 이벤트를 처리합니다.</summary>
      <param name="e">이벤트를 설명하는 이벤트 인수입니다.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.Editor.IMouseProcessor.PostprocessMouseRightButtonDown(System.Windows.Input.MouseButtonEventArgs)">
      <summary>기본 처리기 이후에 마우스 오른쪽 단추 누르기 이벤트를 처리합니다.</summary>
      <param name="e">이벤트를 설명하는 이벤트 인수입니다.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.Editor.IMouseProcessor.PostprocessMouseRightButtonUp(System.Windows.Input.MouseButtonEventArgs)">
      <summary>기본 처리기 이후에 마우스 오른쪽 단추 놓기 이벤트를 처리합니다.</summary>
      <param name="e">이벤트를 설명하는 이벤트 인수입니다.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.Editor.IMouseProcessor.PostprocessMouseWheel(System.Windows.Input.MouseWheelEventArgs)">
      <summary>기본 처리기 이후에 마우스 휠 이벤트를 처리합니다.</summary>
      <param name="e">이벤트를 설명하는 이벤트 인수입니다.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.Editor.IMouseProcessor.PostprocessQueryContinueDrag(System.Windows.QueryContinueDragEventArgs)">
      <summary>기본 처리기 이후에 QueryContinueDrag 이벤트를 처리합니다.</summary>
      <param name="e">끌기 작업을 설명하는 <see cref="T:System.Windows.DragEventArgs" />입니다.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.Editor.IMouseProcessor.PreprocessDragEnter(System.Windows.DragEventArgs)">
      <summary>기본 처리기 이전에 범위 안으로 끌기 이벤트를 처리합니다.</summary>
      <param name="e">끌기 작업을 설명하는 <see cref="T:System.Windows.DragEventArgs" />입니다.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.Editor.IMouseProcessor.PreprocessDragLeave(System.Windows.DragEventArgs)">
      <summary>기본 처리기 이전에 범위 밖으로 끌기 이벤트를 처리합니다.</summary>
      <param name="e">끌기 작업을 설명하는 <see cref="T:System.Windows.DragEventArgs" />입니다.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.Editor.IMouseProcessor.PreprocessDragOver(System.Windows.DragEventArgs)">
      <summary>기본 처리기 이전에 범위 위로 끌기 이벤트를 처리합니다.</summary>
      <param name="e">끌기 작업을 설명하는 <see cref="T:System.Windows.DragEventArgs" />입니다.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.Editor.IMouseProcessor.PreprocessDrop(System.Windows.DragEventArgs)">
      <summary>기본 처리기 이전에 놓기 이벤트를 처리합니다.</summary>
      <param name="e">
                끌기 작업을 설명하는 <see cref="T:System.Windows.DragEventArgs" />입니다.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.Editor.IMouseProcessor.PreprocessGiveFeedback(System.Windows.GiveFeedbackEventArgs)">
      <summary>기본 처리기 이전에 GiveFeedback 이벤트를 처리합니다.</summary>
      <param name="e">끌기 작업을 설명하는 <see cref="T:System.Windows.DragEventArgs" />입니다.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.Editor.IMouseProcessor.PreprocessMouseEnter(System.Windows.Input.MouseEventArgs)">
      <summary>기본 처리기 이전에 범위 안으로 마우스 이동 이벤트를 처리합니다.</summary>
      <param name="e">이벤트를 설명하는 이벤트 인수입니다.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.Editor.IMouseProcessor.PreprocessMouseLeave(System.Windows.Input.MouseEventArgs)">
      <summary>기본 처리기 이전에 범위 밖으로 마우스 이동 이벤트를 처리합니다.</summary>
      <param name="e">이벤트를 설명하는 이벤트 인수입니다.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.Editor.IMouseProcessor.PreprocessMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)">
      <summary>기본 처리기 이전에 마우스 왼쪽 단추 누르기 이벤트를 처리합니다.</summary>
      <param name="e">이벤트를 설명하는 이벤트 인수입니다.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.Editor.IMouseProcessor.PreprocessMouseLeftButtonUp(System.Windows.Input.MouseButtonEventArgs)">
      <summary>기본 처리기 이전에 마우스 왼쪽 단추 놓기 이벤트를 처리합니다.</summary>
      <param name="e">이벤트를 설명하는 이벤트 인수입니다.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.Editor.IMouseProcessor.PreprocessMouseMove(System.Windows.Input.MouseEventArgs)">
      <summary>기본 처리기 이전에 마우스 이동 이벤트를 처리합니다.</summary>
      <param name="e">이벤트를 설명하는 이벤트 인수입니다.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.Editor.IMouseProcessor.PreprocessMouseRightButtonDown(System.Windows.Input.MouseButtonEventArgs)">
      <summary>기본 처리기 이전에 마우스 오른쪽 단추 누르기 이벤트를 처리합니다.</summary>
      <param name="e">이벤트를 설명하는 이벤트 인수입니다.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.Editor.IMouseProcessor.PreprocessMouseRightButtonUp(System.Windows.Input.MouseButtonEventArgs)">
      <summary>기본 처리기 이전에 마우스 오른쪽 단추 놓기 이벤트를 처리합니다.</summary>
      <param name="e">이벤트를 설명하는 이벤트 인수입니다.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.Editor.IMouseProcessor.PreprocessMouseWheel(System.Windows.Input.MouseWheelEventArgs)">
      <summary>기본 처리기 이전에 마우스 휠 이벤트를 처리합니다.</summary>
      <param name="e">이벤트를 설명하는 이벤트 인수입니다.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.Editor.IMouseProcessor.PreprocessQueryContinueDrag(System.Windows.QueryContinueDragEventArgs)">
      <summary>기본 처리기 이전에 QueryContinueDrag 이벤트를 처리합니다.</summary>
      <param name="e">끌기 작업을 설명하는 <see cref="T:System.Windows.DragEventArgs" />입니다.</param>
    </member>
    <member name="T:Microsoft.VisualStudio.Text.Editor.IMouseProcessorProvider">
      <summary>지정된 텍스트 뷰에 대한 WPF 마우스 프로세서를 만듭니다.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.Editor.IMouseProcessorProvider.GetAssociatedProcessor(Microsoft.VisualStudio.Text.Editor.IWpfTextView)">
      <summary>
        <see cref="T:Microsoft.VisualStudio.Text.Editor.IWpfTextView" />의 <see cref="T:Microsoft.VisualStudio.Text.Editor.IMouseProcessor" />를 만듭니다.</summary>
      <returns>만든 <see cref="T:Microsoft.VisualStudio.Text.Editor.IMouseProcessor" />입니다. 이 <see cref="T:Microsoft.VisualStudio.Text.Editor.IMouseProcessorProvider" />에서 현재 컨텍스트에 참여하지 않으려는 경우 값이 null일 수 있습니다.</returns>
      <param name="wpfTextView">
        <see cref="T:Microsoft.VisualStudio.Text.Editor.IMouseProcessor" />를 만들 <see cref="T:Microsoft.VisualStudio.Text.Editor.IWpfTextView" />입니다.</param>
    </member>
    <member name="T:Microsoft.VisualStudio.Text.Editor.IntraTextAdornment">
      <summary>
        <see cref="T:Microsoft.VisualStudio.Text.Editor.IntraTextAdornmentTag" /> 개체에서 제공하는 텍스트 내부 장식을 지원합니다.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.Editor.IntraTextAdornment.GetIsSelected(System.Windows.UIElement)">
      <summary>지정된 <see cref="T:System.Windows.UIElement" />의 IsSelected 값을 가져옵니다.</summary>
      <returns>
            요소가 선택되면 true이고, 그렇지 않으면 false입니다.</returns>
      <param name="element">요소입니다.</param>
    </member>
    <member name="F:Microsoft.VisualStudio.Text.Editor.IntraTextAdornment.IsSelected">
      <summary>이들 장식의 IsSelected 속성을 나타냅니다.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.Editor.IntraTextAdornment.SetIsSelected(System.Windows.UIElement,System.Boolean)">
      <summary>지정된 <see cref="T:System.Windows.UIElement" />의 IsSelected 값을 설정합니다.</summary>
      <param name="element">요소입니다.</param>
      <param name="isSelected">IsSelected 값입니다.</param>
    </member>
    <member name="T:Microsoft.VisualStudio.Text.Editor.IntraTextAdornmentTag">
      <summary>텍스트와 섞인 상태로 표시되는 장식을 제공하는 태그를 나타냅니다.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.Editor.IntraTextAdornmentTag.#ctor(System.Windows.UIElement,Microsoft.VisualStudio.Text.Editor.AdornmentRemovedCallback)">
      <summary>
        <see cref="T:Microsoft.VisualStudio.Text.Editor.IntraTextAdornmentTag" />의 새 인스턴스를 초기화합니다.</summary>
      <param name="adornment">태그 위치에 표시할 장식입니다. null이 아니어야 합니다.</param>
      <param name="removalCallback">뷰에서 장식이 제거될 경우 호출됩니다. null일 수 있습니다.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.Editor.IntraTextAdornmentTag.#ctor(System.Windows.UIElement,Microsoft.VisualStudio.Text.Editor.AdornmentRemovedCallback,System.Nullable{Microsoft.VisualStudio.Text.PositionAffinity})"></member>
    <member name="M:Microsoft.VisualStudio.Text.Editor.IntraTextAdornmentTag.#ctor(System.Windows.UIElement,Microsoft.VisualStudio.Text.Editor.AdornmentRemovedCallback,System.Nullable{System.Double},System.Nullable{System.Double},System.Nullable{System.Double},System.Nullable{System.Double},System.Nullable{Microsoft.VisualStudio.Text.PositionAffinity})"></member>
    <member name="P:Microsoft.VisualStudio.Text.Editor.IntraTextAdornmentTag.Adornment">
      <summary>태그 위치에 표시할 장식을 가져옵니다. null이 아니어야 합니다.</summary>
    </member>
    <member name="P:Microsoft.VisualStudio.Text.Editor.IntraTextAdornmentTag.Affinity"></member>
    <member name="P:Microsoft.VisualStudio.Text.Editor.IntraTextAdornmentTag.Baseline"></member>
    <member name="P:Microsoft.VisualStudio.Text.Editor.IntraTextAdornmentTag.BottomSpace"></member>
    <member name="P:Microsoft.VisualStudio.Text.Editor.IntraTextAdornmentTag.RemovalCallback">
      <summary>뷰에서 장식이 제거될 경우 호출됩니다. Null일 수 있습니다.</summary>
    </member>
    <member name="P:Microsoft.VisualStudio.Text.Editor.IntraTextAdornmentTag.TextHeight"></member>
    <member name="P:Microsoft.VisualStudio.Text.Editor.IntraTextAdornmentTag.TopSpace"></member>
    <member name="T:Microsoft.VisualStudio.Text.Editor.ISpaceReservationAgent">
      <summary>공간 예약 도구 영역의 표시를 처리합니다.</summary>
    </member>
    <member name="E:Microsoft.VisualStudio.Text.Editor.ISpaceReservationAgent.GotFocus">
      <summary>ISpaceReservationAgent에서 만든 도구 영역이 포커스를 가질 경우 발생합니다.</summary>
    </member>
    <member name="P:Microsoft.VisualStudio.Text.Editor.ISpaceReservationAgent.HasFocus">
      <summary>공간 예약 에이전트에서 만든 도구 영역이 키보드 포커스를 가지는지 여부를 확인합니다.</summary>
      <returns>도구 영역이 포커스를 가지면 true입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.Editor.ISpaceReservationAgent.Hide">
      <summary>공간 예약 에이전트의 콘텐츠를 숨길 때마다 호출됩니다.</summary>
    </member>
    <member name="P:Microsoft.VisualStudio.Text.Editor.ISpaceReservationAgent.IsMouseOver">
      <summary>마우스가 이 에이전트 또는 이 에이전트에 속한 임의의 요소 위에 있는지 여부를 확인합니다.</summary>
      <returns>마우스가 도구 영역 위에 있으면 true입니다.</returns>
    </member>
    <member name="E:Microsoft.VisualStudio.Text.Editor.ISpaceReservationAgent.LostFocus">
      <summary>ISpaceReservationAgent에서 만든 도구 영역이 포커스를 잃을 경우 발생합니다.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.Editor.ISpaceReservationAgent.PositionAndDisplay(System.Windows.Media.Geometry)">
      <summary>
        <see cref="T:Microsoft.VisualStudio.Text.Editor.ISpaceReservationAgent" />의 콘텐츠에 대한 위치를 지정하고 표시합니다.</summary>
      <returns>공간입니다. null이 반환되면 <see cref="T:Microsoft.VisualStudio.Text.Editor.ISpaceReservationManager" />에서 에이전트를 제거합니다.</returns>
      <param name="reservedSpace">현재 예약된 공간입니다.</param>
    </member>
    <member name="T:Microsoft.VisualStudio.Text.Editor.ISpaceReservationManager">
      <summary>공간 예약 도구 영역을 관리합니다.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.Editor.ISpaceReservationManager.AddAgent(Microsoft.VisualStudio.Text.Editor.ISpaceReservationAgent)">
      <summary>
        <paramref name="agent" />를 이 관리자가 관리하는 에이전트 목록에 추가합니다.</summary>
      <param name="agent">추가할 에이전트입니다.</param>
    </member>
    <member name="E:Microsoft.VisualStudio.Text.Editor.ISpaceReservationManager.AgentChanged">
      <summary>에이전트가 변경될 경우 발생합니다.</summary>
    </member>
    <member name="P:Microsoft.VisualStudio.Text.Editor.ISpaceReservationManager.Agents">
      <summary>이 관리자가 관리하는 에이전트 목록을 가져옵니다.</summary>
      <returns>에이전트입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.Editor.ISpaceReservationManager.CreatePopupAgent(Microsoft.VisualStudio.Text.ITrackingSpan,Microsoft.VisualStudio.Text.Adornments.PopupStyles,System.Windows.UIElement)">
      <summary>팝업 창에 <paramref name="content" />를 표시하는 <see cref="T:Microsoft.VisualStudio.Text.Editor.ISpaceReservationAgent" />의 기본 구현을 만듭니다.</summary>
      <returns>팝업 창에 원하는 콘텐츠를 표시할 <see cref="T:Microsoft.VisualStudio.Text.Editor.ISpaceReservationAgent" />입니다.</returns>
      <param name="visualSpan">팁과 연결된 텍스트 범위입니다.</param>
      <param name="style">팁을 표시하기 위한 스타일 옵션입니다.</param>
      <param name="content">팁에 표시될 UI 요소입니다.</param>
    </member>
    <member name="E:Microsoft.VisualStudio.Text.Editor.ISpaceReservationManager.GotAggregateFocus">
      <summary>관리되는 도구 영역 중 하나가 키보드 포커스를 가질 경우 발생합니다.</summary>
    </member>
    <member name="P:Microsoft.VisualStudio.Text.Editor.ISpaceReservationManager.HasAggregateFocus">
      <summary>공간 예약 에이전트에서 만든 도구 영역이 키보드 포커스를 가지는지 여부를 확인합니다.</summary>
      <returns>도구 영역이 포커스를 가지면 true입니다.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.Text.Editor.ISpaceReservationManager.IsMouseOver">
      <summary>이 관리자가 관리하는 에이전트 위에 마우스가 있는지 여부를 확인합니다.</summary>
      <returns>마우스가 도구 영역 위에 있으면 true입니다.</returns>
    </member>
    <member name="E:Microsoft.VisualStudio.Text.Editor.ISpaceReservationManager.LostAggregateFocus">
      <summary>관리되는 도구 영역 중 하나가 키보드 포커스를 잃을 경우 발생합니다.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.Editor.ISpaceReservationManager.RemoveAgent(Microsoft.VisualStudio.Text.Editor.ISpaceReservationAgent)">
      <summary>이 관리자가 관리하는 에이전트 목록에서 <paramref name="agent" />를 제거합니다.</summary>
      <returns>
            제거할 에이전트 목록에 해당 에이전트가 있었으면 true입니다.</returns>
      <param name="agent">제거할 에이전트입니다.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.Editor.ISpaceReservationManager.UpdatePopupAgent(Microsoft.VisualStudio.Text.Editor.ISpaceReservationAgent,Microsoft.VisualStudio.Text.ITrackingSpan)"></member>
    <member name="T:Microsoft.VisualStudio.Text.Editor.ITextEditorFactoryService">
      <summary>편집기 뷰를 만듭니다.</summary>
    </member>
    <member name="P:Microsoft.VisualStudio.Text.Editor.ITextEditorFactoryService.AllPredefinedRoles">
      <summary>미리 정의된 모든 텍스트 뷰 역할의 집합입니다.</summary>
      <returns>모든 텍스트 뷰 역할입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.Editor.ITextEditorFactoryService.CreateTextView">
      <summary>콘텐츠 형식이 Text인 새로 만들어진 <see cref="T:Microsoft.VisualStudio.Text.ITextBuffer" />에 <see cref="T:Microsoft.VisualStudio.Text.Editor.IWpfTextView" />를 만듭니다.</summary>
      <returns>
        <see cref="T:Microsoft.VisualStudio.Text.Editor.IWpfTextView" />입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.Editor.ITextEditorFactoryService.CreateTextView(Microsoft.VisualStudio.Text.Editor.ITextViewModel,Microsoft.VisualStudio.Text.Editor.ITextViewRoleSet,Microsoft.VisualStudio.Text.Editor.IEditorOptions)">
      <summary>
        <paramref name="viewModel" />의 콘텐츠를 표시하는 <see cref="T:Microsoft.VisualStudio.Text.Editor.IWpfTextView" />를 만듭니다.</summary>
      <returns>
        <see cref="T:Microsoft.VisualStudio.Text.Editor.IWpfTextView" />입니다.</returns>
      <param name="viewModel">뷰에 대한 텍스트 버퍼를 제공하는 <see cref="T:Microsoft.VisualStudio.Text.Editor.ITextViewModel" />입니다.</param>
      <param name="roles">뷰로 채워진 역할 집합입니다.</param>
      <param name="parentOptions">텍스트 뷰의 옵션 환경입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="viewModel" /> or <paramref name="roles" /> or <paramref name="parentOptions" /> is null.</exception>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.Editor.ITextEditorFactoryService.CreateTextView(Microsoft.VisualStudio.Text.ITextBuffer)">
      <summary>
        <paramref name="textBuffer" />의 콘텐츠를 표시하는 <see cref="T:Microsoft.VisualStudio.Text.Editor.IWpfTextView" />를 만듭니다.</summary>
      <returns>미리 정의된 모든 텍스트 뷰 역할을 포함하는 <see cref="T:Microsoft.VisualStudio.Text.Editor.IWpfTextView" />입니다.</returns>
      <param name="textBuffer">뷰의 텍스트를 제공하는 <see cref="T:Microsoft.VisualStudio.Text.ITextBuffer" />입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="textBuffer" /> is null.</exception>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.Editor.ITextEditorFactoryService.CreateTextView(Microsoft.VisualStudio.Text.ITextBuffer,Microsoft.VisualStudio.Text.Editor.ITextViewRoleSet)">
      <summary>
        <paramref name="textBuffer" />의 콘텐츠를 표시하는 <see cref="T:Microsoft.VisualStudio.Text.Editor.IWpfTextView" />를 만듭니다.</summary>
      <returns>
        <see cref="T:Microsoft.VisualStudio.Text.Editor.IWpfTextView" />입니다.</returns>
      <param name="textBuffer">뷰의 텍스트를 제공하는 <see cref="T:Microsoft.VisualStudio.Text.ITextBuffer" />입니다.</param>
      <param name="roles">뷰로 채워진 역할 집합입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="textBuffer" /> or <paramref name="roles" /> is null.</exception>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.Editor.ITextEditorFactoryService.CreateTextView(Microsoft.VisualStudio.Text.ITextBuffer,Microsoft.VisualStudio.Text.Editor.ITextViewRoleSet,Microsoft.VisualStudio.Text.Editor.IEditorOptions)">
      <summary>
        <paramref name="textBuffer" />의 콘텐츠를 표시하는 <see cref="T:Microsoft.VisualStudio.Text.Editor.IWpfTextView" />를 만듭니다.</summary>
      <returns>
        <see cref="T:Microsoft.VisualStudio.Text.Editor.IWpfTextView" />입니다.</returns>
      <param name="textBuffer">뷰의 텍스트를 제공하는 <see cref="T:Microsoft.VisualStudio.Text.ITextBuffer" />입니다.</param>
      <param name="roles">뷰로 채워진 역할 집합입니다.</param>
      <param name="parentOptions">텍스트 뷰의 옵션 환경입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="textBuffer" /> or <paramref name="roles" /> or <paramref name="parentOptions" /> is null.</exception>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.Editor.ITextEditorFactoryService.CreateTextView(Microsoft.VisualStudio.Text.ITextDataModel,Microsoft.VisualStudio.Text.Editor.ITextViewRoleSet,Microsoft.VisualStudio.Text.Editor.IEditorOptions)">
      <summary>
        <paramref name="dataModel" />의 콘텐츠를 표시하는 <see cref="T:Microsoft.VisualStudio.Text.Editor.IWpfTextView" />를 만듭니다.</summary>
      <returns>
        <see cref="T:Microsoft.VisualStudio.Text.Editor.IWpfTextView" />입니다.</returns>
      <param name="dataModel">뷰에 대한 <see cref="T:Microsoft.VisualStudio.Text.Editor.ITextViewModel" />이 빌드될 텍스트 버퍼를 제공하는 <see cref="T:Microsoft.VisualStudio.Text.ITextDataModel" />입니다.</param>
      <param name="roles">뷰로 채워진 역할 집합입니다.</param>
      <param name="parentOptions">텍스트 뷰의 옵션 환경입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="dataModel" /> or <paramref name="roles" /> or <paramref name="parentOptions" /> is null.</exception>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.Editor.ITextEditorFactoryService.CreateTextViewHost(Microsoft.VisualStudio.Text.Editor.IWpfTextView,System.Boolean)">
      <summary>텍스트 뷰의 호스트를 만듭니다.</summary>
      <returns>
        <see cref="T:Microsoft.VisualStudio.Text.Editor.IWpfTextViewHost" />입니다.</returns>
      <param name="wpfTextView">호스팅할 텍스트 뷰입니다.</param>
      <param name="setFocus">
                초기화된 후 <see cref="T:Microsoft.VisualStudio.Text.Editor.IWpfTextViewHost" />가 포커스를 가지면 true이고, 그렇지 않으면 false입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="wpfTextView" /> is null.</exception>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.Editor.ITextEditorFactoryService.CreateTextViewRoleSet(System.Collections.Generic.IEnumerable{System.String})">
      <summary>지정된 역할을 포함하는 <see cref="T:Microsoft.VisualStudio.Text.Editor.ITextViewRoleSet" />을 만듭니다.</summary>
      <returns>텍스트 뷰 역할 집합입니다.</returns>
      <param name="roles">원하는 역할입니다.</param>
      <exception cref="T:System.ArgumentNullException">roles is null.</exception>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.Editor.ITextEditorFactoryService.CreateTextViewRoleSet(System.String[])">
      <summary>지정된 역할을 포함하는 <see cref="T:Microsoft.VisualStudio.Text.Editor.ITextViewRoleSet" />을 만듭니다.</summary>
      <returns>텍스트 뷰 역할 집합입니다.</returns>
      <param name="roles">원하는 역할입니다.</param>
    </member>
    <member name="P:Microsoft.VisualStudio.Text.Editor.ITextEditorFactoryService.DefaultRoles"></member>
    <member name="P:Microsoft.VisualStudio.Text.Editor.ITextEditorFactoryService.NoRoles">
      <summary>빈 ITextViewRoleSet입니다.</summary>
      <returns>빈 텍스트 뷰 역할 집합입니다.</returns>
    </member>
    <member name="E:Microsoft.VisualStudio.Text.Editor.ITextEditorFactoryService.TextViewCreated">
      <summary>
        <see cref="T:Microsoft.VisualStudio.Text.Editor.ITextView" />가 만들어질 때 발생합니다.</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.Text.Editor.IWpfTextView">
      <summary>WPF 플랫폼의 <see cref="T:Microsoft.VisualStudio.Text.Editor.ITextView" />를 나타냅니다.</summary>
    </member>
    <member name="P:Microsoft.VisualStudio.Text.Editor.IWpfTextView.Background">
      <summary>시각적 요소의 배경을 가져오거나 설정합니다.</summary>
    </member>
    <member name="E:Microsoft.VisualStudio.Text.Editor.IWpfTextView.BackgroundBrushChanged">
      <summary>
        <see cref="P:Microsoft.VisualStudio.Text.Editor.IWpfTextView.Background" />가 설정될 경우 발생합니다.</summary>
    </member>
    <member name="P:Microsoft.VisualStudio.Text.Editor.IWpfTextView.FormattedLineSource">
      <summary>뷰에서 사용되는 텍스트 포맷터를 가져옵니다.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.Editor.IWpfTextView.GetAdornmentLayer(System.String)">
      <summary>명명된 <see cref="T:Microsoft.VisualStudio.Text.Editor.IAdornmentLayer" />를 가져옵니다.</summary>
      <returns>이 뷰의 레이어 인스턴스입니다.</returns>
      <param name="name">레이어의 이름입니다.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.Editor.IWpfTextView.GetSpaceReservationManager(System.String)">
      <summary>명명된 <see cref="T:Microsoft.VisualStudio.Text.Editor.ISpaceReservationManager" />를 가져옵니다.</summary>
      <returns>이 뷰의 관리자 인스턴스입니다.</returns>
      <param name="name">관리자의 이름입니다.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.Editor.IWpfTextView.GetTextViewLineContainingBufferPosition(Microsoft.VisualStudio.Text.SnapshotPoint)">
      <summary>지정된 텍스트 버퍼 위치가 포함된 <see cref="T:Microsoft.VisualStudio.Text.Formatting.IWpfTextViewLine" />을 가져옵니다.</summary>
      <returns>지정된 버퍼 위치가 포함된 <see cref="T:Microsoft.VisualStudio.Text.Formatting.IWpfTextViewLine" />입니다.</returns>
      <param name="bufferPosition">텍스트 줄을 검색하는 데 사용되는 텍스트 버퍼 위치입니다.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="bufferPosition" /> is not a valid buffer position.</exception>
    </member>
    <member name="P:Microsoft.VisualStudio.Text.Editor.IWpfTextView.LineTransformSource">
      <summary>뷰에서 사용되는 줄 변환기를 가져옵니다.</summary>
    </member>
    <member name="P:Microsoft.VisualStudio.Text.Editor.IWpfTextView.TextViewLines">
      <summary>텍스트 뷰 줄을 <see cref="T:Microsoft.VisualStudio.Text.Editor.IWpfTextViewLineCollection" />으로 가져옵니다.</summary>
    </member>
    <member name="P:Microsoft.VisualStudio.Text.Editor.IWpfTextView.VisualElement">
      <summary>뷰를 렌더링하는 FrameworkElement를 가져옵니다.</summary>
    </member>
    <member name="P:Microsoft.VisualStudio.Text.Editor.IWpfTextView.ZoomLevel">
      <summary>20% - 400%에 해당하는 <see cref="T:Microsoft.VisualStudio.Text.Editor.IWpfTextView" />의 확대/축소 수준을 가져오거나 설정합니다.</summary>
    </member>
    <member name="E:Microsoft.VisualStudio.Text.Editor.IWpfTextView.ZoomLevelChanged">
      <summary>
        <see cref="P:Microsoft.VisualStudio.Text.Editor.IWpfTextView.ZoomLevel" />이 설정될 경우 발생합니다.</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.Text.Editor.IWpfTextViewConnectionListener">
      <summary>텍스트 편집기 내에서 특정 콘텐츠 형식의 텍스트 버퍼가 열리거나 닫히는 시점을 파악하기 위해 텍스트 버퍼를 수신 대기합니다.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.Editor.IWpfTextViewConnectionListener.SubjectBuffersConnected(Microsoft.VisualStudio.Text.Editor.IWpfTextView,Microsoft.VisualStudio.Text.Editor.ConnectionReason,System.Collections.ObjectModel.Collection{Microsoft.VisualStudio.Text.ITextBuffer})">
      <summary>적합한 <see cref="T:Microsoft.VisualStudio.Utilities.IContentType" />의 <see cref="T:Microsoft.VisualStudio.Text.ITextBuffer" /> 개체가 하나 이상 <see cref="T:Microsoft.VisualStudio.Text.Editor.ITextView" />에 연결될 경우 호출됩니다.</summary>
      <param name="textView">제목 버퍼가 연결되어 있는 <see cref="T:Microsoft.VisualStudio.Text.Editor.IWpfTextView" />입니다.</param>
      <param name="reason">연결된 이유입니다.</param>
      <param name="subjectBuffers">일치하는 콘텐츠 형식을 가진, 비어 있지 않은 <see cref="T:Microsoft.VisualStudio.Text.ITextBuffer" /> 개체 목록입니다.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.Editor.IWpfTextViewConnectionListener.SubjectBuffersDisconnected(Microsoft.VisualStudio.Text.Editor.IWpfTextView,Microsoft.VisualStudio.Text.Editor.ConnectionReason,System.Collections.ObjectModel.Collection{Microsoft.VisualStudio.Text.ITextBuffer})">
      <summary>하나 이상의 <see cref="T:Microsoft.VisualStudio.Text.ITextBuffer" /> 개체가 제목 버퍼에 포함될 수 있는 조건을 더 이상 충족하지 않을 경우 호출됩니다.</summary>
      <param name="textView">제목 버퍼와의 연결을 끊을 <see cref="T:Microsoft.VisualStudio.Text.Editor.ITextView" />입니다.</param>
      <param name="reason">연결을 끊은 이유입니다.</param>
      <param name="subjectBuffers">비어 있지 않은 <see cref="T:Microsoft.VisualStudio.Text.ITextBuffer" /> 개체 목록입니다.</param>
    </member>
    <member name="T:Microsoft.VisualStudio.Text.Editor.IWpfTextViewCreationListener">
      <summary>텍스트 뷰가 만들어지는 이벤트를 수신합니다.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.Editor.IWpfTextViewCreationListener.TextViewCreated(Microsoft.VisualStudio.Text.Editor.IWpfTextView)">
      <summary>일치하는 콘텐츠 형식을 가진 텍스트 데이터 모델에 대해 일치하는 역할을 가진 텍스트 뷰가 만들어질 경우 호출됩니다.</summary>
      <param name="textView">새로 만들어진 텍스트 뷰입니다.</param>
    </member>
    <member name="T:Microsoft.VisualStudio.Text.Editor.IWpfTextViewHost">
      <summary>
        <see cref="T:Microsoft.VisualStudio.Text.Editor.IWpfTextView" />와 이를 둘러싼 여백(예: 스크롤 막대 또는 줄 번호 여백)을 포함합니다.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.Editor.IWpfTextViewHost.Close">
      <summary>텍스트 뷰 호스트와 해당 기본 텍스트 뷰를 닫습니다.</summary>
      <exception cref="T:System.InvalidOperationException">The text view host is already closed.</exception>
    </member>
    <member name="E:Microsoft.VisualStudio.Text.Editor.IWpfTextViewHost.Closed">
      <summary>텍스트 뷰를 닫은 직후 발생합니다.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.Editor.IWpfTextViewHost.GetTextViewMargin(System.String)">
      <summary>이 <see cref="T:Microsoft.VisualStudio.Text.Editor.IWpfTextView" />의 가장자리에 연결되어 있으면서 지정된 <paramref name="marginName" />을 가진 <see cref="T:Microsoft.VisualStudio.Text.Editor.ITextViewMargin" />을 가져옵니다.</summary>
      <returns>
        <paramref name="marginName" />과 일치하는 이름을 가진 <see cref="T:Microsoft.VisualStudio.Text.Editor.ITextViewMargin" />입니다.</returns>
      <param name="marginName">
        <see cref="T:Microsoft.VisualStudio.Text.Editor.ITextViewMargin" />의 이름입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="marginName" /> is null.</exception>
    </member>
    <member name="P:Microsoft.VisualStudio.Text.Editor.IWpfTextViewHost.HostControl">
      <summary>이 <see cref="T:Microsoft.VisualStudio.Text.Editor.IWpfTextViewHost" />의 WPF 컨트롤을 가져옵니다.</summary>
    </member>
    <member name="P:Microsoft.VisualStudio.Text.Editor.IWpfTextViewHost.IsClosed">
      <summary>이 텍스트 뷰가 닫혔는지 여부를 확인합니다.</summary>
    </member>
    <member name="P:Microsoft.VisualStudio.Text.Editor.IWpfTextViewHost.TextView">
      <summary>이 <see cref="T:Microsoft.VisualStudio.Text.Editor.IWpfTextViewHost" /> 내에 포함된 <see cref="T:Microsoft.VisualStudio.Text.Editor.IWpfTextView" />를 가져옵니다.</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.Text.Editor.IWpfTextViewLineCollection">
      <summary>
        <see cref="T:Microsoft.VisualStudio.Text.Editor.ITextView" />에서 뷰의 <see cref="T:Microsoft.VisualStudio.Text.Formatting.ITextViewLine" /> 개체 컬렉션에 액세스할 수 있도록 허용합니다. <see cref="T:Microsoft.VisualStudio.Text.Editor.ITextView" />의 TextViewLines 속성은 ITextViewLineCollection 인터페이스의 인스턴스를 가져오는 데 사용됩니다.</summary>
    </member>
    <member name="P:Microsoft.VisualStudio.Text.Editor.IWpfTextViewLineCollection.FirstVisibleLine"></member>
    <member name="M:Microsoft.VisualStudio.Text.Editor.IWpfTextViewLineCollection.GetLineMarkerGeometry(Microsoft.VisualStudio.Text.SnapshotSpan)"></member>
    <member name="M:Microsoft.VisualStudio.Text.Editor.IWpfTextViewLineCollection.GetLineMarkerGeometry(Microsoft.VisualStudio.Text.SnapshotSpan,System.Boolean,System.Windows.Thickness)"></member>
    <member name="M:Microsoft.VisualStudio.Text.Editor.IWpfTextViewLineCollection.GetMarkerGeometry(Microsoft.VisualStudio.Text.SnapshotSpan)">
      <summary>버퍼의 지정된 텍스트 범위에 대한 표식 기하 도형을 가져옵니다.</summary>
      <returns>범위에 있는 서식 있는 모든 텍스트를 포함하는 <see cref="T:System.Windows.Media.Geometry" />입니다. 범위가 비어 있거나 범위가 <see cref="T:Microsoft.VisualStudio.Text.Editor.ITextView" />에서 서식이 지정된 텍스트와 교차하지 않는 경우 null입니다.</returns>
      <param name="bufferSpan">텍스트 범위입니다.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="bufferSpan" /> is not a valid <see cref="T:Microsoft.VisualStudio.Text.SnapshotSpan" /> on the buffer.</exception>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.Editor.IWpfTextViewLineCollection.GetMarkerGeometry(Microsoft.VisualStudio.Text.SnapshotSpan,System.Boolean,System.Windows.Thickness)"></member>
    <member name="M:Microsoft.VisualStudio.Text.Editor.IWpfTextViewLineCollection.GetTextMarkerGeometry(Microsoft.VisualStudio.Text.SnapshotSpan)"></member>
    <member name="M:Microsoft.VisualStudio.Text.Editor.IWpfTextViewLineCollection.GetTextMarkerGeometry(Microsoft.VisualStudio.Text.SnapshotSpan,System.Boolean,System.Windows.Thickness)"></member>
    <member name="M:Microsoft.VisualStudio.Text.Editor.IWpfTextViewLineCollection.GetTextViewLineContainingBufferPosition(Microsoft.VisualStudio.Text.SnapshotPoint)">
      <summary>지정된 텍스트 버퍼 위치가 포함된 <see cref="T:Microsoft.VisualStudio.Text.Formatting.IWpfTextViewLine" />을 가져옵니다.</summary>
      <returns>위치를 포함하는 ITextViewLine이거나, 해당 항목이 없는 경우 null입니다.</returns>
      <param name="bufferPosition">텍스트 줄을 검색하는 데 사용되는 텍스트 버퍼 위치입니다.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="bufferPosition" /> is not a valid buffer position.</exception>
    </member>
    <member name="P:Microsoft.VisualStudio.Text.Editor.IWpfTextViewLineCollection.Item(System.Int32)"></member>
    <member name="P:Microsoft.VisualStudio.Text.Editor.IWpfTextViewLineCollection.LastVisibleLine"></member>
    <member name="P:Microsoft.VisualStudio.Text.Editor.IWpfTextViewLineCollection.WpfTextViewLines">
      <summary>
        <see cref="T:Microsoft.VisualStudio.Text.Formatting.IWpfTextViewLine" /> 개체의 컬렉션을 가져옵니다.</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.Text.Editor.IWpfTextViewMargin">
      <summary>WPF 텍스트 뷰 여백을 나타냅니다.</summary>
    </member>
    <member name="P:Microsoft.VisualStudio.Text.Editor.IWpfTextViewMargin.VisualElement">
      <summary>여백을 렌더링하는 FrameworkElement를 가져옵니다.</summary>
      <exception cref="T:System.ObjectDisposedException">if the margin is disposed.</exception>
    </member>
    <member name="T:Microsoft.VisualStudio.Text.Editor.IWpfTextViewMarginProvider">
      <summary>지정된 <see cref="T:Microsoft.VisualStudio.Text.Editor.IWpfTextViewHost" />에 대한 <see cref="T:Microsoft.VisualStudio.Text.Editor.IWpfTextViewMargin" />을 만듭니다.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.Editor.IWpfTextViewMarginProvider.CreateMargin(Microsoft.VisualStudio.Text.Editor.IWpfTextViewHost,Microsoft.VisualStudio.Text.Editor.IWpfTextViewMargin)">
      <summary>지정된 <see cref="T:Microsoft.VisualStudio.Text.Editor.IWpfTextViewHost" />에 대한 <see cref="T:Microsoft.VisualStudio.Text.Editor.IWpfTextViewMargin" />을 만듭니다.</summary>
      <returns>
        <see cref="T:Microsoft.VisualStudio.Text.Editor.IWpfTextViewMargin" />입니다.  이 <see cref="T:Microsoft.VisualStudio.Text.Editor.IWpfTextViewMarginProvider" />에서 이 컨텍스트에 참여하지 않는 경우 값이 null일 수 있습니다.</returns>
      <param name="wpfTextViewHost">
        <see cref="T:Microsoft.VisualStudio.Text.Editor.IWpfTextViewMargin" />을 만들 <see cref="T:Microsoft.VisualStudio.Text.Editor.IWpfTextViewHost" />입니다.</param>
      <param name="marginContainer">새로 만들어진 여백을 포함할 여백입니다.</param>
    </member>
    <member name="T:Microsoft.VisualStudio.Text.Editor.KeyProcessor">
      <summary>편집기의 키보드 입력을 처리합니다.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.Editor.KeyProcessor.#ctor">
      <summary>
        <see cref="T:Microsoft.VisualStudio.Text.Editor.KeyProcessor" />의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="P:Microsoft.VisualStudio.Text.Editor.KeyProcessor.IsInterestedInHandledEvents">
      <summary>이 프로세서가 이전 <see cref="T:Microsoft.VisualStudio.Text.Editor.KeyProcessor" /> 개체에서 처리한 이벤트에 대해 호출되는지 여부를 확인합니다.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.Editor.KeyProcessor.KeyDown(System.Windows.Input.KeyEventArgs)">
      <summary>KeyDown 이벤트를 처리합니다.</summary>
      <param name="args">키 이벤트를 설명하는 <see cref="T:System.Windows.Input.KeyEventArgs" />입니다.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.Editor.KeyProcessor.KeyUp(System.Windows.Input.KeyEventArgs)">
      <summary>KeyUp 이벤트를 처리합니다.</summary>
      <param name="args">키 이벤트를 설명하는 <see cref="T:System.Windows.Input.KeyEventArgs" />입니다.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.Editor.KeyProcessor.PreviewKeyDown(System.Windows.Input.KeyEventArgs)">
      <summary>PreviewKeyDown 이벤트를 처리합니다.</summary>
      <param name="args">키 이벤트를 설명하는 <see cref="T:System.Windows.Input.KeyEventArgs" />입니다.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.Editor.KeyProcessor.PreviewKeyUp(System.Windows.Input.KeyEventArgs)">
      <summary>PreviewKeyUp 이벤트를 처리합니다.</summary>
      <param name="args">키 이벤트를 설명하는 <see cref="T:System.Windows.Input.KeyEventArgs" />입니다.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.Editor.KeyProcessor.PreviewTextInput(System.Windows.Input.TextCompositionEventArgs)">
      <summary>PreviewTextInput 이벤트를 처리합니다.</summary>
      <param name="args">키 이벤트를 설명하는 <see cref="T:System.Windows.Input.KeyEventArgs" />입니다.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.Editor.KeyProcessor.PreviewTextInputStart(System.Windows.Input.TextCompositionEventArgs)">
      <summary>PreviewTextInputStart 이벤트를 처리합니다.</summary>
      <param name="args">키 이벤트를 설명하는 <see cref="T:System.Windows.Input.KeyEventArgs" />입니다.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.Editor.KeyProcessor.PreviewTextInputUpdate(System.Windows.Input.TextCompositionEventArgs)">
      <summary>PreviewTextInputUpdate 이벤트를 처리합니다.</summary>
      <param name="args">키 이벤트를 설명하는 <see cref="T:System.Windows.Input.KeyEventArgs" />입니다.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.Editor.KeyProcessor.TextInput(System.Windows.Input.TextCompositionEventArgs)">
      <summary>TextInput 이벤트를 처리합니다.</summary>
      <param name="args">키 이벤트를 설명하는 <see cref="T:System.Windows.Input.KeyEventArgs" />입니다.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.Editor.KeyProcessor.TextInputStart(System.Windows.Input.TextCompositionEventArgs)">
      <summary>TextInputStart 이벤트를 처리합니다.</summary>
      <param name="args">키 이벤트를 설명하는 <see cref="T:System.Windows.Input.KeyEventArgs" />입니다.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.Editor.KeyProcessor.TextInputUpdate(System.Windows.Input.TextCompositionEventArgs)">
      <summary>TextInputUpdate 이벤트를 처리합니다.</summary>
      <param name="args">키 이벤트를 설명하는 <see cref="T:System.Windows.Input.KeyEventArgs" />입니다.</param>
    </member>
    <member name="T:Microsoft.VisualStudio.Text.Editor.MouseProcessorBase">
      <summary>클라이언트가 필요한 메서드만 재정의할 수 있도록 마우스 바인딩에 대한 기본 구현을 제공합니다.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.Editor.MouseProcessorBase.#ctor">
      <summary>
        <see cref="T:Microsoft.VisualStudio.Text.Editor.MouseProcessorBase" />의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.Editor.MouseProcessorBase.PostprocessDragEnter(System.Windows.DragEventArgs)">
      <summary>기본 처리기 이후에 범위 안으로 끌기 이벤트를 처리합니다.</summary>
      <param name="e">이벤트의 인수입니다.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.Editor.MouseProcessorBase.PostprocessDragLeave(System.Windows.DragEventArgs)">
      <summary>기본 처리기 이후에 범위 밖으로 끌기 이벤트를 처리합니다.</summary>
      <param name="e">이벤트의 인수입니다.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.Editor.MouseProcessorBase.PostprocessDragOver(System.Windows.DragEventArgs)">
      <summary>기본 처리기 이후에 범위 위로 끌기 이벤트를 처리합니다.</summary>
      <param name="e">이벤트의 인수입니다.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.Editor.MouseProcessorBase.PostprocessDrop(System.Windows.DragEventArgs)">
      <summary>기본 처리기 이후에 놓기 이벤트를 처리합니다.</summary>
      <param name="e">이벤트의 인수입니다.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.Editor.MouseProcessorBase.PostprocessGiveFeedback(System.Windows.GiveFeedbackEventArgs)">
      <summary>기본 처리기 이후에 피드백 이벤트를 처리합니다.</summary>
      <param name="e">이벤트의 인수입니다.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.Editor.MouseProcessorBase.PostprocessMouseEnter(System.Windows.Input.MouseEventArgs)">
      <summary>기본 처리기 이후에 범위 안으로 마우스 이동 이벤트를 처리합니다.</summary>
      <param name="e">이벤트의 인수입니다.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.Editor.MouseProcessorBase.PostprocessMouseLeave(System.Windows.Input.MouseEventArgs)">
      <summary>기본 처리기 이후에 범위 밖으로 마우스 이동 이벤트를 처리합니다.</summary>
      <param name="e">이벤트의 인수입니다.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.Editor.MouseProcessorBase.PostprocessMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)">
      <summary>기본 처리기 이후에 마우스 왼쪽 단추 누르기 이벤트를 처리합니다.</summary>
      <param name="e">이벤트의 인수입니다.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.Editor.MouseProcessorBase.PostprocessMouseLeftButtonUp(System.Windows.Input.MouseButtonEventArgs)">
      <summary>기본 처리기 이후에 마우스 왼쪽 단추 놓기 이벤트를 처리합니다.</summary>
      <param name="e">이벤트의 인수입니다.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.Editor.MouseProcessorBase.PostprocessMouseMove(System.Windows.Input.MouseEventArgs)">
      <summary>기본 처리기 이후에 마우스 이동 이벤트를 처리합니다.</summary>
      <param name="e">이벤트의 인수입니다.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.Editor.MouseProcessorBase.PostprocessMouseRightButtonDown(System.Windows.Input.MouseButtonEventArgs)">
      <summary>기본 처리기 이후에 마우스 오른쪽 단추 누르기 이벤트를 처리합니다.</summary>
      <param name="e">이벤트의 인수입니다.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.Editor.MouseProcessorBase.PostprocessMouseRightButtonUp(System.Windows.Input.MouseButtonEventArgs)">
      <summary>기본 처리기 이후에 마우스 오른쪽 단추 놓기 이벤트를 처리합니다.</summary>
      <param name="e">이벤트의 인수입니다.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.Editor.MouseProcessorBase.PostprocessMouseWheel(System.Windows.Input.MouseWheelEventArgs)">
      <summary>기본 처리기 이후에 마우스 휠 이벤트를 처리합니다.</summary>
      <param name="e">이벤트의 인수입니다.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.Editor.MouseProcessorBase.PostprocessQueryContinueDrag(System.Windows.QueryContinueDragEventArgs)">
      <summary>기본 처리기 이후에 끌기 계속 쿼리 이벤트를 처리합니다.</summary>
      <param name="e">이벤트의 인수입니다.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.Editor.MouseProcessorBase.PreprocessDragEnter(System.Windows.DragEventArgs)">
      <summary>기본 처리기 이전에 범위 안으로 끌기 이벤트를 처리합니다.</summary>
      <param name="e">이벤트의 인수입니다.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.Editor.MouseProcessorBase.PreprocessDragLeave(System.Windows.DragEventArgs)">
      <summary>기본 처리기 이전에 범위 밖으로 끌기 이벤트를 처리합니다.</summary>
      <param name="e">이벤트의 인수입니다.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.Editor.MouseProcessorBase.PreprocessDragOver(System.Windows.DragEventArgs)">
      <summary>기본 처리기 이전에 범위 위로 끌기 이벤트를 처리합니다.</summary>
      <param name="e">이벤트의 인수입니다.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.Editor.MouseProcessorBase.PreprocessDrop(System.Windows.DragEventArgs)">
      <summary>기본 처리기 이전에 놓기 이벤트를 처리합니다.</summary>
      <param name="e">이벤트의 인수입니다.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.Editor.MouseProcessorBase.PreprocessGiveFeedback(System.Windows.GiveFeedbackEventArgs)">
      <summary>기본 처리기 이전에 피드백 이벤트를 처리합니다.</summary>
      <param name="e">이벤트의 인수입니다.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.Editor.MouseProcessorBase.PreprocessMouseEnter(System.Windows.Input.MouseEventArgs)">
      <summary>기본 처리기 이전에 범위 안으로 마우스 이동 이벤트를 처리합니다.</summary>
      <param name="e">이벤트의 인수입니다.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.Editor.MouseProcessorBase.PreprocessMouseLeave(System.Windows.Input.MouseEventArgs)">
      <summary>기본 처리기 이전에 범위 밖으로 마우스 이동 이벤트를 처리합니다.</summary>
      <param name="e">이벤트의 인수입니다.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.Editor.MouseProcessorBase.PreprocessMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)">
      <summary>기본 처리기 이전에 마우스 왼쪽 단추 누르기 이벤트를 처리합니다.</summary>
      <param name="e">이벤트의 인수입니다.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.Editor.MouseProcessorBase.PreprocessMouseLeftButtonUp(System.Windows.Input.MouseButtonEventArgs)">
      <summary>기본 처리기 이전에 마우스 왼쪽 단추 놓기 이벤트를 처리합니다.</summary>
      <param name="e">이벤트의 인수입니다.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.Editor.MouseProcessorBase.PreprocessMouseMove(System.Windows.Input.MouseEventArgs)">
      <summary>기본 처리기 이전에 마우스 이동 이벤트를 처리합니다.</summary>
      <param name="e">이벤트의 인수입니다.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.Editor.MouseProcessorBase.PreprocessMouseRightButtonDown(System.Windows.Input.MouseButtonEventArgs)">
      <summary>기본 처리기 이전에 마우스 오른쪽 단추 누르기 이벤트를 처리합니다.</summary>
      <param name="e">이벤트의 인수입니다.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.Editor.MouseProcessorBase.PreprocessMouseRightButtonUp(System.Windows.Input.MouseButtonEventArgs)">
      <summary>기본 처리기 이전에 마우스 오른쪽 단추 놓기 이벤트를 처리합니다.</summary>
      <param name="e">이벤트의 인수입니다.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.Editor.MouseProcessorBase.PreprocessMouseWheel(System.Windows.Input.MouseWheelEventArgs)">
      <summary>기본 처리기 이전에 마우스 휠 이벤트를 처리합니다.</summary>
      <param name="e">이벤트의 인수입니다.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.Editor.MouseProcessorBase.PreprocessQueryContinueDrag(System.Windows.QueryContinueDragEventArgs)">
      <summary>기본 처리기 이전에 끌기 계속 쿼리 이벤트를 처리합니다.</summary>
      <param name="e">이벤트의 인수입니다.</param>
    </member>
    <member name="T:Microsoft.VisualStudio.Text.Editor.MouseWheelZoomEnabled">
      <summary>마우스 휠을 사용한 확대/축소를 사용하도록 설정하는 옵션을 정의합니다.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.Editor.MouseWheelZoomEnabled.#ctor">
      <summary>
        <see cref="T:Microsoft.VisualStudio.Text.Editor.MouseWheelZoomEnabled" />의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="P:Microsoft.VisualStudio.Text.Editor.MouseWheelZoomEnabled.Default">
      <summary>기본값인 true를 가져옵니다.</summary>
    </member>
    <member name="P:Microsoft.VisualStudio.Text.Editor.MouseWheelZoomEnabled.Key">
      <summary>WPF 텍스트 뷰 값을 가져옵니다.</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.Text.Editor.OutliningCollapsedAdornmentControl">
      <summary>텍스트 뷰의 축소된 텍스트를 나타냅니다.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.Editor.OutliningCollapsedAdornmentControl.#ctor">
      <summary>
        <see cref="T:Microsoft.VisualStudio.Text.Editor.OutliningCollapsedAdornmentControl" />의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.Text.Editor.OutliningMarginBracketControl">
      <summary>확장된 개요 영역의 세로 범위를 나타내며 사용자가 이를 축소하도록 허용합니다.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.Editor.OutliningMarginBracketControl.#ctor">
      <summary>
        <see cref="T:Microsoft.VisualStudio.Text.Editor.OutliningMarginBracketControl" />의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="P:Microsoft.VisualStudio.Text.Editor.OutliningMarginBracketControl.FirstLineOffset"></member>
    <member name="F:Microsoft.VisualStudio.Text.Editor.OutliningMarginBracketControl.FirstLineOffsetProperty"></member>
    <member name="M:Microsoft.VisualStudio.Text.Editor.OutliningMarginBracketControl.GetFirstLineOffset(Microsoft.VisualStudio.Text.Editor.OutliningMarginBracketControl)"></member>
    <member name="M:Microsoft.VisualStudio.Text.Editor.OutliningMarginBracketControl.GetIsHighlighted(Microsoft.VisualStudio.Text.Editor.OutliningMarginBracketControl)">
      <summary>
        <see cref="F:Microsoft.VisualStudio.Text.Editor.OutliningMarginBracketControl.IsHighlightedProperty" />를 가져옵니다.</summary>
      <returns>컨트롤이 강조 표시되면 true이고, 그렇지 않으면 false입니다.</returns>
      <param name="control">
        <see cref="T:Microsoft.VisualStudio.Text.Editor.OutliningMarginBracketControl" />입니다.</param>
    </member>
    <member name="P:Microsoft.VisualStudio.Text.Editor.OutliningMarginBracketControl.IsHighlighted">
      <summary>
        <see cref="F:Microsoft.VisualStudio.Text.Editor.OutliningMarginBracketControl.IsHighlightedProperty" />를 가져오거나 설정합니다.</summary>
      <returns>컨트롤이 강조 표시되면 true이고, 그렇지 않으면 false입니다.</returns>
    </member>
    <member name="F:Microsoft.VisualStudio.Text.Editor.OutliningMarginBracketControl.IsHighlightedProperty">
      <summary>이 컨트롤에서 현재 마우스가 가리키는 위치를 강조 표시할 것인지 여부를 결정하는 <see cref="T:System.Windows.DependencyProperty" />입니다.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.Editor.OutliningMarginBracketControl.OnIsHighlightedChanged(System.Boolean)"></member>
    <member name="M:Microsoft.VisualStudio.Text.Editor.OutliningMarginBracketControl.SetFirstLineOffset(Microsoft.VisualStudio.Text.Editor.OutliningMarginBracketControl,System.Double)"></member>
    <member name="M:Microsoft.VisualStudio.Text.Editor.OutliningMarginBracketControl.SetIsHighlighted(Microsoft.VisualStudio.Text.Editor.OutliningMarginBracketControl,System.Boolean)">
      <summary>
        <see cref="F:Microsoft.VisualStudio.Text.Editor.OutliningMarginBracketControl.IsHighlightedProperty" />를 설정합니다.</summary>
      <param name="control">
        <see cref="T:Microsoft.VisualStudio.Text.Editor.OutliningMarginBracketControl" />입니다.</param>
      <param name="isExpanded">컨트롤이 강조 표시되면 true이고, 그렇지 않으면 false입니다.</param>
    </member>
    <member name="T:Microsoft.VisualStudio.Text.Editor.OutliningMarginControl">
      <summary>개요 여백을 나타냅니다.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.Editor.OutliningMarginControl.#ctor">
      <summary>
        <see cref="T:Microsoft.VisualStudio.Text.Editor.OutliningMarginControl" />의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.Text.Editor.OutliningMarginHeaderControl">
      <summary>개요 영역을 축소 및 확장할 수 있도록 합니다.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.Editor.OutliningMarginHeaderControl.#ctor">
      <summary>
        <see cref="T:Microsoft.VisualStudio.Text.Editor.OutliningMarginHeaderControl" />의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.Editor.OutliningMarginHeaderControl.GetIsExpanded(Microsoft.VisualStudio.Text.Editor.OutliningMarginHeaderControl)">
      <summary>
        <see cref="F:Microsoft.VisualStudio.Text.Editor.OutliningMarginHeaderControl.IsExpandedProperty" />를 가져옵니다.</summary>
      <returns>컨트롤이 확장되면 true이고, 그렇지 않으면 false입니다.</returns>
      <param name="control">
        <see cref="T:Microsoft.VisualStudio.Text.Editor.OutliningMarginHeaderControl" />입니다.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.Editor.OutliningMarginHeaderControl.GetIsHighlighted(Microsoft.VisualStudio.Text.Editor.OutliningMarginHeaderControl)">
      <summary>
        <see cref="F:Microsoft.VisualStudio.Text.Editor.OutliningMarginHeaderControl.IsHighlightedProperty" />를 가져옵니다.</summary>
      <returns>컨트롤이 강조 표시되면 true이고, 그렇지 않으면 false입니다.</returns>
      <param name="control">
        <see cref="T:Microsoft.VisualStudio.Text.Editor.OutliningMarginHeaderControl" />입니다.</param>
    </member>
    <member name="P:Microsoft.VisualStudio.Text.Editor.OutliningMarginHeaderControl.IsExpanded">
      <summary>
        <see cref="F:Microsoft.VisualStudio.Text.Editor.OutliningMarginHeaderControl.IsExpandedProperty" />를 가져오거나 설정합니다.</summary>
      <returns>컨트롤이 확장되면 true이고, 그렇지 않으면 false입니다.</returns>
    </member>
    <member name="F:Microsoft.VisualStudio.Text.Editor.OutliningMarginHeaderControl.IsExpandedProperty">
      <summary>이 컨트롤에서 제어하는 개요 영역을 축소할 것인지 아니면 확장할 것인지를 결정하는 <see cref="T:System.Windows.DependencyProperty" />입니다.</summary>
    </member>
    <member name="P:Microsoft.VisualStudio.Text.Editor.OutliningMarginHeaderControl.IsHighlighted">
      <summary>
        <see cref="F:Microsoft.VisualStudio.Text.Editor.OutliningMarginHeaderControl.IsHighlightedProperty" />를 가져오거나 설정합니다.</summary>
      <returns>컨트롤이 강조 표시되면 true이고, 그렇지 않으면 false입니다.</returns>
    </member>
    <member name="F:Microsoft.VisualStudio.Text.Editor.OutliningMarginHeaderControl.IsHighlightedProperty">
      <summary>이 컨트롤에서 현재 마우스가 가리키는 위치를 강조 표시할 것인지 여부를 결정하는 <see cref="T:System.Windows.DependencyProperty" />입니다.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.Editor.OutliningMarginHeaderControl.SetIsExpanded(Microsoft.VisualStudio.Text.Editor.OutliningMarginHeaderControl,System.Boolean)">
      <summary>
        <see cref="F:Microsoft.VisualStudio.Text.Editor.OutliningMarginHeaderControl.IsExpandedProperty" />를 설정합니다.</summary>
      <param name="control">
        <see cref="T:Microsoft.VisualStudio.Text.Editor.OutliningMarginHeaderControl" />입니다.</param>
      <param name="isExpanded">컨트롤이 확장되면 true이고, 그렇지 않으면 false입니다.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.Editor.OutliningMarginHeaderControl.SetIsHighlighted(Microsoft.VisualStudio.Text.Editor.OutliningMarginHeaderControl,System.Boolean)">
      <summary>
        <see cref="F:Microsoft.VisualStudio.Text.Editor.OutliningMarginHeaderControl.IsHighlightedProperty" />를 설정합니다.</summary>
      <param name="control">
        <see cref="T:Microsoft.VisualStudio.Text.Editor.OutliningMarginHeaderControl" />입니다.</param>
      <param name="isExpanded">컨트롤이 강조 표시되면 true이고, 그렇지 않으면 false입니다.</param>
    </member>
    <member name="T:Microsoft.VisualStudio.Text.Editor.PredefinedAdornmentLayers">
      <summary>이 정적 클래스는 편집기에서 미리 정의한 장식 레이어의 이름을 정의합니다.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Text.Editor.PredefinedAdornmentLayers.Caret">
      <summary>캐럿 레이어는 텍스트 캐럿을 포함합니다.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Text.Editor.PredefinedAdornmentLayers.Outlining">
      <summary>개요 레이어는 축소 힌트 장식을 포함합니다.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Text.Editor.PredefinedAdornmentLayers.Selection">
      <summary>선택 영역 레이어는 IME 입력 모드에 대해 선택 영역 및 임시 강조 표시 텍스트 캐럿을 호스팅합니다.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Text.Editor.PredefinedAdornmentLayers.Squiggle"></member>
    <member name="F:Microsoft.VisualStudio.Text.Editor.PredefinedAdornmentLayers.Text">
      <summary>텍스트 레이어는 편집기의 텍스트 콘텐츠를 포함합니다.</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.Text.Editor.SimpleGraphicsOption">
      <summary>단색 선택 영역과는 반대로 선택 영역 그라데이션을 그리기 위한 옵션을 나타냅니다.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.Editor.SimpleGraphicsOption.#ctor"></member>
    <member name="P:Microsoft.VisualStudio.Text.Editor.SimpleGraphicsOption.Default">
      <summary>기본값을 가져옵니다.</summary>
    </member>
    <member name="P:Microsoft.VisualStudio.Text.Editor.SimpleGraphicsOption.Key">
      <summary>현재 줄 강조 표시 옵션에 대한 키를 가져옵니다.</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.Text.Editor.SpaceReservationAgentChangedEventArgs">
      <summary>
        <see cref="T:Microsoft.VisualStudio.Text.Editor.ISpaceReservationManager" />에서 <see cref="T:Microsoft.VisualStudio.Text.Editor.ISpaceReservationAgent" />가 변경될 경우 정보를 제공합니다.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.Editor.SpaceReservationAgentChangedEventArgs.#ctor(Microsoft.VisualStudio.Text.Editor.ISpaceReservationAgent,Microsoft.VisualStudio.Text.Editor.ISpaceReservationAgent)">
      <summary>
        <see cref="T:Microsoft.VisualStudio.Text.Editor.SpaceReservationAgentChangedEventArgs" />의 새 인스턴스를 초기화합니다.</summary>
      <param name="oldAgent">이전 값과 연결된 <see cref="T:Microsoft.VisualStudio.Text.Editor.ISpaceReservationAgent" />입니다.</param>
      <param name="newAgent">새 값과 연결된 <see cref="T:Microsoft.VisualStudio.Text.Editor.ISpaceReservationAgent" />입니다.</param>
    </member>
    <member name="P:Microsoft.VisualStudio.Text.Editor.SpaceReservationAgentChangedEventArgs.NewAgent">
      <summary>새 에이전트를 가져옵니다.</summary>
    </member>
    <member name="P:Microsoft.VisualStudio.Text.Editor.SpaceReservationAgentChangedEventArgs.OldAgent">
      <summary>이전 에이전트를 가져옵니다.</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.Text.Editor.SpaceReservationManagerDefinition">
      <summary>
        <see cref="T:Microsoft.VisualStudio.Text.Editor.ISpaceReservationManager" />의 메타데이터를 나타냅니다.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.Editor.SpaceReservationManagerDefinition.#ctor">
      <summary>
        <see cref="T:Microsoft.VisualStudio.Text.Editor.SpaceReservationManagerDefinition" />의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.Text.Editor.WpfTextViewKeyboardFilterName">
      <summary>KeyboardFilter 순서 지정 이름을 나타냅니다.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Text.Editor.WpfTextViewKeyboardFilterName.KeyboardFilterOrderingName">
      <summary>IKeyboardFilterProvider 프로덕션에서 Name 특성의 값입니다.</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.Text.Editor.WpfViewOptionDefinition`1">
      <summary>
        <see cref="T:Microsoft.VisualStudio.Text.Editor.IWpfTextView" />와 관련된 편집기 옵션을 정의합니다.</summary>
      <typeparam name="T"></typeparam>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.Editor.WpfViewOptionDefinition`1.#ctor">
      <summary>
        <see cref="T:Microsoft.VisualStudio.Text.Editor.WpfViewOptionDefinition`1" />의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.Editor.WpfViewOptionDefinition`1.IsApplicableToScope(Microsoft.VisualStudio.Utilities.IPropertyOwner)">
      <summary>이 정의를 텍스트 뷰에만 적용할 수 있는지 여부를 확인합니다.</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.Text.Editor.ZoomControl">
      <summary>텍스트 뷰의 확대/축소 컨트롤을 나타냅니다.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.Editor.ZoomControl.#ctor">
      <summary>
        <see cref="T:Microsoft.VisualStudio.Text.Editor.ZoomControl" />의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.Editor.ZoomControl.GetSelectedZoomLevel(System.Windows.DependencyObject)">
      <summary>SelectedZoomLevelProperty를 가져옵니다.</summary>
      <returns>선택된 확대/축소 수준을 나타내는 double입니다.</returns>
      <param name="control">
        <see cref="T:System.Windows.DependencyProperty" />.</param>
    </member>
    <member name="P:Microsoft.VisualStudio.Text.Editor.ZoomControl.SelectedZoomLevel">
      <summary>SelectedZoomLevelProperty를 가져오거나 설정합니다.</summary>
      <returns>선택된 확대/축소 수준입니다.</returns>
    </member>
    <member name="F:Microsoft.VisualStudio.Text.Editor.ZoomControl.SelectedZoomLevelProperty">
      <summary>컨트롤의 선택된 확대/축소 수준 속성을 결정하는 <see cref="T:System.Windows.DependencyProperty" />입니다.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.Editor.ZoomControl.SetSelectedZoomLevel(System.Windows.DependencyObject,System.Double)">
      <summary>SelectedZoomLevelProperty를 설정합니다.</summary>
      <param name="control">
        <see cref="T:System.Windows.DependencyProperty" />
      </param>
      <param name="value">확대/축소 수준입니다.</param>
    </member>
    <member name="T:Microsoft.VisualStudio.Text.Editor.ZoomLevelChangedEventArgs">
      <summary>
        <see cref="T:Microsoft.VisualStudio.Text.Editor.IWpfTextView" />의 ZoomLevelChangedEvent에 대한 정보를 제공합니다.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.Editor.ZoomLevelChangedEventArgs.#ctor(System.Double,System.Windows.Media.Transform)">
      <summary>
        <see cref="T:Microsoft.VisualStudio.Text.Editor.ZoomLevelChangedEventArgs" />의 새 인스턴스를 초기화합니다.</summary>
      <param name="newZoomLevel">
        <see cref="T:Microsoft.VisualStudio.Text.Editor.IWpfTextView" />의 새 확대/축소 수준입니다.</param>
      <param name="transform">
        <see cref="T:Microsoft.VisualStudio.Text.Editor.IWpfTextView" />에 사용되는 확대/축소 변환입니다.</param>
    </member>
    <member name="P:Microsoft.VisualStudio.Text.Editor.ZoomLevelChangedEventArgs.NewZoomLevel">
      <summary>
        <see cref="T:Microsoft.VisualStudio.Text.Editor.IWpfTextView" />의 새 확대/축소 수준을 가져옵니다.</summary>
    </member>
    <member name="P:Microsoft.VisualStudio.Text.Editor.ZoomLevelChangedEventArgs.ZoomTransform">
      <summary>적용할 확대/축소 변환을 가져옵니다.</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.Text.Editor.ZoomLevelConverter">
      <summary>확대/축소 수준을 문자열과 double 표현 간에 변환할 수 있는 값 변환기입니다.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.Editor.ZoomLevelConverter.#ctor">
      <summary>
        <see cref="T:Microsoft.VisualStudio.Text.Editor.ZoomLevelConverter" />의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.Editor.ZoomLevelConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
      <summary>값을 double에서 문자열로 변환합니다.</summary>
      <returns>확대/축소 수준의 문자열 표현입니다. 변환이 실패할 경우 <see cref="F:System.Windows.DependencyProperty.UnsetValue" />를 반환합니다.</returns>
      <param name="value">
        <see cref="T:System.Double" />에서의 확대/축소 수준입니다.</param>
      <param name="targetType">대상 형식(문자열 또는 double 형식)입니다.</param>
      <param name="parameter">매개 변수 값입니다.</param>
      <param name="culture">
        <see cref="T:System.Globalization.CultureInfo" />입니다.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.Editor.ZoomLevelConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
      <summary>값을 문자열에서 double로 변환합니다.</summary>
      <returns>확대/축소 수준의 <see cref="T:System.Double" /> 값입니다. 변환이 실패할 경우 <see cref="F:System.Windows.DependencyProperty.UnsetValue" />를 반환합니다.</returns>
      <param name="value">문자열에서의 확대/축소 수준입니다.</param>
      <param name="targetType">대상 형식입니다.</param>
      <param name="parameter">매개 변수 값입니다.</param>
      <param name="culture">
        <see cref="T:System.Globalization.CultureInfo" />입니다.</param>
    </member>
    <member name="T:Microsoft.VisualStudio.Text.Editor.DragDrop.DragDropInfo">
      <summary>진행 중인 끌어서 놓기 작업에 대한 정보를 제공합니다. 끌어서 놓기 작업의 상태가 변경될 때 <see cref="T:Microsoft.VisualStudio.Text.Editor.DragDrop.IDropHandler" /> 개체로 전달됩니다.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.Editor.DragDrop.DragDropInfo.#ctor(System.Windows.Point,System.Windows.DragDropKeyStates,System.Windows.IDataObject,System.Boolean,System.Object,System.Windows.DragDropEffects,Microsoft.VisualStudio.Text.VirtualSnapshotPoint)">
      <summary>지정된 설정을 사용하여 <see cref="T:Microsoft.VisualStudio.Text.Editor.DragDrop.DragDropInfo" />의 새 인스턴스를 초기화합니다.</summary>
      <param name="location">텍스트 뷰의 왼쪽 위 모퉁이에 상대적인 커서 위치입니다.</param>
      <param name="keyStates">작업하는 동안 키보드의 상태입니다.</param>
      <param name="data">끌어서 놓기 작업의 <see cref="T:System.Windows.IDataObject" />입니다.</param>
      <param name="isInternal">
                끌기가 편집기 내부에서 시작되었으면 true이고, 그렇지 않으면 false입니다.</param>
      <param name="source">끌어서 놓기 작업을 시작한 개체입니다.</param>
      <param name="allowedEffects">소스에서 허용하는 끌어서 놓기 효과입니다.</param>
      <param name="bufferPosition">끌어서 놓기 작업 동안 커서의 버퍼 위치입니다.</param>
    </member>
    <member name="P:Microsoft.VisualStudio.Text.Editor.DragDrop.DragDropInfo.AllowedEffects">
      <summary>소스에서 허용하는 끌어서 놓기 효과를 가져옵니다.</summary>
    </member>
    <member name="P:Microsoft.VisualStudio.Text.Editor.DragDrop.DragDropInfo.Data">
      <summary>끌어서 놓기 작업의 <see cref="T:System.Windows.IDataObject" />를 나타냅니다.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.Editor.DragDrop.DragDropInfo.Equals(System.Object)">
      <summary>두 <see cref="T:Microsoft.VisualStudio.Text.Editor.DragDrop.DragDropInfo" /> 개체가 같은 설정을 갖는지 여부를 확인합니다.</summary>
      <returns>
            두 개체가 같은 설정을 가지면 true이고, 그렇지 않으면 false입니다.</returns>
      <param name="obj">비교할 개체입니다.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.Editor.DragDrop.DragDropInfo.GetHashCode">
      <summary>이 <see cref="T:Microsoft.VisualStudio.Text.Editor.DragDrop.DragDropInfo" /> 개체의 해시 코드를 가져옵니다.</summary>
      <returns>해시 코드입니다.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.Text.Editor.DragDrop.DragDropInfo.IsInternal">
      <summary>끌어서 놓기 작업이 편집기 내부에서 시작되었는지 여부를 확인합니다.</summary>
    </member>
    <member name="P:Microsoft.VisualStudio.Text.Editor.DragDrop.DragDropInfo.KeyStates">
      <summary>작업 동안 키보드의 상태를 가져옵니다. 이 필드를 쿼리하여 특정 키가 눌러졌는지 여부를 확인할 수 있습니다.</summary>
    </member>
    <member name="P:Microsoft.VisualStudio.Text.Editor.DragDrop.DragDropInfo.Location">
      <summary>텍스트 뷰의 왼쪽 위 모퉁이에 상대적인 커서 위치를 가져옵니다.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.Editor.DragDrop.DragDropInfo.op_Equality(Microsoft.VisualStudio.Text.Editor.DragDrop.DragDropInfo,Microsoft.VisualStudio.Text.Editor.DragDrop.DragDropInfo)">
      <summary>두 <see cref="T:Microsoft.VisualStudio.Text.Editor.DragDrop.DragDropInfo" /> 개체가 같은 설정을 갖는지 여부를 확인합니다.</summary>
      <returns>
            두 개체가 같은 설정을 가지면 true이고, 그렇지 않으면 false입니다.</returns>
      <param name="first">첫 번째 개체입니다.</param>
      <param name="second">두 번째 개체입니다.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.Editor.DragDrop.DragDropInfo.op_Inequality(Microsoft.VisualStudio.Text.Editor.DragDrop.DragDropInfo,Microsoft.VisualStudio.Text.Editor.DragDrop.DragDropInfo)">
      <summary>두 <see cref="T:Microsoft.VisualStudio.Text.Editor.DragDrop.DragDropInfo" /> 개체가 서로 다른 설정을 갖는지 여부를 확인합니다.</summary>
      <returns>
            두 개체가 서로 다른 설정을 가지면 true이고, 그렇지 않으면 false입니다.</returns>
      <param name="first">첫 번째 개체입니다.</param>
      <param name="second">두 번째 개체입니다.</param>
    </member>
    <member name="P:Microsoft.VisualStudio.Text.Editor.DragDrop.DragDropInfo.Source">
      <summary>끌어서 놓기 작업을 시작한 개체를 가져옵니다.</summary>
    </member>
    <member name="P:Microsoft.VisualStudio.Text.Editor.DragDrop.DragDropInfo.VirtualBufferPosition">
      <summary>끌어서 놓기 작업 동안 커서의 버퍼 위치를 가져옵니다.</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.Text.Editor.DragDrop.DragDropPointerEffects">
      <summary>끌기/놓기 작업의 효과를 지정합니다.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Text.Editor.DragDrop.DragDropPointerEffects.None">
      <summary>None은 끌기/놓기 작업이 허용되지 않음을 알립니다. 마우스 아이콘이 "허용되지 않음" 아이콘으로 변경되고 추적기가 표시되지 않습니다.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Text.Editor.DragDrop.DragDropPointerEffects.Copy">
      <summary>Copy는 끌기/놓기 작업을 수행하면 데이터가 복사될 것임을 알립니다. 마우스 아이콘이 복사 아이콘으로 변경됩니다.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Text.Editor.DragDrop.DragDropPointerEffects.Link">
      <summary>Link는 끌기/놓기 작업을 수행하면 바로 가기/링크가 생성될 것임을 알립니다. 마우스 아이콘이 바로 가기 생성 아이콘으로 변경됩니다.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Text.Editor.DragDrop.DragDropPointerEffects.Move">
      <summary>Move는 데이터가 끌기가 수행된 소스에서 놓기가 수행된 대상으로 이동될 것임을 알립니다. 마우스 아이콘이 이동 아이콘으로 변경됩니다.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Text.Editor.DragDrop.DragDropPointerEffects.Scroll">
      <summary>Scroll은 놓기 작업이 놓기 대상에서 스크롤을 발생시킬 것임을 나타냅니다.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Text.Editor.DragDrop.DragDropPointerEffects.Track">
      <summary>Track은 편집기에 놓는 위치에 대한 힌트를 제공하는 추적기가 사용자에게 표시될 것임을 나타냅니다.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Text.Editor.DragDrop.DragDropPointerEffects.All">
      <summary>All은 가능한 모든 효과를 함께 지정합니다.</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.Text.Editor.DragDrop.DropFormatAttribute">
      <summary>
        <see cref="T:Microsoft.VisualStudio.Text.Editor.DragDrop.IDropHandler" />에서 처리하는 형식을 지정합니다.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.Editor.DragDrop.DropFormatAttribute.#ctor(System.String)">
      <summary>지정된 놓기 형식을 사용하여 <see cref="T:Microsoft.VisualStudio.Text.Editor.DragDrop.DropFormatAttribute" />의 새 인스턴스를 초기화합니다.</summary>
      <param name="dropFormat">놓기 형식입니다.</param>
    </member>
    <member name="P:Microsoft.VisualStudio.Text.Editor.DragDrop.DropFormatAttribute.DropFormats">
      <summary>놓기 형식을 가져옵니다.</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.Text.Editor.DragDrop.DropHandlerBase">
      <summary>이 클래스는 편집기에 데이터를 놓는 작업을 처리하는 데 필요한 기본 기능을 제공합니다. 이 클래스는 Extender가 이 클래스를 확장하여 자체의 사용자 지정 놓기 처리기를 쉽게 제공할 수 있도록 편의용으로 제공됩니다.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.Editor.DragDrop.DropHandlerBase.#ctor(Microsoft.VisualStudio.Text.Editor.IWpfTextView)">
      <summary>지정된 텍스트 뷰에 대한 <see cref="T:Microsoft.VisualStudio.Text.Editor.DragDrop.DropHandlerBase" />의 새 인스턴스를 초기화합니다.</summary>
      <param name="wpfTextView">
        <see cref="T:Microsoft.VisualStudio.Text.Editor.IWpfTextView" />입니다. </param>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.Editor.DragDrop.DropHandlerBase.DeleteSpans(System.Collections.Generic.IList{Microsoft.VisualStudio.Text.ITrackingSpan})">
      <summary>
        <see cref="T:Microsoft.VisualStudio.Text.ITrackingSpan" /> 개체의 목록이 지정된 경우 이를 버퍼에서 삭제합니다.</summary>
      <returns>삭제가 취소되었으면 false를 반환하고, 그렇지 않으면 true를 반환합니다.</returns>
      <param name="spans">
        <see cref="T:Microsoft.VisualStudio.Text.ITrackingSpan" /> 개체의 목록입니다.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.Editor.DragDrop.DropHandlerBase.ExtractText(Microsoft.VisualStudio.Text.Editor.DragDrop.DragDropInfo)">
      <summary>이 메서드는 <see cref="T:Microsoft.VisualStudio.Text.Editor.DragDrop.DragDropInfo" /> 개체의 텍스트를 추출합니다.</summary>
      <returns>추출된 텍스트입니다.</returns>
      <param name="dragDropInfo">
        <see cref="T:Microsoft.VisualStudio.Text.Editor.DragDrop.DragDropInfo" />입니다.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.Editor.DragDrop.DropHandlerBase.GetDragDropEffect(Microsoft.VisualStudio.Text.Editor.DragDrop.DragDropInfo)">
      <summary>작업의 상태를 기반으로 사용자에게 표시되는 끌어서 놓기 효과를 확인합니다.</summary>
      <returns>
        <see cref="T:Microsoft.VisualStudio.Text.Editor.DragDrop.DragDropPointerEffects" />입니다.</returns>
      <param name="dragDropInfo">
        <see cref="T:Microsoft.VisualStudio.Text.Editor.DragDrop.DragDropInfo" />입니다.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.Editor.DragDrop.DropHandlerBase.HandleDataDropped(Microsoft.VisualStudio.Text.Editor.DragDrop.DragDropInfo)">
      <summary>끌어서 놓기 작업이 완료되었고 이제 마지막 작업(있는 경우)을 수행해야 함을 나타냅니다.</summary>
      <returns>
        <see cref="T:Microsoft.VisualStudio.Text.Editor.DragDrop.DragDropPointerEffects" />입니다.</returns>
      <param name="dragDropInfo">진행 중인 끌어서 놓기 작업에 대한 정보입니다.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.Editor.DragDrop.DropHandlerBase.HandleDragCanceled">
      <summary>끌어서 놓기 작업이 취소되었음을 나타냅니다.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.Editor.DragDrop.DropHandlerBase.HandleDraggingOver(Microsoft.VisualStudio.Text.Editor.DragDrop.DragDropInfo)">
      <summary>끌어서 놓기 작업이 진행 중임을 나타냅니다.</summary>
      <returns>
        <see cref="T:Microsoft.VisualStudio.Text.Editor.DragDrop.DragDropPointerEffects" />입니다.</returns>
      <param name="dragDropInfo">진행 중인 끌어서 놓기 작업에 대한 정보입니다.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.Editor.DragDrop.DropHandlerBase.HandleDragStarted(Microsoft.VisualStudio.Text.Editor.DragDrop.DragDropInfo)">
      <summary>끌어서 놓기 작업의 시작을 나타냅니다.</summary>
      <returns>
        <see cref="T:Microsoft.VisualStudio.Text.Editor.DragDrop.DragDropPointerEffects" />입니다.</returns>
      <param name="dragDropInfo">진행 중인 끌어서 놓기 작업에 대한 정보입니다.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.Editor.DragDrop.DropHandlerBase.InsertText(Microsoft.VisualStudio.Text.VirtualSnapshotPoint,System.String)">
      <summary>지정된 위치에 텍스트 데이터를 삽입합니다.</summary>
      <returns>작업이 취소되었으면 false이고, 그렇지 않으면 true입니다.</returns>
      <param name="position">데이터가 삽입될 위치입니다.</param>
      <param name="data">삽입될 텍스트입니다.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.Editor.DragDrop.DropHandlerBase.IsDropEnabled(Microsoft.VisualStudio.Text.Editor.DragDrop.DragDropInfo)">
      <summary>처리기가 끌어서 놓기 작업에 대한 데이터를 받아들일 수 있는지 여부를 확인합니다.</summary>
      <returns>이동 또는 복사 작업을 사용할 수 있으면 true이고, 그렇지 않으면 false입니다.</returns>
      <param name="dragDropInfo">끌어서 놓기 작업에 대한 정보입니다.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.Editor.DragDrop.DropHandlerBase.MoveText(Microsoft.VisualStudio.Text.VirtualSnapshotPoint,System.Collections.Generic.IList{Microsoft.VisualStudio.Text.ITrackingSpan},System.String)">
      <summary>선택 콘텐츠를 삭제하고 toInsert를 insertionPoint에 삽입하여 버퍼에서 데이터를 한 위치에서 다른 위치로 이동합니다.</summary>
      <returns>작업이 성공했으면 true이고, 그렇지 않으면 false입니다.</returns>
      <param name="position">데이터가 삽입될 위치입니다.</param>
      <param name="selectionSpans">추적 범위의 목록입니다.</param>
      <param name="data">삽입될 텍스트입니다.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.Editor.DragDrop.DropHandlerBase.PerformPostEditActions(Microsoft.VisualStudio.Text.Editor.DragDrop.DragDropInfo,System.Boolean)">
      <summary>이 메서드는 버퍼를 편집한 후에 호출되어 편집 이후에 필요한 작업을 수행합니다.</summary>
      <param name="dragDropInfo">현재 진행 중인 끌기/놓기 작업에 대한 정보를 포함하고 있는 <see cref="T:Microsoft.VisualStudio.Text.Editor.DragDrop.DragDropInfo" />입니다.</param>
      <param name="successfulEdit">true이면 버퍼에서 수행된 편집이 성공한 것이고, 그렇지 않으면 편집에 실패한 것입니다.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.Editor.DragDrop.DropHandlerBase.PerformPreEditActions(Microsoft.VisualStudio.Text.Editor.DragDrop.DragDropInfo)">
      <summary>이 메서드는 버퍼를 편집하기 전에 호출되어 편집 이전에 필요한 작업을 수행합니다.</summary>
      <param name="dragDropInfo">현재 진행 중인 끌기/놓기 작업에 대한 정보를 포함하고 있는 <see cref="T:Microsoft.VisualStudio.Text.Editor.DragDrop.DragDropInfo" />입니다.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.Editor.DragDrop.DropHandlerBase.SelectText(Microsoft.VisualStudio.Text.ITrackingPoint,System.Int32,Microsoft.VisualStudio.Text.Editor.DragDrop.DragDropInfo,System.Boolean)">
      <summary>이 메서드는 놓기 작업이 끝날 때 텍스트를 선택합니다.</summary>
      <param name="insertionPoint">데이터가 놓여진 추적 지점입니다.</param>
      <param name="dataLength">버퍼에 삽입된 데이터의 길이입니다.</param>
      <param name="dragDropInfo">놓기에 대한 정보를 포함하고 있는 <see cref="T:Microsoft.VisualStudio.Text.Editor.DragDrop.DragDropInfo" /> 클래스입니다.</param>
      <param name="reverse">놓기 전에 기존 선택이 역방향이면 true입니다.</param>
    </member>
    <member name="P:Microsoft.VisualStudio.Text.Editor.DragDrop.DropHandlerBase.TextView">
      <summary>텍스트 뷰를 가져옵니다.</summary>
      <returns>
        <see cref="T:Microsoft.VisualStudio.Text.Editor.IWpfTextView" />입니다.</returns>
    </member>
    <member name="T:Microsoft.VisualStudio.Text.Editor.DragDrop.IDropHandler">
      <summary>서로 다른 데이터 형식의 끌어서 놓기 작업을 처리합니다.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.Editor.DragDrop.IDropHandler.HandleDataDropped(Microsoft.VisualStudio.Text.Editor.DragDrop.DragDropInfo)">
      <summary>끌어서 놓기 작업이 완료되었고 이제 마지막 작업(있는 경우)을 수행해야 함을 나타냅니다.</summary>
      <returns>이 놓기 작업의 끌어서 놓기 효과입니다. 예를 들어, 놓기 작업으로 데이터가 이동되면 DragDropPointerEffects.Move가 반환됩니다.</returns>
      <param name="dragDropInfo">진행 중인 끌어서 놓기 작업에 대한 정보입니다.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.Editor.DragDrop.IDropHandler.HandleDragCanceled">
      <summary>끌어서 놓기 작업이 취소되었음을 나타냅니다.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.Editor.DragDrop.IDropHandler.HandleDraggingOver(Microsoft.VisualStudio.Text.Editor.DragDrop.DragDropInfo)">
      <summary>끌어서 놓기 작업이 진행 중임을 나타냅니다.</summary>
      <returns>현재 작업에 대한 <see cref="T:Microsoft.VisualStudio.Text.Editor.DragDrop.DragDropPointerEffects" />입니다. 예를 들어, Ctrl 키가 눌릴 경우 복사 작업을 나타내도록 지정할 수 있습니다.</returns>
      <param name="dragDropInfo">진행 중인 끌어서 놓기 작업에 대한 정보입니다.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.Editor.DragDrop.IDropHandler.HandleDragStarted(Microsoft.VisualStudio.Text.Editor.DragDrop.DragDropInfo)">
      <summary>끌어서 놓기 작업의 시작을 나타냅니다.</summary>
      <returns>현재 작업에 대한 <see cref="T:Microsoft.VisualStudio.Text.Editor.DragDrop.DragDropPointerEffects" /> 개체입니다. 예를 들어, Ctrl 키가 눌릴 경우 복사 작업을 나타내도록 지정할 수 있습니다.</returns>
      <param name="dragDropInfo">진행 중인 끌어서 놓기 작업에 대한 정보입니다.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.Editor.DragDrop.IDropHandler.IsDropEnabled(Microsoft.VisualStudio.Text.Editor.DragDrop.DragDropInfo)">
      <summary>처리기가 끌어서 놓기 작업에 대한 데이터를 받아들일 수 있는지 여부를 확인합니다.</summary>
      <returns>
            처리기가 데이터를 지금 받아들일 수 있으면 true이고, 그렇지 않으면 false입니다.</returns>
      <param name="dragDropInfo">끌어서 놓기 작업에 대한 정보입니다.</param>
    </member>
    <member name="T:Microsoft.VisualStudio.Text.Editor.DragDrop.IDropHandlerProvider">
      <summary>
        <see cref="T:Microsoft.VisualStudio.Text.Editor.IWpfTextView" />의 <see cref="T:Microsoft.VisualStudio.Text.Editor.DragDrop.IDropHandler" />를 만듭니다.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.Editor.DragDrop.IDropHandlerProvider.GetAssociatedDropHandler(Microsoft.VisualStudio.Text.Editor.IWpfTextView)">
      <summary>지정된 <see cref="T:Microsoft.VisualStudio.Text.Editor.IWpfTextView" />의 <see cref="T:Microsoft.VisualStudio.Text.Editor.DragDrop.IDropHandler" />를 가져옵니다.</summary>
      <returns>
        <see cref="T:Microsoft.VisualStudio.Text.Editor.DragDrop.IDropHandler" />입니다.</returns>
      <param name="wpfTextView">놓기 처리기를 가져올 텍스트 뷰입니다.</param>
    </member>
    <member name="T:Microsoft.VisualStudio.Text.Editor.OptionsExtensionMethods.WpfViewOptionExtensions">
      <summary>
        <see cref="T:Microsoft.VisualStudio.Text.Editor.IWpfTextView" />와 연관된 옵션의 확장 메서드를 제공합니다.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.Editor.OptionsExtensionMethods.WpfViewOptionExtensions.AppearanceCategory(Microsoft.VisualStudio.Text.Editor.IEditorOptions)">
      <summary>모양 범주를 지정합니다.</summary>
      <returns>글꼴 속성 및 색을 찾을 위치를 결정하는 모양 범주입니다.</returns>
      <param name="options">
        <see cref="T:Microsoft.VisualStudio.Text.Editor.IEditorOptions" />입니다.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.Editor.OptionsExtensionMethods.WpfViewOptionExtensions.IsHighlightCurrentLineEnabled(Microsoft.VisualStudio.Text.Editor.IEditorOptions)">
      <summary>현재 줄을 강조 표시하는 옵션을 사용할 수 있는지 여부를 확인합니다.</summary>
      <returns>
            강조 표시 옵션을 사용할 수 있으면 true이고, 그렇지 않으면 false입니다.</returns>
      <param name="options">
        <see cref="T:Microsoft.VisualStudio.Text.Editor.IEditorOptions" />입니다.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.Editor.OptionsExtensionMethods.WpfViewOptionExtensions.IsMouseWheelZoomEnabled(Microsoft.VisualStudio.Text.Editor.IEditorOptions)">
      <summary>마우스 휠을 사용한 확대/축소가 허용되는지 여부를 확인합니다.</summary>
      <returns>
            마우스 휠을 사용한 확대/축소를 사용할 수 있으면 true이고, 그렇지 않으면 false입니다.</returns>
      <param name="options">편집기 옵션 집합입니다.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.Editor.OptionsExtensionMethods.WpfViewOptionExtensions.IsSimpleGraphicsEnabled(Microsoft.VisualStudio.Text.Editor.IEditorOptions)">
      <summary>선택 영역에 그라데이션을 그리는 옵션을 사용할 수 있는지 여부를 확인합니다.</summary>
      <returns>
            선택 영역에 그라데이션을 그리는 옵션을 사용할 수 있으면 true이고, 그렇지 않으면 false입니다.</returns>
      <param name="options">
        <see cref="T:Microsoft.VisualStudio.Text.Editor.IEditorOptions" />입니다.</param>
    </member>
    <member name="T:Microsoft.VisualStudio.Text.Formatting.IFormattedLine">
      <summary>
        <see cref="T:Microsoft.VisualStudio.Text.Editor.ITextView" />에서 서식이 지정된 텍스트 줄을 나타냅니다.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.Formatting.IFormattedLine.GetOrCreateVisual">
      <summary>이 서식이 지정된 텍스트 줄을 <see cref="T:System.Windows.Media.VisualCollection" />에 추가하는 데 사용할 수 있는 WPF <see cref="T:System.Windows.Media.Visual" />을 가져옵니다.</summary>
      <exception cref="T:System.ObjectDisposedException">This <see cref="T:Microsoft.VisualStudio.Text.Formatting.IWpfTextViewLine" /> has been disposed.</exception>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.Formatting.IFormattedLine.RemoveVisual">
      <summary>줄의 렌더링된 텍스트를 나타내는 WPF <see cref="T:System.Windows.Media.Visual" />을 제거합니다.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.Formatting.IFormattedLine.SetChange(Microsoft.VisualStudio.Text.Formatting.TextViewLineChange)">
      <summary>이 텍스트 줄의 Change 속성을 설정합니다.</summary>
      <param name="change">
        <see cref="T:Microsoft.VisualStudio.Text.Formatting.TextViewLineChange" />입니다.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.Formatting.IFormattedLine.SetDeltaY(System.Double)">
      <summary>이 서식이 지정된 텍스트 줄의 위쪽 위치에서 현재 뷰 레이아웃과 이전 뷰 레이아웃 사이에 변경된 내용을 설정합니다.</summary>
      <param name="deltaY">서식이 지정된 텍스트 줄의 새 deltaY 값입니다.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.Formatting.IFormattedLine.SetLineTransform(Microsoft.VisualStudio.Text.Formatting.LineTransform)">
      <summary>이 서식이 지정된 텍스트 줄에서 텍스트의 서식을 지정하는 데 사용되는 줄 변환을 설정합니다.</summary>
      <param name="transform">이 서식이 지정된 텍스트 줄의 줄 변환입니다.</param>
      <exception cref="T:System.ObjectDisposedException">This <see cref="T:Microsoft.VisualStudio.Text.Formatting.IWpfTextViewLine" /> has been disposed.</exception>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.Formatting.IFormattedLine.SetSnapshot(Microsoft.VisualStudio.Text.ITextSnapshot,Microsoft.VisualStudio.Text.ITextSnapshot)">
      <summary>이 서식이 지정된 텍스트 줄의 기준이 되는 <see cref="T:Microsoft.VisualStudio.Text.ITextSnapshot" />을 설정합니다.</summary>
      <param name="visualSnapshot">뷰 모델의 표시 버퍼에 있는 줄의 새 스냅숏입니다.</param>
      <param name="editSnapshot">뷰 모델의 편집 버퍼에 있는 줄의 새 스냅숏입니다.</param>
      <exception cref="T:System.ObjectDisposedException">This <see cref="T:Microsoft.VisualStudio.Text.Formatting.IWpfTextViewLine" /> has been disposed.</exception>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.Formatting.IFormattedLine.SetTop(System.Double)">
      <summary>이 서식이 지정된 텍스트 줄에서 텍스트의 서식을 지정하는 데 사용되는 위치를 설정합니다.</summary>
      <param name="top">서식이 지정된 텍스트 줄의 위쪽 위치입니다.</param>
      <exception cref="T:System.ObjectDisposedException">This <see cref="T:Microsoft.VisualStudio.Text.Formatting.IWpfTextViewLine" /> has been disposed.</exception>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.Formatting.IFormattedLine.SetVisibleArea(System.Windows.Rect)">
      <summary>이 텍스트 줄의 서식이 지정될 표시 영역을 설정합니다.</summary>
      <param name="visibleArea">이 텍스트 줄의 서식이 지정될 그리기 화면의 표시 영역 경계입니다.</param>
      <exception cref="T:System.ObjectDisposedException">This <see cref="T:Microsoft.VisualStudio.Text.Formatting.IWpfTextViewLine" /> has been disposed.</exception>
    </member>
    <member name="T:Microsoft.VisualStudio.Text.Formatting.IFormattedLineSource">
      <summary>텍스트 스냅숏을 사용하여 서식이 지정된 줄을 생성합니다.</summary>
    </member>
    <member name="P:Microsoft.VisualStudio.Text.Formatting.IFormattedLineSource.BaseIndentation">
      <summary>이 소스에서 생성한 모든 줄에 대한 기본 들여쓰기를 논리 픽셀 단위로 가져옵니다.</summary>
    </member>
    <member name="P:Microsoft.VisualStudio.Text.Formatting.IFormattedLineSource.ColumnWidth">
      <summary>열의 너비를 픽셀 단위로 가져옵니다.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.Formatting.IFormattedLineSource.FormatLineInVisualBuffer(Microsoft.VisualStudio.Text.ITextSnapshotLine)">
      <summary>
        <see cref="T:Microsoft.VisualStudio.Text.ITextSnapshotLine" />의 텍스트 및 장식에 서식을 지정합니다.</summary>
      <returns>해당 줄의 서식이 지정된 텍스트입니다.</returns>
      <param name="visualLine">서식을 지정할 줄입니다.</param>
    </member>
    <member name="P:Microsoft.VisualStudio.Text.Formatting.IFormattedLineSource.LineHeight"></member>
    <member name="P:Microsoft.VisualStudio.Text.Formatting.IFormattedLineSource.MaxAutoIndent">
      <summary>줄 바꿈된 줄에 대한 최대 자동 들여쓰기를 가져옵니다.</summary>
    </member>
    <member name="P:Microsoft.VisualStudio.Text.Formatting.IFormattedLineSource.SourceTextSnapshot">
      <summary>이 소스에서 서식이 지정된 텍스트를 제공할 소스 텍스트 스냅숏을 가져옵니다.</summary>
    </member>
    <member name="P:Microsoft.VisualStudio.Text.Formatting.IFormattedLineSource.TabSize">
      <summary>각 탭 정지 간의 공백 수를 가져옵니다.</summary>
    </member>
    <member name="P:Microsoft.VisualStudio.Text.Formatting.IFormattedLineSource.TextAndAdornmentSequencer">
      <summary>이 소스에서 사용하는 <see cref="T:Microsoft.VisualStudio.Text.Formatting.ITextAndAdornmentSequencer" />를 가져옵니다.</summary>
    </member>
    <member name="P:Microsoft.VisualStudio.Text.Formatting.IFormattedLineSource.TextHeightAboveBaseline"></member>
    <member name="P:Microsoft.VisualStudio.Text.Formatting.IFormattedLineSource.TextHeightBelowBaseline"></member>
    <member name="P:Microsoft.VisualStudio.Text.Formatting.IFormattedLineSource.TopTextSnapshot">
      <summary>이 소스에서 서식이 지정된 텍스트를 제공할 위쪽 텍스트 스냅숏을 가져옵니다.</summary>
    </member>
    <member name="P:Microsoft.VisualStudio.Text.Formatting.IFormattedLineSource.UseDisplayMode">
      <summary>포맷터가 텍스트 서식 지정에 <see cref="T:System.Windows.Media.TextFormattingMode" />.Display를 사용할지 여부를 나타냅니다.</summary>
    </member>
    <member name="P:Microsoft.VisualStudio.Text.Formatting.IFormattedLineSource.WordWrapWidth">
      <summary>서식이 지정된 텍스트를 여러 줄로 나눌 너비를 논리 픽셀 단위로 가져옵니다.</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.Text.Formatting.IFormattedTextSourceFactoryService">
      <summary>서식이 지정된 텍스트 소스를 만듭니다.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.Formatting.IFormattedTextSourceFactoryService.Create(Microsoft.VisualStudio.Text.ITextSnapshot,Microsoft.VisualStudio.Text.ITextSnapshot,System.Int32,System.Double,System.Double,System.Double,System.Boolean,Microsoft.VisualStudio.Text.Classification.IClassifier,Microsoft.VisualStudio.Text.Formatting.ITextAndAdornmentSequencer,Microsoft.VisualStudio.Text.Classification.IClassificationFormatMap)">
      <summary>지정된 뷰 구성에 대한 <see cref="T:Microsoft.VisualStudio.Text.Formatting.IFormattedLineSource" />를 만듭니다.</summary>
      <returns>해당 스냅숏의 새로운 텍스트 서식 소스입니다.</returns>
      <param name="sourceTextSnapshot">소스 버퍼에 대한 텍스트 스냅숏입니다.</param>
      <param name="visualBufferSnapshot">표시 버퍼에 대한 텍스트 스냅숏입니다.</param>
      <param name="tabSize">각 탭 정지 간의 공백 수입니다.</param>
      <param name="baseIndent">모든 줄에 대한 기본 들여쓰기입니다.</param>
      <param name="wordWrapWidth">논리 픽셀 단위의 자동 줄 바꿈 너비입니다.</param>
      <param name="maxAutoIndent">줄 바꿈된 줄의 최대 자동 들여쓰기 정도입니다.</param>
      <param name="useDisplayMode">텍스트 서식 지정에 WPF <see cref="T:System.Windows.Media.TextFormattingMode" />.Display를 사용합니다.</param>
      <param name="aggregateClassifier">뷰에 대한 모든 분류자의 집계입니다.</param>
      <param name="sequencer">뷰에 대한 텍스트 및 장식 시퀀서입니다. null일 경우 공간 협상 프로세스가 필요한 장식 요소가 없습니다.</param>
      <param name="classificationFormatMap">텍스트를 서식 지정하는 동안 사용할 분류 서식 맵입니다.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.Formatting.IFormattedTextSourceFactoryService.Create(Microsoft.VisualStudio.Text.ITextSnapshot,Microsoft.VisualStudio.Text.ITextSnapshot,System.Int32,System.Double,System.Double,System.Double,System.Boolean,Microsoft.VisualStudio.Text.Classification.IClassifier,Microsoft.VisualStudio.Text.Formatting.ITextAndAdornmentSequencer,Microsoft.VisualStudio.Text.Classification.IClassificationFormatMap,System.Boolean)">
      <summary>지정된 뷰 구성에 대한 <see cref="T:Microsoft.VisualStudio.Text.Formatting.IFormattedLineSource" />를 만듭니다.</summary>
      <returns>해당 스냅숏의 새로운 텍스트 서식 소스입니다.</returns>
      <param name="sourceTextSnapshot">소스 버퍼에 대한 텍스트 스냅숏입니다.</param>
      <param name="visualBufferSnapshot">표시 버퍼에 대한 텍스트 스냅숏입니다.</param>
      <param name="tabSize">각 탭 정지 간의 공백 수입니다.</param>
      <param name="baseIndent">모든 줄에 대한 기본 들여쓰기입니다.</param>
      <param name="wordWrapWidth">논리 픽셀 단위의 자동 줄 바꿈 너비입니다.</param>
      <param name="maxAutoIndent">줄 바꿈된 줄의 최대 자동 들여쓰기 정도입니다.</param>
      <param name="useDisplayMode">텍스트 서식 지정에 WPF <see cref="T:System.Windows.Media.TextFormattingMode" />.Display를 사용합니다.</param>
      <param name="aggregateClassifier">뷰에 대한 모든 분류자의 집계입니다.</param>
      <param name="sequencer">뷰에 대한 텍스트 및 장식 시퀀서입니다. null일 경우 공간 협상 프로세스가 필요한 장식 요소가 없습니다.</param>
      <param name="classificationFormatMap">텍스트를 서식 지정하는 동안 사용할 분류 서식 맵입니다.</param>
      <param name="isViewWrapEnabled">줄 바꿈된 줄에 자동 줄 바꿈 문자 모양을 사용할지 여부를 나타냅니다.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.Formatting.IFormattedTextSourceFactoryService.Create(Microsoft.VisualStudio.Text.ITextSnapshot,Microsoft.VisualStudio.Text.ITextSnapshot,System.Int32,System.Double,System.Double,System.Double,System.Boolean,Microsoft.VisualStudio.Text.Formatting.ITextAndAdornmentSequencer,Microsoft.VisualStudio.Text.Classification.IClassificationFormatMap)">
      <summary>지정된 뷰 구성에 대한 <see cref="T:Microsoft.VisualStudio.Text.Formatting.IFormattedLineSource" />를 만듭니다.</summary>
      <returns>해당 스냅숏의 새로운 텍스트 서식 소스입니다.</returns>
      <param name="sourceTextSnapshot">소스 버퍼에 대한 텍스트 스냅숏입니다.</param>
      <param name="visualBufferSnapshot">표시 버퍼에 대한 텍스트 스냅숏입니다.</param>
      <param name="tabSize">각 탭 정지 간의 공백 수입니다.</param>
      <param name="baseIndent">모든 줄에 대한 기본 들여쓰기입니다.</param>
      <param name="wordWrapWidth">논리 픽셀 단위의 자동 줄 바꿈 너비입니다.</param>
      <param name="maxAutoIndent">줄 바꿈된 줄의 최대 자동 들여쓰기 정도입니다.</param>
      <param name="useDisplayMode">텍스트 서식 지정에 WPF <see cref="T:System.Windows.Media.TextFormattingMode" />.Display를 사용합니다.</param>
      <param name="sequencer">뷰에 대한 텍스트 및 장식 시퀀서입니다. null일 경우 공간 협상 프로세스가 필요한 장식 요소가 없습니다.</param>
      <param name="classificationFormatMap">텍스트를 서식 지정하는 동안 사용할 분류 서식 맵입니다.</param>
    </member>
    <member name="T:Microsoft.VisualStudio.Text.Formatting.ILineTransformSource">
      <summary>서식이 지정된 텍스트 줄에 대한 줄 변환을 제공합니다.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.Formatting.ILineTransformSource.GetLineTransform(Microsoft.VisualStudio.Text.Formatting.ITextViewLine,System.Double,Microsoft.VisualStudio.Text.Editor.ViewRelativePosition)">
      <summary>서식이 지정된 텍스트의 해당 줄에 대한 줄 변환을 계산합니다.</summary>
      <returns>해당 줄의 줄 변환입니다.</returns>
      <param name="line">줄 변환을 계산할 줄입니다.</param>
      <param name="yPosition">줄의 Y 좌표입니다.</param>
      <param name="placement">
        <paramref name="yPosition" />을 기준으로 한 줄의 위치입니다.</param>
    </member>
    <member name="T:Microsoft.VisualStudio.Text.Formatting.ILineTransformSourceProvider">
      <summary>
        <see cref="T:Microsoft.VisualStudio.Text.Formatting.ILineTransformSource" /> 개체를 제공합니다.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.Formatting.ILineTransformSourceProvider.Create(Microsoft.VisualStudio.Text.Editor.IWpfTextView)">
      <summary>지정된 <paramref name="textView" />에 대한 <see cref="T:Microsoft.VisualStudio.Text.Formatting.ILineTransformSource" />를 만듭니다.</summary>
      <returns>새 <see cref="T:Microsoft.VisualStudio.Text.Formatting.ILineTransformSource" />입니다.  이 <see cref="T:Microsoft.VisualStudio.Text.Formatting.ILineTransformSourceProvider" />가 참여하지 않도록 결정되면 값이 null일 수 있습니다.</returns>
      <param name="textView">
        <see cref="T:Microsoft.VisualStudio.Text.Formatting.ILineTransformSource" />가 서식을 지정할 <see cref="T:Microsoft.VisualStudio.Text.Editor.IWpfTextView" />입니다.</param>
    </member>
    <member name="T:Microsoft.VisualStudio.Text.Formatting.IRtfBuilderService">
      <summary>스냅숏 범위의 컬렉션을 사용하여 RTF 형식의 텍스트를 생성합니다.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.Formatting.IRtfBuilderService.GenerateRtf(Microsoft.VisualStudio.Text.NormalizedSnapshotSpanCollection)">
      <summary>해당 스냅숏 범위의 서식이 지정된 텍스트를 포함하는 RTF 문자열을 가져옵니다.</summary>
      <returns>RTF 데이터가 포함된 <see cref="T:System.String" />입니다.</returns>
      <param name="spans">스냅숏 범위의 컬렉션입니다.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.Formatting.IRtfBuilderService.GenerateRtf(Microsoft.VisualStudio.Text.NormalizedSnapshotSpanCollection,Microsoft.VisualStudio.Text.Editor.ITextView)">
      <summary>해당 범위의 서식이 지정된 텍스트를 포함하는 RTF 문자열을 가져옵니다.</summary>
      <returns>RTF 데이터가 포함된 <see cref="T:System.String" />입니다.</returns>
      <param name="spans">스냅숏 범위의 컬렉션입니다.</param>
      <param name="textView">스냅숏 범위를 포함하는 <see cref="T:Microsoft.VisualStudio.Text.Editor.ITextView" />입니다.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.Formatting.IRtfBuilderService.GenerateRtf(Microsoft.VisualStudio.Text.NormalizedSnapshotSpanCollection,Microsoft.VisualStudio.Text.Editor.ITextView,System.String)">
      <summary>해당 범위의 서식이 지정된 텍스트를 포함하는 RTF 문자열을 가져옵니다.</summary>
      <returns>RTF 데이터가 포함된 <see cref="T:System.String" />입니다.</returns>
      <param name="spans">스냅숏 범위의 컬렉션입니다.</param>
      <param name="textView">스냅숏 범위를 포함하는 <see cref="T:Microsoft.VisualStudio.Text.Editor.ITextView" />입니다.</param>
      <param name="delimiter">
        <see cref="T:Microsoft.VisualStudio.Text.NormalizedSnapshotSpanCollection" />의 <see cref="T:Microsoft.VisualStudio.Text.SnapshotSpan" />에 대한 RTF 생성 코드 사이에 삽입할 구분 기호 문자열입니다.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.Formatting.IRtfBuilderService.GenerateRtf(Microsoft.VisualStudio.Text.NormalizedSnapshotSpanCollection,System.String)">
      <summary>해당 스냅숏 범위의 서식이 지정된 텍스트를 포함하는 RTF 문자열을 가져옵니다.</summary>
      <returns>RTF 데이터가 포함된 <see cref="T:System.String" />입니다.</returns>
      <param name="spans">스냅숏 범위의 컬렉션입니다.</param>
      <param name="delimiter">
        <see cref="T:Microsoft.VisualStudio.Text.NormalizedSnapshotSpanCollection" />의 <see cref="T:Microsoft.VisualStudio.Text.SnapshotSpan" />에 대한 RTF 생성 코드 사이에 삽입할 구분 기호 문자열입니다.</param>
    </member>
    <member name="T:Microsoft.VisualStudio.Text.Formatting.ITextParagraphPropertiesFactoryService">
      <summary>뷰의 줄에 서식을 지정할 때 사용할 <see cref="T:System.Windows.Media.TextFormatting.TextParagraphProperties" /> 클래스를 만듭니다.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.Formatting.ITextParagraphPropertiesFactoryService.Create(Microsoft.VisualStudio.Text.Formatting.IFormattedLineSource,Microsoft.VisualStudio.Text.Formatting.TextFormattingRunProperties,Microsoft.VisualStudio.Text.IMappingSpan,Microsoft.VisualStudio.Text.IMappingPoint,System.Int32)">
      <summary>제공된 구성의 <see cref="T:System.Windows.Media.TextFormatting.TextParagraphProperties" />를 만듭니다.</summary>
      <returns>줄에 서식을 지정할 때 사용할 <see cref="T:System.Windows.Media.TextFormatting.TextParagraphProperties" />입니다.</returns>
      <param name="formattedLineSource">줄 서식을 지정하는 <see cref="T:Microsoft.VisualStudio.Text.Formatting.IFormattedLineSource" />입니다. 이 개체에서 진행 중인 서식 지정 작업과 관련된 유용한 속성에 액세스할 수 있습니다.</param>
      <param name="textProperties">
        <see cref="T:System.Windows.Media.TextFormatting.TextParagraphProperties" />를 제공할 줄의 <see cref="T:Microsoft.VisualStudio.Text.Formatting.TextFormattingRunProperties" />입니다. 이 매개 변수는 줄의 텍스트 내용과 관련된 서식 지정 정보를 가져오는 데 사용할 수 있습니다.</param>
      <param name="line">서식 지정/렌더링되는 줄에 해당하는 <see cref="T:Microsoft.VisualStudio.Text.IMappingSpan" />입니다.</param>
      <param name="lineStart">서식 지정되는 줄 세그먼트의 시작에 해당하는 <see cref="T:Microsoft.VisualStudio.Text.IMappingPoint" />입니다. 이 매개 변수는 단일 <see cref="T:Microsoft.VisualStudio.Text.ITextSnapshotLine" />을 사용하여 뷰에 서식 지정/렌더링된 줄 여러 개를 표시하는 자동 줄 바꿈 시나리오와 관련이 있습니다.</param>
      <param name="lineSegment">현재 서식이 지정된 줄 세그먼트의 세그먼트 수입니다. 0부터 시작하는 인덱스이며 자동 줄 바꿈 줄에 적용됩니다. 줄이 4개의 세그먼트로 자동 줄 바꿈되면 0, 1, 2, 3의 LineSegment를 사용하여 줄에 대한 4번의 호출을 받게 됩니다.</param>
    </member>
    <member name="T:Microsoft.VisualStudio.Text.Formatting.IWpfTextViewLine">
      <summary>
        <see cref="T:Microsoft.VisualStudio.Text.Editor.ITextView" />에서 렌더링된 텍스트의 줄을 나타냅니다.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.Formatting.IWpfTextViewLine.GetCharacterFormatting(Microsoft.VisualStudio.Text.SnapshotPoint)">
      <summary>줄의 특정 문자에 대한 서식을 가져옵니다.</summary>
      <returns>해당 문자의 서식을 지정하는 데 사용되는 <see cref="T:System.Windows.Media.TextFormatting.TextRunProperties" />입니다.</returns>
      <param name="bufferPosition">원하는 문자의 버퍼 위치입니다.</param>
      <exception cref="T:System.ObjectDisposedException">this <see cref="T:Microsoft.VisualStudio.Text.Formatting.IWpfTextViewLine" /> has been disposed.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="bufferPosition" /> does not correspond to a position on this line.</exception>
    </member>
    <member name="P:Microsoft.VisualStudio.Text.Formatting.IWpfTextViewLine.TextLines">
      <summary>서식이 지정된 텍스트 줄을 구성하는 WPF 텍스트 줄 목록을 가져옵니다.</summary>
      <exception cref="T:System.ObjectDisposedException">this <see cref="T:Microsoft.VisualStudio.Text.Formatting.IWpfTextViewLine" /> has been disposed of.</exception>
    </member>
    <member name="P:Microsoft.VisualStudio.Text.Formatting.IWpfTextViewLine.VisibleArea">
      <summary>이 텍스트 줄이 렌더링될 표시 영역을 가져옵니다.</summary>
      <exception cref="T:System.ObjectDisposedException">this <see cref="T:Microsoft.VisualStudio.Text.Formatting.IWpfTextViewLine" /> has been disposed.</exception>
    </member>
    <member name="T:Microsoft.VisualStudio.Text.Formatting.TextFormattingParagraphProperties">
      <summary>텍스트 서식 속성을 제공합니다.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.Formatting.TextFormattingParagraphProperties.#ctor(Microsoft.VisualStudio.Text.Formatting.TextFormattingRunProperties)">
      <summary>
        <see cref="T:Microsoft.VisualStudio.Text.Formatting.TextFormattingParagraphProperties" />의 새 인스턴스를 초기화합니다.</summary>
      <param name="defaultTextRunProperties">단락의 기본 속성입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="defaultTextRunProperties" /> is null.</exception>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.Formatting.TextFormattingParagraphProperties.#ctor(Microsoft.VisualStudio.Text.Formatting.TextFormattingRunProperties,System.Double)">
      <summary>
        <see cref="T:Microsoft.VisualStudio.Text.Formatting.TextFormattingParagraphProperties" />의 새 인스턴스를 초기화합니다.</summary>
      <param name="defaultTextRunProperties">단락의 기본 속성입니다.</param>
      <param name="defaultTabSize">탭 크기(픽셀 단위)입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="defaultTextRunProperties" /> or <paramref name="defaultTabSize" /> is null.</exception>
    </member>
    <member name="P:Microsoft.VisualStudio.Text.Formatting.TextFormattingParagraphProperties.DefaultIncrementalTab">
      <summary>기본 증분 탭을 가져옵니다.</summary>
    </member>
    <member name="P:Microsoft.VisualStudio.Text.Formatting.TextFormattingParagraphProperties.DefaultTextRunProperties">
      <summary>기본 텍스트 런 속성을 가져옵니다.</summary>
    </member>
    <member name="P:Microsoft.VisualStudio.Text.Formatting.TextFormattingParagraphProperties.FirstLineInParagraph">
      <summary>단락의 첫 번째 줄인지 여부를 확인합니다.</summary>
    </member>
    <member name="P:Microsoft.VisualStudio.Text.Formatting.TextFormattingParagraphProperties.FlowDirection">
      <summary>흐름 방향을 가져옵니다.</summary>
    </member>
    <member name="P:Microsoft.VisualStudio.Text.Formatting.TextFormattingParagraphProperties.Indent">
      <summary>들여쓰기 크기를 가져옵니다.</summary>
    </member>
    <member name="P:Microsoft.VisualStudio.Text.Formatting.TextFormattingParagraphProperties.LineHeight">
      <summary>줄 높이를 가져옵니다.</summary>
    </member>
    <member name="P:Microsoft.VisualStudio.Text.Formatting.TextFormattingParagraphProperties.TextAlignment">
      <summary>텍스트 맞춤을 가져옵니다.</summary>
    </member>
    <member name="P:Microsoft.VisualStudio.Text.Formatting.TextFormattingParagraphProperties.TextMarkerProperties">
      <summary>텍스트 표식 속성을 가져옵니다.</summary>
    </member>
    <member name="P:Microsoft.VisualStudio.Text.Formatting.TextFormattingParagraphProperties.TextWrapping">
      <summary>텍스트 줄 바꿈을 가져옵니다.</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.Text.Formatting.TextFormattingRunProperties">
      <summary>텍스트 서식 속성 정보를 보유합니다. 이 클래스는 추상 TextRunProperties 클래스에서 파생됩니다.</summary>
    </member>
    <member name="P:Microsoft.VisualStudio.Text.Formatting.TextFormattingRunProperties.BackgroundBrush">
      <summary>배경 브러시를 가져옵니다.</summary>
      <returns>배경 브러시입니다.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.Text.Formatting.TextFormattingRunProperties.BackgroundBrushEmpty">
      <summary>배경 브러시가 비어 있는지 여부를 확인합니다.</summary>
      <returns>
            배경 브러시가 비어 있으면 true이고, 그렇지 않으면 false입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.Formatting.TextFormattingRunProperties.BackgroundBrushSame(System.Windows.Media.Brush)">
      <summary>이 <see cref="T:Microsoft.VisualStudio.Text.Formatting.TextFormattingRunProperties" />의 배경 브러시가 <paramref name="brush" />와 같은지 여부를 확인합니다.</summary>
      <returns>
            배경 브러시가 같으면 true이고, 다르면 false입니다.</returns>
      <param name="brush">다른 <see cref="T:System.Windows.Media.Brush" />입니다.</param>
    </member>
    <member name="P:Microsoft.VisualStudio.Text.Formatting.TextFormattingRunProperties.BackgroundOpacity"></member>
    <member name="P:Microsoft.VisualStudio.Text.Formatting.TextFormattingRunProperties.BackgroundOpacityEmpty"></member>
    <member name="P:Microsoft.VisualStudio.Text.Formatting.TextFormattingRunProperties.Bold"></member>
    <member name="P:Microsoft.VisualStudio.Text.Formatting.TextFormattingRunProperties.BoldEmpty"></member>
    <member name="M:Microsoft.VisualStudio.Text.Formatting.TextFormattingRunProperties.ClearBackgroundBrush">
      <summary>배경 브러시만 제외하고 속성이 모두 같은 새 <see cref="T:Microsoft.VisualStudio.Text.Formatting.TextFormattingRunProperties" />를 가져옵니다.</summary>
      <returns>
        <see cref="T:Microsoft.VisualStudio.Text.Formatting.TextFormattingRunProperties" />입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.Formatting.TextFormattingRunProperties.ClearBackgroundOpacity"></member>
    <member name="M:Microsoft.VisualStudio.Text.Formatting.TextFormattingRunProperties.ClearBold"></member>
    <member name="M:Microsoft.VisualStudio.Text.Formatting.TextFormattingRunProperties.ClearCultureInfo">
      <summary>문화권 정보만 제외하고 속성이 모두 같은 새 <see cref="T:Microsoft.VisualStudio.Text.Formatting.TextFormattingRunProperties" />를 가져옵니다.</summary>
      <returns>
        <see cref="T:Microsoft.VisualStudio.Text.Formatting.TextFormattingRunProperties" />입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.Formatting.TextFormattingRunProperties.ClearFontHintingEmSize">
      <summary>글꼴 힌트 크기만 제외하고 속성이 모두 같은 새 <see cref="T:Microsoft.VisualStudio.Text.Formatting.TextFormattingRunProperties" />를 가져옵니다.</summary>
      <returns>
        <see cref="T:Microsoft.VisualStudio.Text.Formatting.TextFormattingRunProperties" />입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.Formatting.TextFormattingRunProperties.ClearFontRenderingEmSize">
      <summary>렌더링 크기만 제외하고 속성이 모두 같은 새 <see cref="T:Microsoft.VisualStudio.Text.Formatting.TextFormattingRunProperties" />를 가져옵니다.</summary>
      <returns>
        <see cref="T:Microsoft.VisualStudio.Text.Formatting.TextFormattingRunProperties" />입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.Formatting.TextFormattingRunProperties.ClearForegroundBrush">
      <summary>전경 브러시만 제외하고 속성이 모두 같은 새 <see cref="T:Microsoft.VisualStudio.Text.Formatting.TextFormattingRunProperties" />를 가져옵니다.</summary>
      <returns>
        <see cref="T:Microsoft.VisualStudio.Text.Formatting.TextFormattingRunProperties" />입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.Formatting.TextFormattingRunProperties.ClearForegroundOpacity"></member>
    <member name="M:Microsoft.VisualStudio.Text.Formatting.TextFormattingRunProperties.ClearItalic"></member>
    <member name="M:Microsoft.VisualStudio.Text.Formatting.TextFormattingRunProperties.ClearTextDecorations">
      <summary>텍스트 장식만 제외하고 속성이 모두 같은 새 <see cref="T:Microsoft.VisualStudio.Text.Formatting.TextFormattingRunProperties" />를 가져옵니다.</summary>
      <returns>
        <see cref="T:Microsoft.VisualStudio.Text.Formatting.TextFormattingRunProperties" />입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.Formatting.TextFormattingRunProperties.ClearTextEffects">
      <summary>텍스트 효과만 제외하고 속성이 모두 같은 새 <see cref="T:Microsoft.VisualStudio.Text.Formatting.TextFormattingRunProperties" />를 가져옵니다.</summary>
      <returns>
        <see cref="T:Microsoft.VisualStudio.Text.Formatting.TextFormattingRunProperties" />입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.Formatting.TextFormattingRunProperties.ClearTypeface">
      <summary>서체만 제외하고 속성이 모두 같은 새 <see cref="T:Microsoft.VisualStudio.Text.Formatting.TextFormattingRunProperties" />를 가져옵니다.</summary>
      <returns>
        <see cref="T:Microsoft.VisualStudio.Text.Formatting.TextFormattingRunProperties" />입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.Formatting.TextFormattingRunProperties.CreateTextFormattingRunProperties">
      <summary>
        <see cref="T:Microsoft.VisualStudio.Text.Formatting.TextFormattingRunProperties" />의 새 인스턴스를 초기화합니다.</summary>
      <returns>시스템의 기본 TextFormattingRunProperties입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.Formatting.TextFormattingRunProperties.CreateTextFormattingRunProperties(System.Windows.Media.Brush,System.Windows.Media.Brush,System.Windows.Media.Typeface,System.Nullable{System.Double},System.Nullable{System.Double},System.Windows.TextDecorationCollection,System.Windows.Media.TextEffectCollection,System.Globalization.CultureInfo)">
      <summary>지정된 옵션을 사용하여 <see cref="T:Microsoft.VisualStudio.Text.Formatting.TextFormattingRunProperties" />의 새 인스턴스를 초기화합니다.</summary>
      <returns>요청된 속성이 있는 TextFormattingRunProperties 개체입니다.</returns>
      <param name="foreground">텍스트의 전경 브러시입니다.</param>
      <param name="background">텍스트의 배경 브러시입니다.</param>
      <param name="typeface">텍스트의 서체입니다.</param>
      <param name="size">텍스트의 크기입니다.</param>
      <param name="hintingSize">텍스트 힌트 크기입니다.</param>
      <param name="textDecorations">텍스트의 텍스트 장식입니다.</param>
      <param name="textEffects">텍스트의 텍스트 효과입니다.</param>
      <param name="cultureInfo">문화권 정보입니다.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.Formatting.TextFormattingRunProperties.CreateTextFormattingRunProperties(System.Windows.Media.Typeface,System.Double,System.Windows.Media.Color)">
      <summary>지정된 옵션을 사용하여 <see cref="T:Microsoft.VisualStudio.Text.Formatting.TextFormattingRunProperties" />의 새 인스턴스를 초기화합니다.</summary>
      <returns>요청된 속성이 있는 TextFormattingRunProperties입니다.</returns>
      <param name="typeface">텍스트의 서체입니다.</param>
      <param name="size">텍스트의 크기입니다.</param>
      <param name="foreground">텍스트의 전경색입니다.</param>
    </member>
    <member name="P:Microsoft.VisualStudio.Text.Formatting.TextFormattingRunProperties.CultureInfo">
      <summary>문화권 정보를 가져옵니다.</summary>
      <returns>문화권 정보입니다.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.Text.Formatting.TextFormattingRunProperties.CultureInfoEmpty">
      <summary>문화권 정보가 비어 있는지 여부를 확인합니다.</summary>
      <returns>
            문화권 정보가 비어 있으면 true이고, 그렇지 않으면 false입니다.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.Text.Formatting.TextFormattingRunProperties.FontHintingEmSize">
      <summary>글꼴 힌트 크기를 가져옵니다.</summary>
      <returns>글꼴 힌트 크기입니다.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.Text.Formatting.TextFormattingRunProperties.FontHintingEmSizeEmpty">
      <summary>글꼴 힌트 크기가 비어 있는지 여부를 확인합니다.</summary>
      <returns>
            글꼴 힌트가 비어 있으면 true이고, 그렇지 않으면 false입니다.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.Text.Formatting.TextFormattingRunProperties.FontRenderingEmSize">
      <summary>글꼴 렌더링 크기를 가져옵니다.</summary>
      <returns>글꼴 렌더링 크기입니다.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.Text.Formatting.TextFormattingRunProperties.FontRenderingEmSizeEmpty">
      <summary>크기가 비어 있는지 여부를 확인합니다.</summary>
      <returns>
            크기가 비어 있으면 true이고, 그렇지 않으면 false입니다.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.Text.Formatting.TextFormattingRunProperties.ForegroundBrush">
      <summary>전경 브러시를 가져옵니다.</summary>
      <returns>전경 브러시입니다.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.Text.Formatting.TextFormattingRunProperties.ForegroundBrushEmpty">
      <summary>전경 브러시가 비어 있는지 여부를 확인합니다.</summary>
      <returns>
            전경 브러시가 비어 있으면 true이고, 그렇지 않으면 false입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.Formatting.TextFormattingRunProperties.ForegroundBrushSame(System.Windows.Media.Brush)">
      <summary>이 <see cref="T:Microsoft.VisualStudio.Text.Formatting.TextFormattingRunProperties" />의 전경 브러시가 <paramref name="brush" />와 같은지 여부를 확인합니다.</summary>
      <returns>
            전경 브러시가 같으면 true이고, 다르면 false입니다.</returns>
      <param name="brush">다른 <see cref="T:System.Windows.Media.Brush" />입니다.</param>
    </member>
    <member name="P:Microsoft.VisualStudio.Text.Formatting.TextFormattingRunProperties.ForegroundOpacity"></member>
    <member name="P:Microsoft.VisualStudio.Text.Formatting.TextFormattingRunProperties.ForegroundOpacityEmpty"></member>
    <member name="M:Microsoft.VisualStudio.Text.Formatting.TextFormattingRunProperties.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>XamlWriter를 사용하여 <see cref="T:Microsoft.VisualStudio.Text.Formatting.TextFormattingRunProperties" /> 개체를 serialize합니다.</summary>
      <param name="info">serialization에 사용되는 SerializationInfo입니다.</param>
      <param name="context">serialization 컨텍스트입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="info" /> is null.</exception>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.Formatting.TextFormattingRunProperties.GetRealObject(System.Runtime.Serialization.StreamingContext)">
      <summary>내부 풀에 추가된 <see cref="T:Microsoft.VisualStudio.Text.Formatting.TextFormattingRunProperties" /> 개체를 가져옵니다.</summary>
      <returns>내부 풀에 추가된 <see cref="T:Microsoft.VisualStudio.Text.Formatting.TextFormattingRunProperties" /> 개체입니다.</returns>
      <param name="context">deserialization 컨텍스트입니다.</param>
    </member>
    <member name="P:Microsoft.VisualStudio.Text.Formatting.TextFormattingRunProperties.Italic"></member>
    <member name="P:Microsoft.VisualStudio.Text.Formatting.TextFormattingRunProperties.ItalicEmpty"></member>
    <member name="M:Microsoft.VisualStudio.Text.Formatting.TextFormattingRunProperties.SameSize(Microsoft.VisualStudio.Text.Formatting.TextFormattingRunProperties)">
      <summary>두 <see cref="T:Microsoft.VisualStudio.Text.Formatting.TextFormattingRunProperties" />의 글꼴 크기가 같은지 여부를 확인합니다.</summary>
      <returns>
            크기가 서로 같으면 true이고, 다르면 false입니다.</returns>
      <param name="other">다른 <see cref="T:Microsoft.VisualStudio.Text.Formatting.TextFormattingRunProperties" />입니다.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.Formatting.TextFormattingRunProperties.SetBackground(System.Windows.Media.Color)">
      <summary>이 개체의 속성을 사용하되 배경을 <paramref name="background" />로 설정하여 새 <see cref="T:Microsoft.VisualStudio.Text.Formatting.TextFormattingRunProperties" />를 가져옵니다.</summary>
      <returns>
        <see cref="T:Microsoft.VisualStudio.Text.Formatting.TextFormattingRunProperties" />입니다.</returns>
      <param name="background">새 배경색입니다.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.Formatting.TextFormattingRunProperties.SetBackgroundBrush(System.Windows.Media.Brush)">
      <summary>이 개체의 속성을 사용하되 배경 브러시를 <paramref name="brush" />로 설정하여 새 <see cref="T:Microsoft.VisualStudio.Text.Formatting.TextFormattingRunProperties" />를 가져옵니다.</summary>
      <returns>
        <see cref="T:Microsoft.VisualStudio.Text.Formatting.TextFormattingRunProperties" />입니다.</returns>
      <param name="brush">새 배경 브러시입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="brush" /> is null.</exception>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.Formatting.TextFormattingRunProperties.SetBackgroundOpacity(System.Double)"></member>
    <member name="M:Microsoft.VisualStudio.Text.Formatting.TextFormattingRunProperties.SetBold(System.Boolean)"></member>
    <member name="M:Microsoft.VisualStudio.Text.Formatting.TextFormattingRunProperties.SetCultureInfo(System.Globalization.CultureInfo)">
      <summary>이 개체의 속성을 사용하되 문화권을 <paramref name="cultureInfo" />로 설정하여 새 <see cref="T:Microsoft.VisualStudio.Text.Formatting.TextFormattingRunProperties" />를 가져옵니다.</summary>
      <returns>
        <see cref="T:Microsoft.VisualStudio.Text.Formatting.TextFormattingRunProperties" />입니다.</returns>
      <param name="cultureInfo">새 문화권 정보입니다.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.Formatting.TextFormattingRunProperties.SetFontHintingEmSize(System.Double)">
      <summary>이 개체의 속성을 사용하되 글꼴 힌트 크기를 <paramref name="hintingSize" />로 설정하여 새 <see cref="T:Microsoft.VisualStudio.Text.Formatting.TextFormattingRunProperties" />를 가져옵니다.</summary>
      <returns>
        <see cref="T:Microsoft.VisualStudio.Text.Formatting.TextFormattingRunProperties" />입니다.</returns>
      <param name="hintingSize">새 글꼴 힌트 크기입니다.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.Formatting.TextFormattingRunProperties.SetFontRenderingEmSize(System.Double)">
      <summary>이 개체의 속성을 사용하되 글꼴 렌더링 크기를 <paramref name="renderingSize" />로 설정하여 새 <see cref="T:Microsoft.VisualStudio.Text.Formatting.TextFormattingRunProperties" />를 가져옵니다.</summary>
      <returns>
        <see cref="T:Microsoft.VisualStudio.Text.Formatting.TextFormattingRunProperties" />입니다.</returns>
      <param name="renderingSize">새 렌더링 크기입니다.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.Formatting.TextFormattingRunProperties.SetForeground(System.Windows.Media.Color)">
      <summary>이 개체의 속성을 사용하되 전경을 <paramref name="foreground" />로 설정하여 새 <see cref="T:Microsoft.VisualStudio.Text.Formatting.TextFormattingRunProperties" />를 가져옵니다.</summary>
      <returns>
        <see cref="T:Microsoft.VisualStudio.Text.Formatting.TextFormattingRunProperties" />입니다.</returns>
      <param name="foreground">새 전경색입니다.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.Formatting.TextFormattingRunProperties.SetForegroundBrush(System.Windows.Media.Brush)">
      <summary>이 개체의 속성을 사용하되 새 전경 <see cref="T:System.Windows.Media.Brush" />를 <paramref name="brush" />로 설정하여 새 <see cref="T:Microsoft.VisualStudio.Text.Formatting.TextFormattingRunProperties" />를 가져옵니다.</summary>
      <returns>
        <see cref="T:Microsoft.VisualStudio.Text.Formatting.TextFormattingRunProperties" />입니다.</returns>
      <param name="brush">새 전경 브러시입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="brush" />is null.</exception>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.Formatting.TextFormattingRunProperties.SetForegroundOpacity(System.Double)"></member>
    <member name="M:Microsoft.VisualStudio.Text.Formatting.TextFormattingRunProperties.SetItalic(System.Boolean)"></member>
    <member name="M:Microsoft.VisualStudio.Text.Formatting.TextFormattingRunProperties.SetTextDecorations(System.Windows.TextDecorationCollection)">
      <summary>이 개체의 속성을 사용하되 텍스트 장식을 <paramref name="textDecorations" />로 설정하여 새 <see cref="T:Microsoft.VisualStudio.Text.Formatting.TextFormattingRunProperties" />를 가져옵니다.</summary>
      <returns>
        <see cref="T:Microsoft.VisualStudio.Text.Formatting.TextFormattingRunProperties" />입니다.</returns>
      <param name="textDecorations">새 텍스트 장식 컬렉션입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="textDecorations" /> is null.</exception>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.Formatting.TextFormattingRunProperties.SetTextEffects(System.Windows.Media.TextEffectCollection)">
      <summary>이 개체의 속성을 사용하되 텍스트 효과를 <paramref name="textEffects" />로 설정하여 새 <see cref="T:Microsoft.VisualStudio.Text.Formatting.TextFormattingRunProperties" />를 가져옵니다.</summary>
      <returns>
        <see cref="T:Microsoft.VisualStudio.Text.Formatting.TextFormattingRunProperties" />입니다.</returns>
      <param name="textEffects">새 텍스트 효과 컬렉션입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="textEffects" /> is null.</exception>
    </member>
    <member name="M:Microsoft.VisualStudio.Text.Formatting.TextFormattingRunProperties.SetTypeface(System.Windows.Media.Typeface)">
      <summary>이 개체의 속성을 사용하되 서체를 <paramref name="typeface" />로 설정하여 새 <see cref="T:Microsoft.VisualStudio.Text.Formatting.TextFormattingRunProperties" />를 가져옵니다.</summary>
      <returns>
        <see cref="T:Microsoft.VisualStudio.Text.Formatting.TextFormattingRunProperties" />입니다.</returns>
      <param name="typeface">새 서체입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="typeface" /> is null.</exception>
    </member>
    <member name="P:Microsoft.VisualStudio.Text.Formatting.TextFormattingRunProperties.TextDecorations">
      <summary>텍스트의 장식을 가져옵니다.</summary>
      <returns>텍스트 장식입니다.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.Text.Formatting.TextFormattingRunProperties.TextDecorationsEmpty">
      <summary>텍스트 장식 컬렉션이 비어 있는지 여부를 확인합니다.</summary>
      <returns>
            텍스트 장식 컬렉션이 비어 있으면 true이고, 그렇지 않으면 false입니다.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.Text.Formatting.TextFormattingRunProperties.TextEffects">
      <summary>텍스트의 텍스트 효과를 가져옵니다.</summary>
      <returns>텍스트 효과입니다.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.Text.Formatting.TextFormattingRunProperties.TextEffectsEmpty">
      <summary>텍스트 효과 컬렉션이 비어 있는지 여부를 확인합니다.</summary>
      <returns>
            텍스트 효과 컬렉션이 비어 있으면 true이고, 그렇지 않으면 false입니다.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.Text.Formatting.TextFormattingRunProperties.Typeface">
      <summary>텍스트의 서체를 가져옵니다.</summary>
      <returns>서체입니다.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.Text.Formatting.TextFormattingRunProperties.TypefaceEmpty">
      <summary>서체가 비어 있는지 여부를 확인합니다.</summary>
      <returns>
            서체가 비어 있으면 true이고, 그렇지 않으면 false입니다.</returns>
    </member>
  </members>
</doc>